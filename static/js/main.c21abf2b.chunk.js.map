{"version":3,"sources":["components/images/SVG/brand_icon.svg","store/GlobalState.js","store/reducers.js","components/images/PNG/buffett.png","components/Charts/Doughnut.js","components/Tables/WarrenTable.js","components/Content/WarrenBuffet.js","components/Form/DatePickerExample.js","components/Form/BuySellModal.js","components/Form/FormContainer.js","components/Form/Modal.js","components/Form/TriggerButton.js","components/Form/ModalPopup.js","components/images/JPG/portfolioImg.JPG","components/Content/PortfolioAdd.js","components/images/JPG/frontpage_images01.jpg","components/images/SVG/free_try_kakao.svg","components/images/JPG/doughnut_chart02.jpg","components/images/JPG/grafana.JPG","components/logo/Logo.js","components/Content/IntroPageContent.js","components/header/WallHeader.js","components/Charts/StockChart.js","components/header/ShortHeader.js","components/Form/MenuIconThreeDots.js","components/Form/AlertDialogModal.js","components/Content/PortfolioManageContent.js","components/Form/ShowAndAddCategory.js","components/Form/StockAutoCompleteSearchBar.js","components/Form/StockAutoComplete2.js","components/Form/StockAutoComplete3.js","components/Form/KRWFormHooks.js","components/Form/KRWFormModal.js","components/Tables/CashTable.js","components/Form/FormHookSecond.js","components/Form/FormModalHooks.js","components/Tables/OneStockDetailedTradingHistory.js","components/Tables/EasyTableBody2.js","components/Tables/EasyTable.js","components/Form/CategoryPortfolioTable.js","components/json/pastel_tone_color.js","components/json/colors_for_piecharts.js","components/Charts/RechartsDoublePie3.js","components/Form/FormHookForGoalAssetRatio.js","components/Form/FormModalForGoalAssetRatio.js","components/Form/SimpleCardGoalRatio.js","components/pages/DiversifiedPortfolio.js","components/pages/PortfolioManage.js","components/pages/NewPortfolio.js","App.js","index.js"],"names":["initialState","loginInfo","data","jsKey","access_token","id","user","portfolioIdList","portfolioInfo","activePortfolioId","krwCost","usdCost","krwRealTimeValue","usdRealTimeValue","krwTodayEarnValue","usdTodayEarnValue","rerender","GlobalContext","createContext","GlobalProvider","children","useReducer","userReducer","userState","userDispatch","stockReducer","Provider","value","state","action","type","produce","draft","console","log","portfolios2","cost","payload","axios","get","headers","Authorization","then","res","code","companyName","warrenStockData","map","warren","volumData","parseFloat","Math","round","replace","backgroundColor2","pastelColors","color","Doughnut2","labels","slice","datasets","backgroundColor","hoverBackgroundColor","i","length","options","legend","display","Table","columns","useTable","getTableProps","headerGroups","rows","prepareRow","striped","bordered","hover","size","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","App","warrenData","회사코드","lastName","회사명","age","visits","status","지분률","React","useMemo","Header","accessor","Cell","style","fontSize","fontWeight","ChartContainer","styled","div","Img","img","WarrenBuffet","src","buffett","Doughnut","DatePickerExample","defaultValues","ReactDatepicker","ReactSelect","numberFormat","BuySellModal","setRow","closeModal","setFormData","useForm","handleSubmit","register","control","reset","useState","setAction","Date","onSubmit","BuySellSelector","symbol","name","date","price","marketValue","numOfStock","return","className","as","NumberFormat","thousandSeparator","label","isClearable","onChange","ac","ref","defaultValue","useStyles","makeStyles","theme","container","gridTemplateColumns","gridGap","spacing","paper","padding","textAlign","palette","text","secondary","whiteSpace","marginBottom","divider","margin","FormContainer","Typography","variant","gutterBottom","Modal","onClickOutside","onKeyDown","modalRef","buttonRef","ReactDOM","createPortal","tag","role","tabIndex","aria-modal","onClick","aria-label","aria-labelledby","document","body","Trigger","triggerText","showModal","Fab","Component","PortfolioAdd","Logo","Kakao","alt","doughnut_chart02","opacity","marginTop","Container","Title","PortfolioImg","IntroPageContent","frontImg01","width","KaKaoBtn","KaKaoLogin","WallHeader","props","useContext","stockDispatch","loggedIn","setLoggedIn","useEffect","loggedInUser","localStorage","getItem","foundUser","JSON","parse","accessToken","userId","to","brandImg","delete","clear","catch","err","alert","post","refreshToken","buttonText","onSuccess","socialType","socialToken","response","setItem","stringify","onFailure","getProfile","StockChart","ticker","locale","autosize","MenuIconThreeDots","anchorEl","setAnchorEl","open","Boolean","handleClose","IconButton","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","onClose","PaperProps","maxHeight","ITEM_HEIGHT","option","MenuItem","selected","AlertDialogModal","param","portfolio_Id","setOpen","handleDeleteAndClose","a","result","newList","filter","item","handleUserId","Button","Dialog","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Container3","Background","Container2","WatchListContainer","PortfolioManageContent","setUserId","setPortfolioInfo","portfolios","ID","currState","handleDeletePortfolio","portfolioId","getTableBodyProps","footerGroups","textDecoration","justifyContent","ShowAndAddCategory","categoryHandle","addIconVisable","setAddIconVisable","activeButtonIndex","setActiveButtonIndex","inputValue","setInputValue","buttonBoxList","setButtonBoxList","addCategoryAxios","categoryName","category","config","JsonParsed","Object","keys","goalAssetRatio","stockRatios","pink","root","classes","list","v","e","target","onKeyPress","key","placeholder","require","StockAutoCompleteSearchBar","StockAutoComplete2","StockAutoComplete3","stockInfoHandle","tickerHandle","passedStockInfo","stockInfo","setOptions","setKoreaStocks","usaStocks","setUsaStocks","loading","onChangeHandle","koreaStocks","Autocomplete","onOpen","getOptionSelected","getOptionLabel","renderInput","params","TextField","ev","InputProps","endAdornment","Fragment","CircularProgress","Body","Form","form","KRWFormHooks","input","handleModalIsOpen","passedId","timestamp","setTimestamp","history","useHistory","useParams","watch","errors","cashFlowType","balance","country","push","newDate","getTime","exampleRequired","setAppElement","KRWFormModal","modalIsOpen","setModalIsOpen","isOpen","onRequestClose","prev","CashTable","title","stockName","URL","tableData","setTableData","getData","holdings","cashHoldings","korea","usa","KRW","USD","numberWithCommas","x","toString","idx","toUpperCase","flexGrow","FormHookSecond","formType","checked","setChecked","setTicker","setValue","watchFields","setCategory","setStockInfo","amount","Checkbox","parseInt","stock","tradeType","tradingHistories","Grid","xs","Paper","FormModalHooks","handleReRender","height","OneStockDetailedTradingHistory","isExpanded","newIsExpanded","setNewIsExpanded","tradeHistory","setTradeHistory","encoded","encodeURI","tradeHistories","timestampToDate","timeStamp","getFullYear","getMonth","getDate","includes","elem","EasyTableBody2","DATA","currPrice","stockCodeAndCurrPrice","handleUsdCost","setKrwCost","newStockInfo","nowPrice","newStockCodeAndCurrPrice","setnewStockCodeAndCurrPrice","decimalPoint","setDecimalPoint","setIsExpanded","setReRenter","avgPrice","changePercent","indexOf","ele","toFixed","newStockInfoTmp","handleDelete","EasyTable","handleNowKrValue","handleNowUsaValue","handleKrTodayEarning","handleUsaTodayEarning","setCurrPrice","setStockCodeAndCurrPrice","stockInfo2","priceNow","CategoryPortfolioTable","handleKoreanCost","stockCategoryList","setStockCategoryList","stockTitleAndStockList","setStockTitleAndStockList","assetCategory","stockCategory","entries","stockHoldings","prevState","pastel_tone","hex","colors_piecharts","RechartsDoublePie3","dataAA","data02","RADIAN","PI","PieChart","top","right","left","bottom","Pie","dataKey","cx","cy","outerRadius","fill","labelLine","isAnimationActive","midAngle","innerRadius","percent","index","nowRatio","radius","cos","y","sin","textAnchor","dominantBaseline","dx","entry","stockCode","allowDataOverflow","FormModalForGoalAssetRatio","minWidth","bullet","transform","pos","SimpleCardGoalRatio","categoryAndStockData","cashRatio","values","setValues","cash","setCash","titleStock","setTitleStock","sum2","setSum","goalRatio","handleCashChange","handleChange","withStyles","primary","main","Card","CardContent","float","arr","min","button","startIcon","jsonResult","FlexContainer","DiversifiedPortfolio","koreanCost","setKoreanCost","setUsdCost","currencyRate","setCurrencyRate","nowKrValue","setNowKrValue","nowUsaValue","setNowUsaValue","krTodayEarning","setKrTodayEarning","usaTodayEarning","setUsaTodayEarning","rechartsStockData","setRechartsStockData","rechartsCategoryData","setRechartsCategoryData","setCategoryAndStockData","setCashRatio","setAssetCategory","rate","assetRatio","cnt","obj1","cashRatios","Cash","e2","cashArr","e3","direction","justify","alignment","sm","marginLeft","earning","PortfolioManage","tmp","useLocation","location","portfolio_name","NewPortfolio","htmlFor","exact","path","component","StrictMode","getElementById"],"mappings":"0mVAAe,G,OAAA,IAA0B,wC,mDCI5BA,EAAe,CACxBC,UAAW,CACPC,KAAM,QACNC,MAAO,mCACPC,aAAc,GACdC,GAAI,GACJC,KAAM,IAEVC,gBAAiB,GACjBC,cAAe,GAOfC,kBAAmB,GACnBC,QAAS,EACTC,QAAS,EACTC,iBAAkB,EAClBC,iBAAkB,EAClBC,kBAAmB,EACnBC,kBAAmB,EACnBC,SAAU,GAIDC,EAAgBC,wBAAclB,GAG9BmB,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACVC,qBAAWC,EAAatB,GADd,mBACrCuB,EADqC,KAC1BC,EAD0B,OAERH,qBAAWI,EAAczB,GAFjB,6BAG5C,OACI,cAACiB,EAAcS,SAAf,CAAwBC,MAAO,CAAEJ,YAAWC,gBAA5C,SAIKJ,KCsCAE,EAAc,SAACM,EAAOC,GAC/B,OAAQA,EAAOC,MACX,IAAK,mBACD,OAAOC,YAAQH,GAAO,SAACI,GACnBA,EAAM/B,UAAUG,aAAeyB,EAAOzB,aACtC4B,EAAM/B,UAAUI,GAAKwB,EAAOxB,MAIpC,IAAK,6BACD,OAAO0B,YAAQH,GAAO,SAACI,GACnBC,QAAQC,IAAI,gBAAiBL,GAC7BG,EAAMzB,gBAAkBsB,EAAOM,YAC/BF,QAAQC,IAAI,8BAA+BN,MAInD,IAAK,kBACD,OAAO,2BACAA,GADP,IAEIlB,QAASkB,EAAMlB,QAAUmB,EAAOO,OAGxC,IAAK,gBACD,OAAO,2BACAR,GADP,IAEIlB,QAAS,IAIjB,IAAK,6BACD,OAAO,2BACAkB,GADP,IAEIhB,iBAAkBgB,EAAMhB,iBAAmBiB,EAAOQ,UAG1D,IAAK,2BACD,OAAO,2BACAT,GADP,IAEIhB,iBAAkB,IAG1B,IAAK,yBACD,OAAO,2BACAgB,GADP,IAEId,kBAAmBc,EAAMd,kBAAoBe,EAAOQ,UAG5D,IAAK,uBACD,OAAO,2BACAT,GADP,IAEId,kBAAmB,IAI3B,IAAK,kBACD,OAAO,2BACAc,GADP,IAEIjB,QAASiB,EAAMjB,QAAUkB,EAAOO,OAGxC,IAAK,gBACD,OAAO,2BACAR,GADP,IAEIjB,QAAS,IAIjB,IAAK,6BACD,OAAO,2BACAiB,GADP,IAEIf,iBAAkBe,EAAMf,iBAAmBgB,EAAOQ,UAG1D,IAAK,2BACD,OAAO,2BACAT,GADP,IAEIf,iBAAkB,IAG1B,IAAK,yBACD,OAAO,2BACAe,GADP,IAEIb,kBAAmBa,EAAMb,kBAAoBc,EAAOQ,UAG5D,IAAK,uBACD,OAAO,2BACAT,GADP,IAEIb,kBAAmB,IAI3B,IAAK,mBACD,OAAO,2BACAa,GADP,IAEIZ,SAAUY,EAAMZ,SAAW,MAmH9BS,EAAe,SAACG,EAAOC,GAEhC,OAAQA,EAAOC,MAEX,IAAK,sBACD,OAAOQ,IACFC,IAAI,sBAAuB,CACxBC,QAAS,CACLC,cAAc,UAAD,OAAYb,EAAM3B,UAAUG,iBAGhDsC,MAAK,SAACC,GACHV,QAAQC,IAAI,uBAAwBS,MAIhD,IAAK,gBACD,OAAOL,IACFC,IADE,qBACgBV,EAAOe,MAAQ,CAC9BJ,QAAS,CACLC,cAAc,UAAD,OAAYb,EAAM3B,UAAUG,iBAGhDsC,MAAK,SAACC,GACHV,QAAQC,IAAI,iBAAkBS,MAG1C,IAAK,iBACD,OAAOL,IACFC,IADE,aACgB,CACfC,QAAS,CACLC,cAAc,UAAD,OAAYb,EAAM3B,UAAUG,iBAGhDsC,MAAK,SAACC,GACHV,QAAQC,IAAI,iCAAkCS,MAG1D,IAAK,kBACD,OAAOL,IACFC,IAAI,UAAW,CACZC,QAAS,CACLC,cAAc,UAAD,OAAYb,EAAM3B,UAAUG,iBAGhDsC,MAAK,SAACC,GACHV,QAAQC,IAAI,mBAAoBS,MAI5C,QAEI,YADAV,QAAQC,IAAI,sBCtVT,MAA0B,oC,mCCIrCW,EAAcC,EAAgBC,KAAI,SAAUC,GAC5C,OAAOA,EAAO,yBAiBdC,EAAYH,EAAgBC,KAAI,SAAUC,GAC1C,GAAiB,GAAbA,EAAO3C,GASP,OAAO6C,WACHC,KAAKC,MAEG,IADHJ,EAAO,4BAAQK,QAAQ,IAAK,IAAIA,QAAQ,KAAM,IAb9C,cAgBD,QAKZC,EAAmBC,EAAaR,KAAI,SAAUS,GAC9C,OAAOA,EAAK,OAqEDC,EAlEC,WA8CZ,IA5CA,IAAMvD,EAAO,CACTwD,OAAO,YAQAb,EAAYc,MAAM,IAEzBC,SAAU,CACN,CAEI1D,KAAM+C,EAAUU,MAAM,GAEtBE,gBAAiBP,EAajBQ,qBAAsBR,KAezBS,EAAI,EAAGA,EAAI7D,EAAKwD,OAAOM,OAAQD,KACxC,OACI,8BAEI,cAAC,WAAD,CACI7D,KAAMA,EACN+D,QAAS,CAGLC,OAAQ,CACJC,SAAS,S,kCC/FjC,SAASC,EAAT,GAAmC,IAAlBC,EAAiB,EAAjBA,QAASnE,EAAQ,EAARA,KAAQ,EAE4BoE,mBAAS,CAC/DD,UACAnE,SAFIqE,EAFsB,EAEtBA,cAAeC,EAFO,EAEPA,aAAcC,EAFP,EAEOA,KAAMC,EAFb,EAEaA,WAI3C,OACI,eAAC,IAAD,yBAAQC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,MAASP,KAA7C,cACI,gCACKC,EAAazB,KAAI,SAACgC,GAAD,OACd,8CAAQA,EAAYC,uBAApB,aACKD,EAAYvC,QAAQO,KAAI,SAACkC,GAAD,OACrB,8CAAQA,EAAOC,kBAAf,aACKD,EAAOE,OAAO,wBAMnC,gCACKV,EAAK1B,KAAI,SAACqC,EAAKrB,GAEZ,OADAW,EAAWU,GAEP,8CAAQA,EAAIC,eAAZ,aACKD,EAAIE,MAAMvC,KAAI,SAACwC,GACZ,OACI,8CAAQA,EAAKC,gBAAb,aACKD,EAAKJ,OAAO,0BAoHtCM,MAzGf,WACI,IAAMC,EAAa5C,EAAgBC,KAAI,SAAUC,GAQ7C,MAPW,CACP2C,2BAAM3C,EAAO2C,yBACbC,SAAU5C,EAAO6C,mBACjBC,IAAK9C,EAAO,4BACZ+C,OAAQ/C,EAAO,kCACfgD,OAAQhD,EAAOiD,uBAKjB5B,EAAU6B,IAAMC,SAClB,iBAAM,CACF,CACIC,OAAQ,OACR/B,QAAS,CACL,CACI+B,OAAQ,2BACRC,SAAU,2BAEVC,KAAM,YAAgB,IAAb3E,EAAY,EAAZA,MAEL,OACI,qBACI4E,MAAO,CACH/C,MAAO,UACPgD,SAAU,OACVC,WAAY,OAJpB,SAOK9E,MAsBjB,CACIyE,OAAQ,qBACRC,SAAU,WACVC,KAAM,YAAgB,IAAb3E,EAAY,EAAZA,MAEL,OACI,qBACI4E,MAAO,CACH/C,MAAO,UACPgD,SAAU,QAHlB,SAOK7E,QAOzB,CACIyE,OAAQ,OACR/B,QAAS,CACL,CACI+B,OAAQ,2BACRC,SAAU,OAEd,CACID,OAAQ,mCACRC,SAAU,UAEd,CACID,OAAQ,qBACRC,SAAU,eAK1B,IAEEnG,EAAOgG,IAAMC,SACf,uCAAUT,EAAW/B,MAAM,IAA3B,CAA+B+B,EAAW,OAC1C,IAGJ,OACI,8BACI,cAAC,EAAD,CAAOrB,QAASA,EAASnE,KAAMA,O,gQC9H3C,IAAMwG,EAAiBC,IAAOC,IAAV,KAOdC,EAAMF,IAAOG,IAAV,KAIMC,EAvBf,WACI,OACI,8BACI,eAACL,EAAD,WACI,cAACG,EAAD,CAAKG,IAAKC,IACV,cAACC,EAAD,IACA,cAAC,EAAD,U,2GCcDC,ICITC,EAAgB,CAClBC,gBAAiB,GACjBC,YAAa,GACbC,aAAc,GA+JHC,MA5Jf,YAAiE,IAAzCpC,EAAwC,EAAxCA,IAAKqC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,YAAe,EACTC,YAC/CR,EAAc,IADVS,EADoD,EACpDA,aAAcC,EADsC,EACtCA,SAAiBC,GADqB,EAC5BC,MAD4B,EACrBD,SADqB,EAIpCE,mBAAS,MAJ2B,gCAKhCA,mBAAS,KALuB,mBAKrDpG,EALqD,KAK7CqG,EAL6C,OAMnBD,mBAAS,IAAIE,MANM,mBAgC5D,OAhC4D,UAiCxD,sBACIC,SAAUP,GAAa,SAAC3H,GACpB+B,QAAQC,IAAIhC,GACZyH,EAAYzH,GAGRA,EAAKmI,iBACDZ,EAAO,GAAD,mBACCrC,GADD,CAEF,CACIkD,OAAQpI,EAAKmI,gBAAgB1G,MAC7B4G,KAAMrI,EAAKsI,KAGXpG,KAAMlC,EAAKuI,MACXD,KAAMtI,EAAI,KACVwI,YAAaxI,EAAKyI,WAClBC,OAAQ,OAKxBlB,OAEJmB,UAAU,OAxBd,SA0BI,sBAAKA,UAAU,iBAAf,UACI,oCACI,uBAAOA,UAAU,oBAAjB,0BACA,wBACA,cAAC,IAAD,CACIC,GAAIC,IACJC,mBAAiB,EAEjBT,KAAK,QACLM,UAAU,QACVd,QAASA,OAKjB,0BAASc,UAAU,oBAAnB,UACI,uBAAOA,UAAU,oBAAjB,0BACA,cAAC,IAAD,CACIC,GAAIxB,IACJrD,QAAS,CACL,CAAEtC,MAAO,eAAMsH,MAAO,gBACtB,CAAEtH,MAAO,eAAMsH,MAAO,iBAE1BV,KAAK,kBACLW,aAAW,EACXnB,QAASA,IAEb,0BAIJ,oCACI,uBAAOc,UAAU,oBAAjB,0BACA,wBACA,cAAC,aAAD,CACIM,SAAU,SAACC,GACPnH,QAAQC,IAAIkH,GACZlB,EAAU,GAAD,OACFkB,EAAE,GADA,YACUA,EAAE,GAAS,EADrB,YAC0BA,EAAE,KAIrCnH,QAAQC,IAAIL,MAGpB,uBACIC,KAAK,OACLyG,KAAK,OACL5G,MAAOE,EAEPgH,UAAU,UACVQ,IAAKvB,IAET,0BAEJ,oCACI,uBAAOe,UAAU,oBAAjB,0BACA,uBACI/G,KAAK,SACLyG,KAAK,aACLM,UAAU,QACVS,aAAa,IACbD,IAAKvB,IAET,0BAEJ,oCACI,uBAAOe,UAAU,oBAAjB,0BACA,wBACA,cAAC,IAAD,CACIC,GAAIC,IACJC,mBAAiB,EAEjBT,KAAK,QACLM,UAAU,QACVd,QAASA,OAKjB,uBAAOjG,KAAK,SAASH,MAAM,eCvKrC4H,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,UAAW,CACPvF,QAAS,OACTwF,oBAAqB,kBACrBC,QAASH,EAAMI,QAAQ,IAE3BC,MAAO,CACHC,QAASN,EAAMI,QAAQ,GACvBG,UAAW,OACXxG,MAAOiG,EAAMQ,QAAQC,KAAKC,UAC1BC,WAAY,SACZC,aAAcZ,EAAMI,QAAQ,IAEhCS,QAAS,CACLC,OAAQd,EAAMI,QAAQ,EAAG,QAIpBW,EAAgB,SAAC,GAA2C,IAAzCpF,EAAwC,EAAxCA,IAAKqC,EAAmC,EAAnCA,OAAkBC,GAAiB,EAA3BU,SAA2B,EAAjBV,YAAiB,GACpD6B,IACgBtB,mBAAS,CAAC,MAF0B,mBAEnDN,GAFmD,WAGpE,OACI,gCAEI,cAAC8C,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,2DAGA,uBACA,cAAC,EAAD,CACIlD,OAAQA,EACRC,WAAYA,EACZC,YAAaA,EACbvC,IAAKA,Q,qBCrCRwF,GAAQ,SAAC,GASf,IARHC,EAQE,EARFA,eACAC,EAOE,EAPFA,UACAC,EAME,EANFA,SACAC,EAKE,EALFA,UACAtD,EAIE,EAJFA,WACAU,EAGE,EAHFA,SACAX,EAEE,EAFFA,OACArC,EACE,EADFA,IAEA,OAAO6F,IAASC,aACZ,cAAC,KAAD,UACI,uBACIC,IAAI,QACJC,KAAK,SACLC,SAAS,KACTC,aAAW,OACXzC,UAAU,cACV0C,QAASV,EACTC,UAAWA,EAPf,SASI,sBAAKjC,UAAU,aAAaQ,IAAK0B,EAAjC,UAEI,wBACIQ,QAAS7D,EACT2B,IAAK2B,EACLQ,aAAW,cACXC,kBAAgB,cAChB5C,UAAU,eALd,SAaI,sBAAMxI,GAAG,cAAcwI,UAAU,eAAjC,qBAQJ,qBAAKA,UAAU,aAAf,SACI,cAAC,EAAD,CACInB,WAAYA,EACZU,SAAUA,EACVX,OAAQA,EACRrC,IAAKA,aAMzBsG,SAASC,O,gCCzCFC,GAdC,SAAC,GAA0C,EAAxCC,YAAyC,IAA5Bb,EAA2B,EAA3BA,UAAWc,EAAgB,EAAhBA,UACvC,OACI,cAACC,GAAA,EAAD,CAAKvI,MAAM,UAAUsB,KAAK,QAAQ0G,aAAW,MAA7C,SACI,cAAC,KAAD,CAASnC,IAAK2B,EAAWO,QAASO,OCJdE,YCHjB,ICsBAC,ICtBA,OAA0B,+CCA1B,I,OAAA,IAA0B,4CCA1B,ICAA,IDAA,IAA0B,8CEsC1BC,OAhCf,WACI,OACI,yBAASrD,UAAU,kBAAnB,SACI,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,eAAf,yDACA,qBAAKA,UAAU,cAAf,2IAGA,qBAAKA,UAAU,QAAf,SACI,qBACI7B,IAAKmF,GACLC,IAAI,QACJvD,UAAU,0BAKtB,qBACIA,UAAU,UACV7B,IAAKqF,GACLD,IAAI,UACJ7F,MAAO,CAAE+F,QAAS,GAAKC,UAAW,a,ikCCrBtD,IAwBMC,GAAY7F,IAAOC,IAAV,MAQT6F,GAAQ9F,IAAOC,IAAV,MAyBL8F,GAAe/F,IAAOC,IAAV,MAYH+F,GArEU,kBACrB,eAACH,GAAD,WACI,cAAC,GAAD,IACA,eAACC,GAAD,WACI,qBAAK5D,UAAU,aAAf,sEACA,qBAAKA,UAAU,YAAf,kMAKJ,cAAC6D,GAAD,UACI,8BACI,qBACI7D,UAAU,gBACV7B,IAAK4F,GACLR,IAAI,eACJ7F,MAAO,CAAEsG,MAAO,kB,4bCPpC,IA8OMC,GAAWnG,YAAOoG,IAAPpG,CAAH,MAkBCqG,GAhQI,SAACC,GAAW,IAAD,EACyBC,qBAC/CjM,GADIM,EADkB,EAClBA,UAAWC,EADO,EACPA,aADO,KACO2L,cAGDlF,oBAAS,IAJf,mBAInBmF,EAJmB,KAITC,EAJS,KAM1BC,qBAAU,WACN,IAAMC,EAAeC,aAAaC,QAAQ,QAC1C,GAAIF,EAAc,CACdF,GAAY,GACZpL,QAAQC,IAAI,gBAAiBqL,GAC7B,IAAMG,EAAYC,KAAKC,MAAML,GAC7BtL,QAAQC,IAAI,aAAcwL,GAC1BlM,EAAa,CACTM,KAAM,mBACN1B,aAAcsN,EAAUxN,KAAK2N,YAC7BxN,GAAIqN,EAAUxN,KAAK4N,YAI5B,IAmCH,OACI,yBAAQjF,UAAU,SAAlB,UACI,qBAAKA,UAAU,6BAAf,SACI,eAAC,KAAD,CAAMkF,GAAG,IAAIlF,UAAU,eAAvB,UACI,qBAAKA,UAAU,YAAY7B,IAAKgH,EAAU5B,IAAI,cAC7C,OACD,sBAAMvD,UAAU,WAAhB,iCAGR,qBACIA,UAAU,eADd,SAII,cAAC,KAAD,CAAMkF,GAAG,aAAalF,UAAU,eAAhC,8CAIJ,qBAAKA,UAAU,eAAf,SACI,cAAC,KAAD,CAAMkF,GAAG,UAAUlF,UAAU,eAA7B,wCAkBJ,qBAAKA,UAAU,eAAf,SACKuE,EACG,8BACI,qBACIvE,UAAU,eACV0C,QACI,WACIjJ,IACK2L,OAAO,eAAgB,CACpBzL,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAGpDsC,MAAK,SAACC,GACHnB,EAAa,CACTM,KAAM,mBACN1B,aAAc,GACdC,GAAI,KAER4B,QAAQC,IACJ,uCACAS,GAEJ6K,aAAaU,QACbb,GAAY,MAEfc,OAAM,SAACC,GACJ,IAAMb,EAAeC,aAAaC,QAC9B,QAGJ,GADAY,MAAM,YACFd,EAAc,CACdtL,QAAQC,IACJ,eACOqL,GAEXtL,QAAQC,IACJ,gBACAqL,GAEJ,IAAMG,EAAYC,KAAKC,MACnBL,GAEJtL,QAAQC,IACJ,aACAwL,GAEJpL,IACKgM,KAAK,gBAAiB,CACnBR,OACIJ,EAAUxN,KACL4N,OACTD,YACIH,EAAUxN,KACL2N,YACTU,aACIb,EAAUxN,KACLqO,eAEZ7L,MAAK,SAACC,GACHV,QAAQC,IACJ,gBACAS,GAEJL,IACK2L,OACG,eACA,CACIzL,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAIxDsC,MAAK,SAACC,GACHnB,EAAa,CACTM,KACI,mBACJ1B,aACI,GACJC,GAAI,KAER4B,QAAQC,IACJ,iBACAS,GAEJ6K,aAAaU,QACbb,GACI,SAIfc,OAAM,SAACxL,GAAD,OAAS0L,MAAM1L,WAxFlD,uBA8HHV,QAAQC,IAAI,aAAcX,GAEvB,cAACuL,GAAD,CACI3M,MAAO,mCACPqO,WAAW,2BACXC,UA7LF,SAAC9L,GACnBL,IACKgM,KAAK,cAAe,CACjBI,WAAY,QACZC,YAAahM,EAAIiM,SAASxO,eAE7BsC,MAAK,SAACC,GACHV,QAAQC,IAAI,MAAOS,GACnB6K,aAAaqB,QAAQ,OAAQlB,KAAKmB,UAAUnM,IAC5CnB,EAAa,CACTM,KAAM,mBACN1B,aAAcuC,EAAIzC,KAAK2N,YACvBxN,GAAIsC,EAAIzC,KAAK4N,SAEjBT,GAAY,MAEfc,OAAM,SAACC,GAAD,OAASC,MAAM,kBA+KNU,UAnMH,SAACX,GAClBnM,QAAQC,IAAI,eAAgBkM,IAmMRY,YAAY,W,qBCxOzBC,GATI,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACf,cAAC,KAAD,CACI5G,OAAQ4G,GAAUA,EAAOlL,OAASkL,EAAS,aAE3CC,OAAO,KACPC,UAAQ,K,0ICEDzI,IAAOC,IAAV,MAAZ,I,2FCJM3C,GAAU,CAAC,UAIF,SAASoL,KAAqB,IAAD,EACRnJ,IAAM+B,SAAS,MADP,mBACjCqH,EADiC,KACvBC,EADuB,KAElCC,EAAOC,QAAQH,GAMfI,EAAc,WAChBH,EAAY,OAGhB,OACI,gCACI,cAACI,GAAA,EAAD,CACInE,aAAW,OACXoE,gBAAc,YACdC,gBAAc,OACdtE,QAdQ,SAACuE,GACjBP,EAAYO,EAAMC,gBASd,SAMI,cAAC,KAAD,MAEJ,cAACC,GAAA,EAAD,CACI3P,GAAG,YACHiP,SAAUA,EACVW,aAAW,EACXT,KAAMA,EACNU,QAASR,EACTS,WAAY,CACR5J,MAAO,CACH6J,UAAWC,IACXxD,MAAO,SATnB,SAaK5I,GAAQlB,KAAI,SAACuN,GAAD,OACT,cAACC,GAAA,EAAD,CAEIC,SAAqB,UAAXF,EACV/E,QAASmE,EAHb,SAKKY,GAJIA,W,sECrCd,SAASG,GAAiBC,GACrCpD,qBAAU,WACNrL,QAAQC,IAAI,sBAAuBwO,EAAMC,gBAC1C,CAACD,EAAMC,eACVrD,qBAAU,WACNrL,QAAQC,IAAI,WAAYwO,EAAM5C,UAC/B,CAAC4C,EAAM5C,SANkC,MAOOZ,qBAC/CjM,GADIM,EAPoC,EAOpCA,UAPoC,KAOzBC,aAPyB,EAOX2L,cAGTjH,IAAM+B,UAAS,IAVK,mBAUrCuH,EAVqC,KAU/BoB,EAV+B,KAgBtClB,EAAc,WAChBkB,GAAQ,IAGNC,EAAoB,yCAAG,+BAAAC,EAAA,6DACzB7O,QAAQC,IAAI,uBAAwBwO,EAAMC,cADjB,SAGJrO,IAAM2L,OAAN,qBAA2ByC,EAAMC,cAAgB,CAClEnO,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAL5B,OAGnB2Q,EAHmB,OAQzB9O,QAAQC,IAAI,UAAW6O,GAEjBC,EAAUN,EAAM5C,OAAOmD,QACzB,SAACC,GAAD,OAAUA,IAASR,EAAMC,gBAG7BD,EAAMS,aAAaH,GACnBJ,GAAQ,GAfiB,2CAAH,qDAkB1B,OACI,gCACI,cAACQ,GAAA,EAAD,CACI1G,QAAQ,WACRlH,MAAM,UACN+H,QA/BY,WACpBqF,GAAQ,IA2BJ,0BAOA,eAACS,GAAA,EAAD,CACI7B,KAAMA,EACNU,QAASR,EACTjE,kBAAgB,qBAChB6F,mBAAiB,2BAJrB,UAMI,cAACC,GAAA,EAAD,CAAalR,GAAG,qBAAhB,SACK,2FAEL,cAACmR,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAmBpR,GAAG,2BAAtB,yLAKJ,eAACqR,GAAA,EAAD,WACI,cAACN,GAAA,EAAD,CAAQ7F,QAASsF,EAAsBrN,MAAM,UAA7C,0BAGA,cAAC4N,GAAA,EAAD,CAAQ7F,QAASmE,EAAalM,MAAM,UAAUmO,WAAS,EAAvD,mC,o3BC7Db,IAAMtN,GAAU,CACnB,CACI+B,OAAQ,2BACRC,SAAU,UAEd,CACID,OAAQ,qBACRC,SAAU,QAEd,CACID,OAAQ,eACRC,SAAU,QAEd,CACID,OAAQ,2BACRC,SAAU,eAEd,CACID,OAAQ,qBACRC,SAAU,WA+MlB,IAAMuL,GAAajL,IAAOC,IAAV,MASViL,GAAalL,IAAOC,IAAV,MAMVkL,GAAanL,IAAOC,IAAV,MAIVmL,GAAqBpL,IAAOC,IAAV,MAiBToL,GA/Of,WAAmC,IAAD,EACqB9E,qBAC/CjM,GADIM,EADsB,EACtBA,UADsB,KACXC,aADW,EACG2L,cAGLlF,mBAAS,KAJP,mBAIvB6F,EAJuB,KAIfmE,EAJe,OAKYhK,mBAAS,IALrB,mBAKvBzH,EALuB,KAKR0R,EALQ,KAmB9B5E,qBAAU,WACNhL,IACKC,IAAI,QAAS,CACVC,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAGpDsC,MAAK,SAACC,GACHV,QAAQC,IAAI,oBAAqBS,EAAIzC,MACrC+B,QAAQC,IAAI,oBAAqBS,EAAIzC,KAAKiS,YAC1CF,GAAU,8BAAUtP,EAAIzC,KAAKiS,kBAEhChE,OAAM,SAACC,GAAD,OAASnM,QAAQC,IAAI,OAAQkM,QACzC,IAEHd,qBAAU,WACNrL,QAAQC,IAAI,UAAW4L,GACvBoE,EAAiB,IAEjBpE,EAAO/K,KAAI,SAACqP,GACR9P,IACKC,IADL,qBACuB6P,GAAM,CACrB5P,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAGpDsC,MAAK,SAACC,GACHuP,GACI,SAACG,GAAD,4BAAmBA,GAAnB,CAA8B1P,MAC9BV,QAAQC,IAAI,iBAAkB1B,YAI/C,CAACsN,IAEJR,qBAAU,WACNrL,QAAQC,IAAI,kBAAmB1B,KAChC,CAACA,IAxD0B,MA0DRyH,mBAAS,CAC3B,CACIK,OAAQ,KACRC,KAAM,GACNnG,KAAM,GACNsG,YAAa,GACbE,OAAQ,MAhEc,mBA0DvBxD,EA1DuB,KAoExBkN,GApEwB,KAoEH,yCAAG,WAAOC,GAAP,kBAAAzB,EAAA,6DAC1B7O,QAAQC,IAAI,gBAAiBqQ,GADH,SAELjQ,IAAM2L,OAAN,qBAA2BsE,GAAe,CAC3D/P,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAJ3B,OAEpB2Q,EAFoB,OAO1B9O,QAAQC,IAAI,UAAW6O,GACjBC,EAAUlD,EAAOmD,QAAO,SAACC,GAAD,OAAUA,IAASqB,KACjDN,EAAUjB,GATgB,2CAAH,uDAYrBG,EAAe,SAACT,GAClBuB,EAAUvB,IAGRxQ,EAAOkF,EApFiB,EA4F1Bd,mBAAS,CACTD,WACAnE,SA4BJ,OA1H8B,EAsF1BqE,cAtF0B,EAuF1BiO,kBAvF0B,EAwF1BhO,aAxF0B,EAyF1BiO,aAzF0B,EA0F1BhO,KA1F0B,EA2F1BC,WAgCA,cAACmN,GAAD,UACI,eAACC,GAAD,WACI,cAACC,GAAD,UACI,sBAAKlJ,UAAU,YAAf,4CACW,eACP,cAAC,KAAD,CAAMkF,GAAG,iBAAT,SACI,sBAAMlF,UAAU,gBAAhB,uEAMXrI,EAAcuC,KAAI,SAACJ,GAGhB,OAFAV,QAAQC,IAAI,iBAAkBS,EAAIzC,KAAKqI,MACvCtG,QAAQC,IAAI,wBAAyBS,EAAIzC,KAAKqS,aAE1C,gCACI,cAAC,KAAD,CACIxE,GAAE,6BAAwBpL,EAAIzC,KAAKqS,aACnChM,MAAO,CAAEmM,eAAgB,QAF7B,SAII,cAACd,GAAD,CACIrL,MAAO,CACH/C,MAAO,SAFf,SAKKb,EAAIzC,KAAKqI,SAWlB,uBACIhC,MAAO,CACHpC,QAAS,OACTwO,eAAgB,YAHxB,UAMI,cAAClC,GAAD,CAEIE,aAAchO,EAAIzC,KAAKqS,YAEvBpB,aAAcA,EACdrD,OAAQA,IAeZ,cAACuB,GAAD,CACIkD,YAAa5P,EAAIzC,KAAKqS,YACtBhH,QAAS,kBACL+G,EACI3P,EAAIzC,KAAKqS,+B,uCCjCtCK,OAxLf,YAAqD,IAAvBvS,EAAsB,EAAtBA,GAAIwS,EAAkB,EAAlBA,eAAkB,EACJ5K,oBAAS,GADL,mBACzC6K,EADyC,KACzBC,EADyB,OAGE9K,mBAAS,GAHX,mBAGzC+K,EAHyC,KAGtBC,EAHsB,OAIZhL,mBAAS,IAJG,mBAIzCiL,EAJyC,KAI7BC,EAJ6B,OAQGjG,qBAC/CjM,GADIM,EARwC,EAQxCA,UARwC,KAQ7BC,aAR6B,EAQf2L,cAGSlF,mBAAS,KAXH,mBAWzCmL,EAXyC,KAW1BC,EAX0B,KAkB1CC,EAAgB,yCAAG,WAAOC,GAAP,kBAAAzC,EAAA,6DACrB7O,QAAQC,IAAI,gBAAiBqR,GAE7BtR,QAAQC,IAAI,WAAY7B,GAHH,SAIEiC,IAAMgM,KAAN,qBACLjO,EADK,aAEnB,CACImT,SAAUD,GAEd,CACI/Q,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAXpC,OAIfwO,EAJe,OAerB3M,QAAQC,IAAI,wBAAyB0M,EAAS6E,OAAOvT,MAC/CwT,EAAa/F,KAAKC,MAAMgB,EAAS6E,OAAOvT,MAC9C+B,QAAQC,IAAR,gCAA6CwR,EAAWF,UACxDH,EAAiB,GAAD,mBAAKD,GAAL,CAAoBM,EAAWF,YAlB1B,2CAAH,sDA6BtBlG,qBAAU,WACNhL,IACKC,IADL,qBACuBlC,GAAM,CACrBmC,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAGpDsC,MAAK,SAACC,GACHV,QAAQC,IACJ,oDACAyR,OAAOC,KAAKjR,EAAIzC,KAAK2T,eAAeC,cAExCT,EACIM,OAAOC,KAAKjR,EAAIzC,KAAK2T,eAAeC,mBAUjD,IAEHxG,qBAAU,WACNrL,QAAQC,IAAI,iBAAkBkR,GAC1BA,GACAP,EAAeO,EAAcJ,MAElC,CAACI,IAaYW,KAAK,KATrB,IAWMxK,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuK,KAAM,CACF,QAAS,CACLzJ,OAAQd,EAAMI,QAAQ,SA6B5BoK,EAAU1K,IACV2K,EAAOd,EAAcrQ,KAAI,SAACoR,EAAGpQ,GAC/B,OAAIA,GAAKiP,EAED,sBAAcnK,UAAWoL,EAAQD,KAAjC,SACI,cAAC5C,GAAA,EAAD,CACI1G,QAAQ,YACRlH,MAAM,YACN+H,QAAS,kBAAM0H,EAAqBlP,IAHxC,SAKKoQ,KANEpQ,GAYf,uBAAc8E,UAAWoL,EAAQD,KAAjC,UACK/R,QAAQC,IAAI,qBAAsB8Q,GACnC,cAAC5B,GAAA,EAAD,CACI1G,QAAQ,YACRlH,MAAM,UACN+H,QAAS,SAAC6I,GACNnS,QAAQC,IAAI,oBAAqBkR,EAAcrP,IAC/C8O,EAAeO,EAAcrP,IAC7BkP,EAAqBlP,IAN7B,SASKoQ,MAXEpQ,MAyBnB,OACI,gCACKmQ,EAEApB,EACG,cAAC,KAAD,CAASvH,QArKL,SAAC6I,GACbrB,GAAmBD,IAoKgBtM,SAAS,UAEpC,uBACI1E,KAAK,OACLH,MAAOuR,EACP/J,SAnKC,SAAC2G,GAGdqD,EAAcrD,EAAMuE,OAAO1S,QAiKf2S,WA/FG,SAACxE,GAEE,UAAdA,EAAMyE,MACNlG,MAAM,gDAENiF,EAAiBJ,GACjBH,GAAmBD,KA0FX0B,YAAY,kC,oBCvLhCC,EAAQ,KAqMOC,I,6BCxJAC,I,WC2EAC,OAhHf,YAOI,IANArT,EAMD,EANCA,UACAsT,EAKD,EALCA,gBACAC,EAID,EAJCA,aAGAC,GACD,EAFCC,UAED,EADCD,iBACD,EACyB9M,oBAAS,GADlC,mBACQuH,EADR,KACcoB,EADd,OAE+B3I,mBAAS,IAFxC,mBAEQhE,EAFR,KAEiBgR,EAFjB,OAGuChN,mBAAS,IAHhD,mBAGqBiN,GAHrB,aAImCjN,mBAAS,IAJ5C,mBAIQkN,EAJR,KAImBC,EAJnB,OAKqCnN,mBAAS,IAL9C,mBAMOoN,GANP,UAMiB7F,GAAQ2F,GAAkC,IAArBA,EAAUnR,QAE/CsJ,qBAAU,WACNrL,QAAQC,IAAI,wBAAyB6S,KACtC,CAACA,IACJ,IAAMO,EAAc,yCAAG,WAAO3T,GAAP,gBAAAmP,EAAA,6DAEnB7O,QAAQC,IAAI,SAAUP,GAFH,SAGIW,IAAMC,IAAN,yBAA4BZ,GAAS,CACxDa,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBALlC,OAGbwO,EAHa,OAanB3M,QAAQC,IAAI,yBAA0B0M,GACtCsG,EAAetG,EAAS1O,KAAKqV,aAC7BH,EAAaxG,EAAS1O,KAAKiV,WACvBvG,EAAS1O,OACL0O,EAAS1O,KAAKqV,YAAYvR,OAC1BiR,EAAWrG,EAAS1O,KAAKqV,aAEzBN,EAAWrG,EAAS1O,KAAKiV,YApBd,2CAAH,sDAgCpB,OAPA7H,qBAAU,WACDkC,IACD0F,EAAe,IACfE,EAAa,OAElB,CAAC5F,IAGA,cAACgG,GAAA,EAAD,CACInV,GAAG,oBACHkG,MAAO,CAAEsG,MAAO,QAChB2C,KAAMA,EACNiG,OAAQ,WACJ7E,GAAQ,IAEZV,QAAS,WACLU,GAAQ,IASZtH,aAAcyL,EACdW,kBAAmB,SAACpF,EAAQ3O,GAIxB,OAFAkT,EAAgBlT,GAChBmT,EAAanT,EAAMiB,MACZ0N,EAAO/H,OAAS5G,EAAM4G,MAEjCoN,eAAgB,SAACrF,GAAD,gBAAeA,EAAO1N,KAAtB,cAAgC0N,EAAO/H,OACvDtE,QAASA,EACToR,QAASA,EACTO,YAAa,SAACC,GAAD,OACT,cAACC,GAAA,EAAD,2BACQD,GADR,IAEI5M,MAAM,eACNyB,QAAQ,WACRvB,SAAU,SAAC4M,EAAIpU,GACXM,QAAQC,IAAI,SAAUP,GAEE,KAApBoU,EAAG1B,OAAO1S,OACU,OAApBoU,EAAG1B,OAAO1S,OAEV2T,EAAeS,EAAG1B,OAAO1S,QAGjCqU,WAAU,2BACHH,EAAOG,YADJ,IAENC,aACI,eAAC,IAAMC,SAAP,WACKb,EACG,cAACc,GAAA,EAAD,CACI3S,MAAM,UACNsB,KAAM,KAEV,KACH+Q,EAAOG,WAAWC,yB,k2BChGnD,IAAM7O,GAAgB,CAClBC,gBAAiB,GACjBC,YAAa,GACbC,aAAc,GA0JlB,IAAM6O,GAAOzP,IAAOC,IAAV,MAUJyP,GAAO1P,IAAO2P,KAAV,MAsBKC,IAjBD5P,IAAOsC,MAAV,MAWGtC,IAAO6P,MAAV,MAlLX,YAAqE,IAA7CjE,EAA4C,EAA5CA,YAAakE,EAA+B,EAA/BA,kBAAmBC,EAAY,EAAZA,SAAY,EACpCzO,mBAAS,IAD2B,mBACzDiH,EADyD,aAEhCjH,mBAAS,KAFuB,mBAEzDuL,EAFyD,aAGpCvL,mBAAS,KAH2B,mBAGzDpG,EAHyD,KAGjDqG,EAHiD,OAI9BD,mBAAS,GAJqB,mBAIzD0O,EAJyD,KAI9CC,EAJ8C,OAK9B3O,mBAAS,IALqB,mBAKzD+M,EALyD,aAM1C/M,mBAAS,IANiC,gCAObiF,qBAC/CjM,IADIM,EAPwD,EAOxDA,UAAWC,EAP6C,EAO7CA,aAGfqV,GAV4D,EAO/B1J,cAGnB2J,gBAcdxJ,qBAAU,WACNrL,QAAQC,IAAI,aAAc8S,KAC3B,CAACA,IACJ1H,qBAAU,WACNrL,QAAQC,IAAI,aAAcyU,KAC3B,CAACA,IAEJrJ,qBAAU,WACNrL,QAAQC,IAAI,UAAWgN,KACxB,CAACA,IACJ5B,qBAAU,WACNrL,QAAQC,IAAI,eAAgBL,KAC7B,CAACA,IACJyL,qBAAU,WACNrL,QAAQC,IAAI,YAAasR,KAC1B,CAACA,IACWuD,eAAP1W,GAxCwD,MAyCLuH,YAAQ,CAC/DR,mBADIU,EAzCwD,EAyCxDA,SAAUD,EAzC8C,EAyC9CA,aAAcmP,EAzCgC,EAyChCA,MAAOC,EAzCyB,EAyCzBA,OAAQlP,EAzCiB,EAyCjBA,QA8C/C,OAFA9F,QAAQC,IAAI8U,EAAM,YAGd,cAACZ,GAAD,UACI,eAACC,GAAD,CAAMjO,SAAUP,GA7CP,SAAC3H,GACd+B,QAAQC,IAAIhC,GACZ+B,QAAQC,IAAI,YAAawU,GACzBzU,QAAQC,IAAI8S,GACZ/S,QAAQC,IAAIsR,GAGZvR,QAAQC,IAAIgB,WAAWhD,EAAKuI,MAAMpF,QAAQ,KAAM,MAChDpB,QAAQC,IAAIyU,GAEZrU,IACKgM,KADL,qBAEsBiE,EAFtB,iBAGQ,CACI2E,aAAc,UACdhX,KAAM,CACFiX,QAASjU,WAAWhD,EAAKuI,MAAMpF,QAAQ,KAAM,KAC7C+T,QAAqB,GAAZV,EAAgB,QAAU,MACnCC,UAAWA,IAGnB,CACInU,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAIxDsC,MAAK,SAACC,GACHV,QAAQC,IAAI,OAAQS,MAGvBD,MAAK,SAACC,GACH8T,IACAjV,EAAa,CAAEM,KAAM,wBAExBY,MAAK,WACFmU,EAAQQ,KAAR,6BAAmC9E,OAEtCpE,OAAM,SAACC,GAAD,OAASnM,QAAQC,IAAIkM,SAO5B,UACI,oCACiB,GAAZsI,EACG,uBAAO7N,UAAU,oBAAjB,oCAEA,uBAAOA,UAAU,oBAAjB,oCAGJ,wBACA,cAAC,IAAD,CACIC,GAAIC,IACJC,mBAAiB,EAEjBT,KAAK,QACLM,UAAU,QACVd,QAASA,OAKjB,oCACI,uBAAOc,UAAU,oBAAjB,0BACA,wBACA,cAAC,aAAD,CACIM,SAAU,SAACX,GACPvG,QAAQC,IAAIsG,GAEZN,EAAS,UAEFM,EAAI,GAFF,YAGDA,EAAI,GAAS,EAAI,GACX,KAAOA,EAAI,GAAS,GACpBA,EAAI,GAAS,EALlB,YAODA,EAAI,GAAS,GACP,IAAMA,EAAI,GACVA,EAAI,KAGlB,IAAI8O,EAAU,IAAInP,KACdK,EAAI,GACJA,EAAI,GACJA,EAAI,IAERoO,EAAaU,EAAQC,cAG7B,uBACIzV,KAAK,OACLyG,KAAK,OACL5G,MAAOE,EAEPgH,UAAU,UACVQ,IAAKvB,OAIZmP,EAAOO,iBAAmB,uDAC3B,uBAAO1V,KAAK,SAASH,MAAM,gBCvK3CiJ,KAAM6M,cAAc,SA+CLC,OA7Cf,YAA6D,IAArCnF,EAAoC,EAApCA,YAAahR,EAAuB,EAAvBA,UAAWmV,EAAY,EAAZA,SAAY,EAClBzO,oBAAS,GADS,mBACjD0P,EADiD,KACpCC,EADoC,KAQxD,OACI,sBAAK/O,UAAU,MAAf,UACI,cAACuI,GAAA,EAAD,CAEI1G,QAAQ,YACRa,QAAS,kBAAMqM,GAAe,IAHlC,yBACSlB,GAOT,eAAC,KAAD,CACImB,OAAQF,EACRG,eAAgB,kBAAMF,GAAe,IAFzC,UAaI,8BACI,wBAAQrM,QAAS,kBAAMqM,GAAe,IAAtC,qBAEJ,cAAC,GAAD,CACInB,kBAjCU,WACtBmB,GAAe,SAACG,GAAD,OAAWA,MAiCdrB,SAAUA,EACVnE,YAAaA,EACbhR,UAAWA,WCwFhByW,OA9Hf,YAAsD,IAAjCC,EAAgC,EAAhCA,MAA0B5X,GAAM,EAAzB6O,OAAyB,EAAjBgJ,UAAiB,EAAN7X,IAAM,EACE6M,qBAC/CjM,GADIM,EADyC,EACzCA,UAAWC,EAD8B,EAC9BA,aAGb2W,GAJ2C,EAChBhL,cAGrB,cAAgB9M,GAC5B4B,QAAQC,IAAIiW,GALqC,MAMflQ,mBAAS,IANM,mBAM1CmQ,EAN0C,KAM/BC,EAN+B,KAQjD/K,qBAAU,WACNgL,MACD,CAAC/W,EAAUP,WAEd,IAAMsX,EAAO,yCAAG,mCAAAxH,EAAA,6DACZuH,EAAa,IADD,SAEW/V,IAAMC,IAAN,qBAAwBlC,GAAM,CACjDmC,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAJzC,OAENwO,EAFM,OAOZ3M,QAAQC,IAAI,qBAAsB0M,GAClC3M,QAAQC,IACJ,qDACA0M,EAAS1O,KAAKqY,SAASC,aAAaC,MAAMtB,SAVlC,EAYO,CACfvI,EAAS1O,KAAKqY,SAASC,aAAaC,MAAMtB,QAC1CvI,EAAS1O,KAAKqY,SAASC,aAAaE,IAAIvB,SAFrCwB,EAZK,KAYAC,EAZA,KAgBZ3W,QAAQC,IAAI,YAAayW,EAAKC,GAC9BP,EAAa,CAACM,EAAKC,IAjBP,2CAAH,qDA2Bb,SAASC,EAAiBC,GACtB,OAAOA,EAAEC,WAAW1V,QAAQ,wBAAyB,KA+DzD,OACI,qCACI,oBACIhD,GAAG,WACHkG,MAAO,CACH/C,MAAO,UACPiD,WAAY,OACZuD,UAAW,OACXxD,SAAU,UANlB,SASKyR,IAEL,wBAAO5X,GAAG,WAAV,UACI,gCACI,6BA1EQ,CAChB,eACA,qBACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAGiB0C,KAAI,SAACwR,EAAKyE,GAC3B,OAAO,6BAAezE,EAAI0E,eAAVD,UA4DZ,gCAtDJZ,GACAA,EAAUrV,KAAI,SAACqR,EAAGrQ,GACd,OACI,+BACU,GAALA,EAAS,qCAAe,qCACnB,GAALA,EACG,wCAAM8U,EAAiBzE,MAEvB,mCAAMyE,EAAiBzE,MAE3B,oBAAI/T,GAAG,oBAAP,SACI,cAAC,GAAD,CACIqW,SAAU3S,EAEVwO,YAAalS,EACbkB,UAAWA,EACXC,aAAcA,QAbjBuC,e,k4BCpD7B,IAAMwF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuK,KAAM,CACFkF,SAAU,GAEdpP,MAAO,CACHC,QAASN,EAAMI,QAAQ,GACvBG,UAAW,SACXxG,MAAOiG,EAAMQ,QAAQC,KAAKC,eAmblC,IAAMiM,GAAOzP,IAAOC,IAAV,MAUJyP,GAAO1P,IAAO2P,KAAV,MAsBK6C,IAjBDxS,IAAOsC,MAAV,MAWGtC,IAAO6P,MAAV,MAzcX,YAKI,IAJAjE,EAID,EAJCA,YACAkE,EAGD,EAHCA,kBACA2C,EAED,EAFCA,SACArE,EACD,EADCA,gBACD,GACiBxL,KAEctB,oBAAS,IAHxC,mBAGQoR,EAHR,KAGiBC,EAHjB,OAI6BrR,mBAAS,IAJtC,mBAIQiH,EAJR,KAIgBqK,EAJhB,OAaoDrM,qBAC/CjM,GADIM,EAbT,EAaSA,UAAWC,EAbpB,EAaoBA,aAbpB,KAakC2L,cAW7BvF,YAAQ,CACRR,cAnBkB,CAClBC,gBAAiB,GACjBC,YAAa,GACbC,aAAc,EAEdkB,MAAO,MAOPX,EAlBL,EAkBKA,SACAD,EAnBL,EAmBKA,aACAmP,EApBL,EAoBKA,MACAC,EArBL,EAqBKA,OACAlP,EAtBL,EAsBKA,QACAyR,EAvBL,EAuBKA,SAIEC,EAAczC,EAAM,CAAC,aAC3B/U,QAAQC,IAAI,eAAgBuX,GA5B7B,MA8BiCxR,mBAAS,IA9B1C,mBA8BQuL,EA9BR,KA8BkBkG,EA9BlB,OA+B6BzR,mBAAS,IA/BtC,mBA+BQpG,EA/BR,KA+BgBqG,EA/BhB,OAgCmCD,mBAAS,GAhC5C,mBAgCQ0O,EAhCR,KAgCmBC,EAhCnB,OAiCmC3O,mBAAS,IAjC5C,mBAiCQ+M,EAjCR,KAiCmB2E,EAjCnB,KAmCK9C,EAAUC,eAcdxJ,qBAAU,WACNrL,QAAQC,IAAI,2BAA4B6S,GACxC9S,QAAQC,IAAI,aAAc8S,KAC3B,CAACA,IACJ1H,qBAAU,WACNrL,QAAQC,IAAI,aAAcyU,KAC3B,CAACA,IACJrJ,qBAAU,WACNrL,QAAQC,IAAI,WAAYmX,KACzB,CAACA,IACJ/L,qBAAU,WACFyH,GACAwE,EAAUxE,EAAgBnS,QAE/B,CAACmS,IACJzH,qBAAU,WACNrL,QAAQC,IAAI,UAAWgN,GACvBjN,QAAQC,IAAI,iBAAkBgN,EAAOlL,QAGrC1B,IACKC,IADL,qBACuB2M,GAAU,CACzB1M,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAGpDsC,MAAK,SAACC,GAEH6W,EAAS,QAAS7W,EAAIzC,KAAKuI,MAAMsQ,iBAE1C,CAAC7J,IACJ5B,qBAAU,WACNrL,QAAQC,IAAI,eAAgBL,KAC7B,CAACA,IACJyL,qBAAU,WACNrL,QAAQC,IAAI,YAAasR,KAC1B,CAACA,IArFL,IAsFSnT,EAAO0W,eAAP1W,GACF+H,EAAQ,yCAAG,WAAOlI,GAAP,UAAA4Q,EAAA,yDACb7O,QAAQC,IAAI,QAAShC,GACrB+B,QAAQC,IAAI,aAAc8S,GAC1B/S,QAAQC,IAAI,YAAasR,GACzBvR,QAAQC,IAAI,sBAAuB6S,GACnC9S,QAAQC,IAAkC,gBAA9BhC,EAAKmI,gBAAgB1G,MAAgB,MAAQ,QACzDM,QAAQC,IAAIgB,WAAWhD,EAAK0Z,OAAOvW,QAAQ,KAAM,MACjDpB,QAAQC,IAAIgB,WAAWhD,EAAKuI,MAAMpF,QAAQ,KAAM,MAChDpB,QAAQC,IAAIyU,GAGS,GAAjBzW,EAAK2Z,UAAmD,gBAA9B3Z,EAAKmI,gBAAgB1G,QAO/CM,QAAQC,IAAI,kCAEZI,IACKgM,KADL,qBAEsBiE,EAFtB,iBAGQ,CACI2E,aAAc,UACdhX,KAAM,CACFiX,QACI2C,SACI5Z,EAAK0Z,OAAOvW,QAAQ,KAAM,IACtBH,WAAWhD,EAAKuI,MAAMpF,QAAQ,KAAM,MACxC,EACR+T,QACKpC,GAAkC,OAArBA,EAAUoC,SACvBrC,GAC8B,OAA3BA,EAAgBqC,QACd,MACA,QACVT,UAAWA,IAGnB,CACInU,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAIxDsC,MAAK,SAACC,GACH0L,MAAM,2CAA4C1L,MAErDwL,OAAM,SAACC,GAAD,OACHnM,QAAQC,IAAI,iCAAkCkM,OAK1C,gBAAZgL,EAvDS,iBAwDT9W,IACKgM,KADL,qBAEsBiE,EAFtB,kBAGQ,CACIwH,MAAOhF,EACP8B,QAAS,CACLmD,UACkC,gBAA9B9Z,EAAKmI,gBAAgB1G,MACf,MACA,OACVzB,KAAM,CACF0Z,OAAQ1W,WACJhD,EAAK0Z,OAAOvW,QAAQ,KAAM,KAE9BoF,MAAOvF,WAAWhD,EAAKuI,MAAMpF,QAAQ,KAAM,KAC3CsT,UAAWA,KAIvB,CACInU,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAIxDsC,MAAK,SAACC,GACHV,QAAQC,IAAI,gBAAiBS,GAC7B8T,IACAjV,EAAa,CAAEM,KAAM,wBAExBY,MAAK,WACFmU,EAAQQ,KAAR,6BAAmC9E,OAEtCpE,OAAM,SAACC,GACJnM,QAAQC,IAAI,8BAA+BkM,GACT,gBAA9BlO,EAAKmI,gBAAgB1G,OACrB0M,MAAM,sRA5FT,yCA0HH/L,IACDgM,KADC,qBAEgBiE,EAFhB,UAGE,CACIwH,MAAO/E,EACPxB,SAAUA,EACVyG,iBAAkB,CACd,CACID,UACkC,gBAA9B9Z,EAAKmI,gBAAgB1G,MACf,MACA,OACVzB,KAAM,CACF0Z,OAAQ1W,WACJhD,EAAK0Z,OAAOvW,QAAQ,KAAM,KAE9BoF,MAAOvF,WACHhD,EAAKuI,MAAMpF,QAAQ,KAAM,KAE7BsT,UAAWA,MAK3B,CACInU,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAIxDsC,MAAK,SAACC,GAAD,OAASV,QAAQC,IAAI,OAAQS,MAClCD,MAAK,SAACC,GACH8T,IACAjV,EAAa,CAAEM,KAAM,wBAExBY,MAAK,WACFmU,EAAQQ,KAAR,6BAAmC9E,OAEtCpE,OAAM,SAACC,GACJC,MAAM,+GACNpM,QAAQC,IAAI,OAAQkM,MAlKnB,4CAAH,sDAyKd,OAFAnM,QAAQC,IAAI8U,EAAM,YAGd,cAAC,GAAD,UACI,8BACI,eAACkD,GAAA,EAAD,CAAMxQ,WAAS,EAACG,QAAS,EAAzB,UACI,cAACqQ,GAAA,EAAD,CAAMhJ,MAAI,EAACiJ,GAAI,EAAf,SAEKpF,EACG,cAAC,GAAD,CAAY7F,OAAQ6F,EAAgBnS,OAEpC,cAAC,GAAD,CAAYsM,OAAQA,MAI5B,cAACgL,GAAA,EAAD,CAAMhJ,MAAI,EAACiJ,GAAI,EAAf,SACI,cAACC,GAAA,EAAD,UACI,eAAC,GAAD,CAAMhS,SAAUP,EAAaO,GAA7B,UAQI,uBACA,cAAC,GAAD,CACIyM,gBApPR,SAACnE,GACrBiJ,EAAajJ,IAoPeoE,aA7OX,SAACpE,GAClB6I,EAAU7I,IA6OkBsE,UAAWA,EACXzT,UAAWA,EACXwT,gBAAiBA,IAGrB,uBAAOlM,UAAU,oBAAjB,0BAGA,cAAC,IAAD,CACIC,GAAIxB,IACJrD,QAAS,CACL,CAAEtC,MAAO,eAAMsH,MAAO,gBACtB,CAAEtH,MAAO,eAAMsH,MAAO,iBAE1BV,KAAK,kBACLW,aAAW,EACXnB,QAASA,IAEb,oCACI,wBAAOc,UAAU,oBAAjB,0BACQqG,KAER,wBACA,cAAC,IAAD,CACIpG,GAAIC,IACJC,mBAAiB,EAEjBT,KAAK,QACLM,UAAU,QACVd,QAASA,OAGjB,oCACI,uBAAOc,UAAU,oBAAjB,0BAGA,wBACA,cAAC,IAAD,CACIC,GAAIC,IACJC,mBAAiB,EAEjBT,KAAK,SACLM,UAAU,QACVd,QAASA,OAKjB,oCACI,uBAAOc,UAAU,oBAAjB,0BAGA,wBACA,cAAC,aAAD,CACIM,SAAU,SAACX,GACPvG,QAAQC,IAAIsG,GAEZN,EAAS,UAEFM,EAAI,GAFF,YAGDA,EAAI,GAAS,EAAI,GACX,KAAOA,EAAI,GAAS,GACpBA,EAAI,GAAS,EALlB,YAODA,EAAI,GAAS,GACP,IAAMA,EAAI,GACVA,EAAI,KAGlB,IAAI8O,EAAU,IAAInP,KACdK,EAAI,GACJA,EAAI,GACJA,EAAI,IAERoO,EAAaU,EAAQC,cAG7B,uBACIzV,KAAK,OACLyG,KAAK,OACL5G,MAAOE,EAEPgH,UAAU,UACVQ,IAAKvB,OAIb,uBACc,iBAAbsR,GACG,kCACI,cAAC,GAAD,CACIvG,eA7UjB,SAACnC,GACpBgJ,EAAYhJ,IA6UwBrQ,GAAIA,MAIhB,0BAASkL,QAAS,kBAAM+N,GAAYD,IAApC,UACI,cAAC,IAAD,CACI9Q,KAAK,WACLR,QAASA,EACTuB,cAAc,EAEdnE,OAAQ,SAAC8H,GAAD,OACJ,cAAC4M,GAAA,EAAD,CACI1Q,SAAU,SAACiL,GAAD,OACNnH,EAAM9D,SACFiL,EAAEC,OAAOgF,UAGjBA,QAASpM,EAAMtL,WAa3B,0HASHsV,EAAOO,iBACJ,uDAEJ,uBAAO1V,KAAK,SAASH,MAAM,yBCnc3DiJ,KAAM6M,cAAc,SACpB,IAAMlO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCuK,KAAM,CACF,QAAS,CACLzJ,OAAQ,EACRR,QAAS,QA8DNsQ,OAzDf,YAOI,IANA9H,EAMD,EANCA,YACAhR,EAKD,EALCA,UACA+Y,EAID,EAJCA,eACAlB,EAGD,EAHCA,SACA5K,EAED,EAFCA,WACAwG,EACD,EADCA,UAEMf,EAAU1K,KADjB,EAEuCtB,oBAAS,GAFhD,mBAEQ0P,EAFR,KAEqBC,EAFrB,KAUC,OAJAtK,qBAAU,WACNrL,QAAQC,IAAI,uBAAwB8S,GACpCsF,MACD,CAAC3C,IAEA,sBAAKpR,MAAO,CAAEgG,UAAW,QAASxC,QAAS,EAAGwQ,OAAQ,QAAtD,UACI,cAACnJ,GAAA,EAAD,CACIvI,UAAWoL,EAAQD,KACnBtJ,QAAQ,YAERa,QAAS,kBAAMqM,GAAe,IAJlC,SAMKpJ,IAEL,uBACA,uBACA,eAAC,KAAD,CACIqJ,OAAQF,EACRG,eAAgB,kBAAMF,GAAe,IAFzC,UAaI,8BACI,wBAAQrM,QAAS,kBAAMqM,GAAe,IAAtC,qBAEJ,cAAC,GAAD,CACInB,kBApCU,WACtBmB,GAAe,SAACG,GAAD,OAAWA,MAoCdxF,YAAaA,EACbhR,UAAWA,EACX6X,SAAUA,EACVrE,gBAAiBC,W,OCsBtBwF,OApFf,YAMI,IALAxF,EAKD,EALCA,UACAzC,EAID,EAJCA,YACAhR,EAGD,EAHCA,UACAkZ,EAED,EAFCA,WACA7X,EACD,EADCA,KACD,EAC2CqF,mBAAS,IADpD,mBACQyS,EADR,KACuBC,EADvB,KAGCrN,qBAAU,WACNqN,EAAiBF,KAClB,CAACA,IALL,MASyCxS,mBAAS,IATlD,mBASQ2S,EATR,KASsBC,EATtB,KAUCvN,qBAAU,WACNrL,QAAQC,IAAI,aAAc8S,GAC1B,IAAI8F,EAAUC,UAAUpN,KAAKmB,UAAUkG,IACvC1S,IACKC,IADL,qBACuBgQ,EADvB,uBACiDuI,GAAW,CACpDtY,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAGpDsC,MAAK,SAACC,GACHV,QAAQC,IAAI,uCAAwCS,GACpDkY,EAAgBlY,EAAIzC,KAAK8a,mBAE5B7M,OAAM,SAACC,GAAD,MAAS,sCACrB,IACHd,qBAAU,WACNrL,QAAQC,IAAI,WAAYU,GACxBX,QAAQC,IAAI,gBAAiB0Y,KAC9B,CAACA,IAEJ,IAAMK,EAAkB,SAACC,GACrB,IAAI1S,EAAO,IAAIL,KAAK+S,GAUpB,OATAjZ,QAAQC,IACJ,aACAsG,EAAK2S,cACD,WACC3S,EAAK4S,WAAa,GACnB,UACA5S,EAAK6S,UACL,UAGJ7S,EAAK2S,cACL,WACC3S,EAAK4S,WAAa,GACnB,UACA5S,EAAK6S,UACL,UAGR,OACI,mCACKT,GACGF,EAAcY,SAAS1Y,IACvBgY,EAAa7X,KAAI,SAACwY,GACd,OACI,+BACI,uBACA,6BAAuB,OAAlBA,EAAKvB,UAAqB,eAAO,iBACtC,6BAAKuB,EAAKrb,KAAKuI,QACf,6BAAK8S,EAAKrb,KAAK0Z,SACf,8BAvDEd,EAyDMyC,EAAKrb,KAAKuI,MAAQ8S,EAAKrb,KAAK0Z,OAxDjDd,EAAEC,WAAW1V,QAAQ,wBAAyB,QA2DjC,6BACK4X,EAAgBM,EAAKrb,KAAKyW,gBA7DvD,IAA0BmC,Q,OCmdf0C,OAxdf,YASG,EARCC,KAQD,EAPCzG,UAOD,EANC0G,UAMA,IALAzD,EAKD,EALCA,MACA1F,EAID,EAJCA,YAGAoJ,GACD,EAHCC,cAGD,EAFCC,WAED,EADCF,uBACD,EACqCzO,qBAAWjM,GAAvCM,EADT,EACSA,UAAWC,EADpB,EACoBA,aADpB,EAEmCyG,mBAAS,IAF5C,mBAEQmQ,EAFR,aAGyCnQ,mBAAS,KAHlD,mBAGQ6T,EAHR,aAIiC7T,mBAAS,KAJ1C,mBAIQ8T,EAJR,aAKiE9T,mBAC5D,KANL,mBAKQ+T,EALR,KAKkCC,EALlC,OAQyChU,mBAAS,GARlD,mBAQQiU,EARR,KAQsBC,EARtB,OASqClU,mBAAS,IAT9C,mBASQwS,EATR,KASoB2B,EATpB,OAUiCnU,oBAAS,GAV1C,mBAUkBoU,GAVlB,WAWO/B,EAAiB,kBAAM+B,GAAY,SAACtE,GAAD,OAAWA,MAyIpD,SAASc,EAAiBC,GACtB,OAAOA,EAAEC,WAAW1V,QAAQ,wBAAyB,KAkBzD,OA3JAiK,qBAAU,WACNrL,QAAQC,IAAI,cAAeuY,KAC5B,CAACA,IACJnN,qBAAU,WACNrL,QAAQC,IAAI,yBAA0ByZ,GACtCM,EAA4BN,KAC7B,CAACA,IAoBJrO,qBAAU,WACNrL,QAAQC,IAAI,aAAckW,KAC3B,CAACA,IAsBJ9K,qBAAU,WACN,IAEI1M,EAAmB,EACnBC,EAAmB,EAIvBmb,EAAyBjZ,KAAI,SAACwY,EAAMxX,GAC5BwX,EAAK,KAC6B,SAA9BA,EAAK,GAAGrb,KAAK6Z,MAAM3C,SACnBnV,QAAQC,IACJ,SACA6B,EACA+X,EACAP,EAAK,GAAGrb,KAAKoc,SAAWf,EAAK,GAAGrb,KAAK0Z,QAEzC3X,QAAQC,IACJ,sBACAqZ,EAAK,GAAGrb,KAAKoc,SAAWf,EAAK,GAAGrb,KAAK0Z,QAEzCpY,EAAa,CACTM,KAAM,kBACNM,KAAMmZ,EAAK,GAAGrb,KAAKoc,SAAWf,EAAK,GAAGrb,KAAK0Z,SAI/CuC,EAAgB,KAEJZ,EAAK,GAAGrb,KAAKoc,SAAWf,EAAK,GAAGrb,KAAK0Z,OACjDuC,EAAgB,KAGxBla,QAAQC,IAAI,uBAAwB6Z,EAAShY,GAAIwX,EAAK,IAClDQ,EAAShY,KACyB,SAA9BwX,EAAK,GAAGrb,KAAK6Z,MAAM3C,SACnBxW,GACImb,EAAShY,GAAG7D,KAAKuI,MAAQ8S,EAAK,GAAGrb,KAAK0Z,QAGrCmC,EAAShY,GAAG7D,KAAKuI,MACb,GAAKsT,EAAShY,GAAG7D,KAAKqc,cAAgB,IAAM,GACzCR,EAAShY,GAAG7D,KAAKuI,OACzB8S,EAAK,GAAGrb,KAAK0Z,SAEjB/Y,GACIkb,EAAShY,GAAG7D,KAAKuI,MAAQ8S,EAAK,GAAGrb,KAAK0Z,QAGrCmC,EAAShY,GAAG7D,KAAKuI,MACb,GAAKsT,EAAShY,GAAG7D,KAAKqc,cAAgB,IAAM,GACzCR,EAAShY,GAAG7D,KAAKuI,OACzB8S,EAAK,GAAGrb,KAAK0Z,SAGzB3X,QAAQC,IACJ,yBACAtB,EACAC,QA2BT,CAACkb,IAqBAC,GACAA,EAAyBjZ,KAAI,SAACwY,EAAMxX,GAChC,OACI,qCACI,qBAEIwH,QAAS,kBACL6Q,GAAc,SAACrE,GAIX,OAAc,GAHF0C,EAAW+B,QACnBjB,EAAK,GAAGrb,KAAK0C,MAGP,GAAN,mBAAWmV,GAAX,CAAiBwD,EAAK,GAAGrb,KAAK0C,OAEvBmV,EAAK9G,QAAO,SAACwL,GAChB,OAAOA,GAAOlB,EAAK,GAAGrb,KAAK0C,YAX/C,UA4BI,oBAAI2D,MAAO,CAAEE,WAAY,QAAzB,SACK8U,EAAK,GAAGrb,KAAK0C,OAGlB,6BAAK2Y,EAAK,GAAGrb,KAAK6Z,MAAMxR,OAExB,oBAAIhC,MAAO,CAAEyD,UAAW,SAAxB,SACKuR,EAAK,GACA1C,EACI0C,EAAK,GAAGrb,KAAKuI,MAAMiU,QAAQR,IAE/B,yBAGV,oBACI3V,MACIgV,EAAK,IAAMA,EAAK,GAAGrb,KAAKqc,eAAiB,EACnC,CACI/Y,MAAO,QACPiD,WAAY,SACZuD,UAAW,SAEf,CACIxG,MAAO,MACPiD,WAAY,SACZuD,UAAW,SAX7B,SAeKuR,EAAK,GACAA,EAAK,GAAGrb,KAAKqc,cAAgB,IAC7B,yBAGV,oBAAIhW,MAAO,CAAEyD,UAAW,SAAxB,SACKuR,EAAK,GACA1C,GAEQ0C,EAAK,GAAGrb,KAAKuI,MACZ,GACI8S,EAAK,GAAGrb,KAAKqc,cACV,IACA,GACJhB,EAAK,GAAGrb,KAAKuI,OACnBiU,QAAQR,IAEd,yBAGV,oBAAI7b,GAAG,mBAAP,SACKkb,EAAK,GACA1C,EAAiB0C,EAAK,GAAGrb,KAAK0Z,QAC9BjM,KAAKmB,UAAUyM,EAAK,MAG9B,oBAAIlb,GAAG,mBAAP,SACKkb,EAAK,IACF1C,EACI0C,EAAK,GAAGrb,KAAKoc,SAASI,QAAQR,MAI1C,oBAAI7b,GAAG,mBAAP,SACKkb,EAAK,IACF1C,GAEQ0C,EAAK,GAAGrb,KAAKoc,SACbf,EAAK,GAAGrb,KAAK0Z,QACf8C,QAAQR,MAItB,oBAAI7b,GAAG,mBAAP,SACKkb,EAAK,IAAMA,EAAK,GACX1C,GAEQ0C,EAAK,GAAGrb,KAAKuI,MACb8S,EAAK,GAAGrb,KAAK0Z,QACf8C,QAAQR,IAEd,yBAGTX,EAAK,IAAMA,EAAK,GACb,oBACIlb,GAAG,mBACHkG,MACIgV,EAAK,GAAGrb,KAAKuI,MAAQ8S,EAAK,GAAGrb,KAAK0Z,OAC9B2B,EAAK,GAAGrb,KAAKoc,SACTf,EAAK,GAAGrb,KAAK0Z,QACrB,EACM,CAAEpW,MAAO,QAASiD,WAAY,QAC9B,CAAEjD,MAAO,MAAOiD,WAAY,QAR1C,SAWKoS,GAEO0C,EAAK,GAAGrb,KAAKuI,MACT8S,EAAK,GAAGrb,KAAK0Z,OACjB2B,EAAK,GAAGrb,KAAKoc,SACTf,EAAK,GAAGrb,KAAK0Z,QACnB8C,QAAQR,MAIlB,uBAGJ,oBACI7b,GAAG,mBACHkG,OACKgV,EAAK,GAAGrb,KAAKuI,MACT,GACI8S,EAAK,GAAGrb,KAAKqc,cAAgB,IAC1B,GACJhB,EAAK,GAAGrb,KAAKuI,OACjB8S,EAAK,GAAGrb,KAAK0Z,QACjB,EACM,CAAEpW,MAAO,QAASiD,WAAY,QAC9B,CAAEjD,MAAO,MAAOiD,WAAY,QAX1C,SAcK8U,EAAK,IAAMA,EAAK,GACX1C,IAES0C,EAAK,GAAGrb,KAAKuI,MACT,GACI8S,EAAK,GAAGrb,KAAKqc,cACV,IACA,GACJhB,EAAK,GAAGrb,KAAKuI,OACrB8S,EAAK,GAAGrb,KAAK0Z,QACf8C,QAAQR,IAEd,yBAITX,EAAK,IAAMA,EAAK,GACb,oBACIlb,GAAG,mBAQHkG,MACIgV,EAAK,GAAGrb,KAAKuI,MAAQ8S,EAAK,GAAGrb,KAAKoc,SAC9B,GACJ,EACM,CAAE9Y,MAAO,QAASiD,WAAY,QAC9B,CAAEjD,MAAO,MAAOiD,WAAY,QAd1C,SAiBK8U,EAAK,GAAGrb,KAAKoc,SACRzD,GAKQ,KAHC0C,EAAK,GAAGrb,KAAKuI,MACV8S,EAAK,GAAGrb,KAAKoc,SACb,IAENI,QAAQ,GAAK,KAEnB,OAUV,uBAqBJ,oBAAIrc,GAAG,oBAAP,SACKkb,EAAK,IACF,cAAC,GAAD,CACIjB,eAAgBA,EAChB/H,YAAaA,EACbhR,UAAWA,EACX6X,SAAS,eACT5K,WAAW,eACXwG,UAAWuG,EAAK,GAAGrb,KAAK6Z,UAqBpC,oBAAI1Z,GAAG,oBAAP,SACI,cAAC+Q,GAAA,EAAD,CAIIlC,OAAQqM,EAAK,GAAGrb,KAAK0C,KACrB8H,QAAQ,YACRa,QAAS,kBAxRhB,SAACxH,EAAG4Y,EAAiB1E,GACtChW,QAAQC,IAAI,mBAAoBya,EAAiB1E,GACjD3V,IACK2L,OADL,qBAC0BsE,EAD1B,UAC+C,CACvCrS,KAAM,CAAE6Z,MAAO4C,EAAiBnJ,SAAUyE,GAC1CzV,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAGpDsC,MAAK,SAACC,GACHV,QAAQC,IAAIS,GACZnB,EAAa,CAAEM,KAAM,wBAExBqM,OAAM,SAACC,GAAD,OAASnM,QAAQC,IAAIkM,MA4QJwO,CAAa7Y,EAAGwX,EAAK,GAAGrb,KAAK6Z,MAAO9B,IAP5C,yBACSlU,OA9PRA,GA4QRwX,EAAK,IACF,cAAC,GAAD,CACIha,UAAWA,EACXgR,YAAaA,EACb3P,KAAM2Y,EAAK,GAAGrb,KAAK0C,KACnBoS,UAAWuG,EAAK,GAAGrb,KAAK6Z,MACxBU,WAAYA,WClTzBoC,OAzJf,YAWI,IAVA5E,EAUD,EAVCA,MACAwD,EASD,EATCA,KACAla,EAQD,EARCA,UACAgR,EAOD,EAPCA,YACAqJ,EAMD,EANCA,cAEAkB,GAID,EALCjB,WAKD,EAJCiB,kBACAC,EAGD,EAHCA,kBACAC,EAED,EAFCA,qBACAC,EACD,EADCA,sBACD,EACmChV,mBAAS,IAD5C,mBACQmQ,EADR,KACmBC,EADnB,OAEmCpQ,mBAAS,IAF5C,mBAEQ+M,EAFR,KAEmB2E,EAFnB,OAGmC1R,mBAAS,IAH5C,mBAGQyT,EAHR,KAGmBwB,EAHnB,OAI2DjV,mBAAS,IAJpE,mBAIQ0T,EAJR,KAI+BwB,EAJ/B,KA8FC,OAzFA7P,qBAAU,WACN+K,EAAaoD,KACd,IACHnO,qBAAU,WACN+K,EAAaoD,KACd,CAACA,IACJnO,qBAAU,WACNqM,EAAa,IACbuD,EAAa,IACbC,EAAyB,IACzB/E,EAAUrV,IAAV,yCAAc,WAAOqR,GAAP,oBAAAtD,EAAA,6DACV7O,QAAQC,IAAI,KAAMkS,GAEd0G,EAAUC,UAAUpN,KAAKmB,UAAUsF,IAH7B,SAIe9R,IAAMC,IAAN,qBACPgQ,EADO,uBACmBuI,GACxC,CACItY,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAR/C,cAIJgd,EAJI,gBAYa9a,IAAMC,IAAN,qBAAwB6R,EAAExR,MAAQ,CACrDJ,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAd3C,OAYJid,EAZI,OAiBVpb,QAAQC,IAAI,sBAAuBkb,EAAYC,GACV,SAAjCD,EAAWld,KAAK6Z,MAAM3C,SAEtB0F,EAAiBM,EAAWld,KAAK0Z,OAASyD,EAASnd,KAAKuI,OAExDuU,EACII,EAAWld,KAAK0Z,OACZyD,EAASnd,KAAKuI,MACd4U,EAASnd,KAAKqc,cACd,MAEgC,OAAjCa,EAAWld,KAAK6Z,MAAM3C,UAC7B2F,EAAkBK,EAAWld,KAAK0Z,OAASyD,EAASnd,KAAKuI,OACzDwU,EACIG,EAAWld,KAAK0Z,OACZyD,EAASnd,KAAKuI,MACd4U,EAASnd,KAAKqc,cACd,MAGZta,QAAQC,IAAI,eAAgBkb,EAAYC,GAExC1D,GAAa,SAAC5B,GAAD,4BAAcA,GAAd,CAAoBqF,OACjCF,GAAa,SAACnF,GAAD,4BAAcA,GAAd,CAAoBsF,OACjCF,GAAyB,SAACpF,GAAD,4BAClBA,GADkB,CAErB,CAACqF,EAAYC,QA3CP,4CAAd,yDA8CD,CAACjF,IAEJ9K,qBAAU,WACNrL,QAAQC,IAAI,aAAcwZ,KAC3B,CAACA,IAEJpO,qBAAU,WACNrL,QAAQC,IAAI,eAAgB+V,EAAOG,KACpC,CAACA,IA0BA,qCACI,oBACI/X,GAAG,WACHkG,MAAO,CACH/C,MAAO,UACPiD,WAAY,OACZuD,UAAW,OACXxD,SAAU,UANlB,SASKyR,IAcL,wBAAO5X,GAAG,WAAV,UACI,gCACI,6BAjDQ,CAChB,eACA,qBACA,qBACA,qBACA,eACA,SACA,iCACA,qBACA,2BACA,sBACA,4BACA,qBACA,yCACA,gBAGiB0C,KAAI,SAACwR,EAAKyE,GAC3B,OAAO,6BAAezE,EAAI0E,eAAVD,UAiCZ,gCACI,cAAC,GAAD,CACIf,MAAOA,EACPjD,UAAWA,EACX2G,sBAAuBA,EACvBF,KAAMrD,EACNsD,UAAWA,EACXnJ,YAAaA,EACbhR,UAAWA,EACXqa,cAAeA,EACfC,YAAU,SAItB,2BCpBGyB,OAjIf,YAQI,IAPA/K,EAOD,EAPCA,YACAqJ,EAMD,EANCA,cACA2B,EAKD,EALCA,iBACAT,EAID,EAJCA,iBACAE,EAGD,EAHCA,qBACAC,EAED,EAFCA,sBACAF,EACD,EADCA,kBACD,EACqC7P,qBAAWjM,GAAvCM,EADT,EACSA,UADT,KACoBC,aAC+ByG,mBAAS,KAF5D,mBAEQuV,EAFR,KAE2BC,EAF3B,OAG6DxV,mBAAS,IAHtE,mBAGQyV,EAHR,KAGgCC,EAHhC,OAI2B1V,mBAAS,IAJpC,gCAK+DA,mBAAS,KALxE,mBAkGC,OAlGD,UAMe6O,eACdxJ,qBAAU,WACNhL,IACKC,IADL,qBACuBgQ,GAAe,CAC9B/P,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAGpDsC,MAAK,SAACC,GACHV,QAAQC,IAAI,yCAA0CS,GAGtDV,QAAQC,IACJ,qBACAS,EAAIzC,KAAK0d,cAAcC,eAE3B,cAA2BlK,OAAOmK,QAC9Bnb,EAAIzC,KAAKqY,SAASwF,eADtB,eAEG,CAAC,IAAD,sBAFcpc,GAEd,WACCM,QAAQC,IAAI,YAAaP,GACE,SAAvBA,EAAMoY,MAAM3C,QACZmG,EAAiB5b,EAAMiY,OAASjY,EAAM2a,UACR,OAAvB3a,EAAMoY,MAAM3C,SACnBwE,EAAcja,EAAMiY,OAASjY,EAAM2a,UA2B3CmB,EAAqB9a,EAAIzC,KAAK0d,cAAcC,kBAE/Cnb,MAAK,SAACC,SACZ,CAACpB,EAAUP,WAEdsM,qBAAU,WACNrL,QAAQC,IAAI,qBAAsBsb,GAClCG,EAA0B,IAC1B,IAHY,2CAGApJ,EAHA,KAGK5S,EAHL,KAIRM,QAAQC,IAAR,UAAeqS,EAAf,cAAwB5G,KAAKmB,UAAUnN,KACvCgc,GAA0B,SAACK,GAAD,4BACnBA,GADmB,CAEtB,CAACzJ,EAAK5S,SAJd,MAA2BgS,OAAOmK,QAAQN,GAA1C,eAA+D,MAOhE,CAACA,IAEJlQ,qBAAU,WACNrL,QAAQC,IAAI,0BAA2Bwb,KACxC,CAACA,IAwBA,8BACKA,EAAuB3a,KAAI,SAACJ,GACzB,OACI,cAAC,GAAD,CACIiZ,cAAeA,EACfC,YAAU,EACV5D,MAAOtV,EAAI,GACX8Y,KAAM9Y,EAAI,GACV4P,YAAaA,EACbhR,UAAWA,EACXic,kBAAmBA,EACnBV,iBAAkBA,EAClBC,kBAAmBA,EACnBC,qBAAsBA,EACtBC,sBAAuBA,U,+BC/HlCgB,GAAc,CACvB,CACI5d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAGT,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,YCxGAC,GAAmB,CAC5B,CACI9d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,EACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,WAET,CACI7d,GAAI,GACJ6d,IAAK,YC7EE,SAASE,GAAT,GAAiD,IAAnBC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3CC,EAASpb,KAAKqb,GAAK,IA6CzBlR,qBAAU,WACNrL,QAAQC,IAAI,SAAUmc,KACvB,IAkBH,OACI,eAACI,GAAA,EAAD,CACI5R,MAAO,IACP0N,OAAQ,IACRhQ,OAAQ,CAAEmU,IAAK,EAAGC,MAAO,GAAIC,KAAM,IAAKC,OAAQ,GAHpD,UAKI,cAACC,GAAA,EAAD,CACI5e,KAAMme,EACNU,QAAQ,WACRC,GAAI,IACJC,GAAI,IACJC,YAAa,GAEbC,KAAK,UACLC,WAAW,EACXC,mBAAmB,EACnBpW,MA9EkB,SAAC,GAWxB,IAVH+V,EAUE,EAVFA,GACAC,EASE,EATFA,GACAK,EAQE,EARFA,SACAC,EAOE,EAPFA,YACAL,EAME,EANFA,YAKA3L,GACE,EALFiM,QAKE,EAJFC,MAIE,EAHFlX,KAGE,EAFFmX,SAEE,EADFnM,cAEMoM,EAASJ,EAA4C,IAA7BL,EAAcK,GACtCzG,EAAIkG,EAAKW,EAASxc,KAAKyc,KAAKN,EAAWf,GACvCsB,EAAIZ,EAAKU,EAASxc,KAAK2c,KAAKR,EAAWf,GAE7C,OACI,sBACIzF,EAAGA,EACH+G,EAAGA,EACHV,KAAK,QACLY,WAAYjH,EAAIkG,EAAK,QAAU,MAC/BgB,iBAAiB,UACjBxZ,SAAU,GANd,SAQI,uBAAOuZ,WAAW,SAASE,GAAG,IAA9B,mBAAsC1M,QA2C1C,SAYK8K,EAAOtb,KAAI,SAACmd,EAAOT,GAAR,OACR,cAAC,KAAD,CACIN,KACIlB,IAAawB,EAAQ,IAAMxB,GAAYja,QAAvC,WAOhB,cAAC8a,GAAA,EAAD,CACI5e,KAAMoe,EACNS,QAAQ,WACRC,GAAI,IACJC,GAAI,IACJM,YAAa,IACbL,YAAa,IAEbC,KAAK,UACLE,mBAAmB,EACnBpW,MAlEM,SAACiX,GACf,MAAqB,OAAjBA,EAAM9I,QACA,GAAN,OAAU8I,EAAMC,UAAhB,0BACED,EAAMR,SADR,KAGE,GAAN,OAAUQ,EAAMhI,UAAhB,sBACEgI,EAAMR,SADR,MA8DQU,mBAAmB,EAXvB,SAaK9B,EAAOvb,KAAI,SAACmd,EAAOT,GAAR,OACR,cAAC,KAAD,CACIN,KACIhB,GAAiBsB,EAAQtB,GAAiBna,QAA1C,c,k2BCjHVwF,aAAW,SAACC,GAAD,MAAY,CACrCuK,KAAM,CACFkF,SAAU,GAEdpP,MAAO,CACHC,QAASN,EAAMI,QAAQ,GACvBG,UAAW,SACXxG,MAAOiG,EAAMQ,QAAQC,KAAKC,eAoarBxD,IAAOC,IAAV,MAUGD,IAAO2P,KAAV,MAKI3P,IAAOsC,MAAV,MAWGtC,IAAO6P,MAAV,MCtdX5L,KAAM6M,cAAc,SACFjO,aAAW,SAACC,GAAD,MAAY,CACrCuK,KAAM,CACF,QAAS,CACLzJ,OAAQ,EACRR,QAAS,Q,OA8DNsW,I,mDCvDT9W,GAAYC,YAAW,CACzBwK,KAAM,CACFsM,SAAU,KAEdC,OAAQ,CACJpc,QAAS,eACToG,OAAQ,QACRiW,UAAW,cAEfvI,MAAO,CACHzR,SAAU,IAEdia,IAAK,CACDpW,aAAc,IAGlByL,UAAW,CACPjJ,MAAO,SAGA,SAAS6T,GAAT,GAMX,IALAC,EAKD,EALCA,qBACA/C,EAID,EAJCA,cACAgD,EAGD,EAHCA,UACArf,EAED,EAFCA,UACAgR,EACD,EADCA,YACD,EAC6BtK,mBAAS,IADtC,mBACQ4Y,EADR,KACgBC,EADhB,OAKyB7Y,mBAAS,IALlC,mBAKQ8Y,EALR,KAKcC,EALd,KAMO/M,EAAU1K,KANjB,GAO+B0K,EAAQsM,OAEFtY,mBAAS0Y,IAT9C,mBASQM,EATR,KASoBC,EATpB,OAWiEjZ,mBAC5D,IAZL,gCAcwBA,mBAAS,IAdjC,mBAcQkZ,EAdR,KAccC,EAdd,KAgBC9T,qBAAU,WACNrL,QAAQC,IAAI,wBAAyBye,GACrCO,EAAcP,KACf,CAACA,IAGJrT,qBAAU,WACN8T,EAAO,GACPzN,OAAOmK,QAAQ+C,GAAQ9d,KAAI,YAAmB,IAAD,mBAAXpB,GAAW,WACzCyf,GAAO,SAACrJ,GAAD,OAAUA,EAAO7U,WAAWvB,SAEvCgS,OAAOmK,QAAQiD,GAAMhe,KAAI,YAAmB,IAAD,mBAAXpB,GAAW,WACvCyf,GAAO,SAACrJ,GAAD,OAAUA,EAAO7U,WAAWvB,WAExC,CAACof,EAAMF,IACVvT,qBAAU,WACNrL,QAAQC,IAAI,WAAY2e,KACzB,CAACA,IACJvT,qBAAU,WAENrL,QAAQC,IAAI,QAASif,KACtB,CAACA,IACJ7T,qBAAU,WACN8T,EAAO,GACPzN,OAAOmK,QAAQmD,GAAYle,KAAI,YAAmB,IAAD,6BACvCA,KAAI,SAACwY,GACPtZ,QAAQC,IACJ,YACAqZ,EAAKxB,MAAMnX,KACX,aACA2Y,EAAK8F,WAETD,GAAO,SAACrJ,GAAD,OAAUA,EAAO7U,WAAWqY,EAAK8F,cACxCP,GAAU,SAAC/I,GACP,OAAO,2BACAA,GADP,mBAEKwD,EAAKxB,MAAMnX,KAAOM,WAAWqY,EAAK8F,sBAMnDT,EAAU7d,KAAI,SAACwY,EAAMxX,GACjBqd,GAAO,SAACrJ,GAAD,OAAUA,EAAO7U,WAAWqY,EAAK8F,cACxCL,GAAQ,SAACjJ,GACL,OAAO,2BACAA,GADP,mBAEKhU,EAAIb,WAAWqY,EAAK8F,qBAIlC,CAACJ,IAEJ3T,qBAAU,WAENrL,QAAQC,IAAI,SAAU6e,KACvB,CAACA,IAEJ,IAkDMO,EAAmB,SAACxR,GAAW,IAAD,EACRA,EAAMuE,OAAtB9L,EADwB,EACxBA,KAAM5G,EADkB,EAClBA,MACdqf,GAAQ,SAACjJ,GACL,OAAO,2BACAA,GADP,mBAEKxP,EAAOrF,WAAWvB,SAKzB4f,EAAe,SAACzR,GAClB,IAD4B,EAEJA,EAAMuE,OAAtB9L,EAFoB,EAEpBA,KAAM5G,EAFc,EAEdA,MACdmf,GAAU,SAAC/I,GACP,OAAO,2BACAA,GADP,mBAEKxP,EAAOrF,WAAWvB,SA0BP6f,cAAW,SAAC/X,GAAD,MAAY,CAC3CuK,KAAM,CAEFnH,MAAO,GACP,uBAAwB,CACpBrJ,MAAOiG,EAAMQ,QAAQwX,QAAQC,KAE7B,UAAW,CACP1X,UAAW,cARHwX,CAYpB1L,MAEJ,OACI,cAAC6L,GAAA,EAAD,CAAM9Y,UAAWoL,EAAQD,KAAMtJ,QAAQ,WAAvC,SACI,eAACkX,GAAA,EAAD,WACI,iDAAUT,KACV,uBAAM5a,MAAO,CAAEsb,MAAO,SAAtB,UACK,oBADL,0CAEK,uBAEL,uBACClO,OAAOmK,QAAQmD,GAAYle,KAAI,YAAmB,IAAD,mBAAhBwR,EAAgB,KAAX5S,EAAW,KAC9C,OACI,qCACI,qBACI4E,MAAO,CACHE,WAAY,OACZ4D,aAAc,OAHtB,SAMKkK,IAEJ5S,EAAMoB,KAAI,SAAC+e,GACR,OACI,gCAC0B,OAArBA,EAAI/H,MAAM3C,QACL0K,EAAI/H,MAAMnX,KACVkf,EAAI/H,MAAMxR,KAAM,IACrBuZ,EAAIpC,SAJT,KAIqB,mBAUjB,cAAC5J,GAAA,EAAD,CACIzV,GAAIyhB,EAAI/H,MAAMnX,KAIdjB,MAAOkf,EAAOiB,EAAI/H,MAAMnX,MACxB0G,aACIuX,EAAOiB,EAAI/H,MAAMnX,MAErBmf,IAAK,EAEL5Y,SAAUoY,EACVhZ,KAAMuZ,EAAI/H,MAAMnX,KAChBd,KAAK,SACLkU,WAAY,CACRC,aAAc,KAGlBnR,KAAK,gBAMrB,6BAKZ,qBACIyB,MAAO,CACHE,WAAY,OACZ4D,aAAc,OAHtB,0BAQCuW,EAAU7d,KAAI,SAACwY,EAAMxX,GAClB,OACI,gCACU,GAALA,EAAS,MAAQ,MADtB,KAC+BwX,EAAKmE,SADpC,MAGI,cAAC5J,GAAA,EAAD,CACIzV,GAAI0D,EAIJpC,MAAOof,EAAKhd,GACZuF,aAAciS,EAAK8F,UAEnBU,IAAK,EAEL5Y,SAAUmY,EACV/Y,KAAMxE,EACNjC,KAAK,SACLkU,WAAY,CACRC,aAAc,KAGlBnR,KAAK,gBAgBrB,uBACA,cAACsM,GAAA,EAAD,CACI1G,QAAQ,YACRlH,MAAM,UACNsB,KAAK,QACL+D,UAAWoL,EAAQ+N,OACnBC,UAAW,cAAC,KAAD,IACX1W,QAhOK,WACjB,IAAI2W,EAAavU,KAAKC,MAAL,2FAGH+F,OAAOmK,QAAQmD,GAAYle,KAAI,YAAmB,IAAD,mBAAhBwR,EAAgB,KAAX5S,EAAW,KAC/C,MAAM,IAAN,OAAW4S,EAAX,eAAqB5S,EAAMoB,KACvB,SAACwY,GAAD,0BACiB5N,KAAKmB,UAAUyM,EAAKxB,OADrC,uDAGQ8G,EAAOtF,EAAKxB,MAAMnX,MACZie,EAAOtF,EAAKxB,MAAMnX,MAClB,EALd,sCADJ,kCAJC,yKAoB+Bme,EAAK,GAAKA,EAAK,GAAK,EApBnD,uEAsBGA,EAAK,GAAKA,EAAK,GAAK,EAtBvB,kHA6BfpT,KAAKmB,UAAU8O,GA7BA,gBAgCjB3b,QAAQC,IAAI,cAAeggB,GAE3B5f,IACKgM,KADL,qBACwBiE,EADxB,SAC4C2P,EAAY,CAChD1f,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAGpDsC,MAAK,SAACC,GACHV,QAAQC,IAAI,gBACZmM,MAAM,kDAETF,OAAM,SAACC,GACJnM,QAAQC,IAAI,QACZmM,MAAM,+DA2KN,uB,slDCvShB,IAodM8T,GAAgBxb,IAAOC,IAAV,MA+CbiL,GAAalL,IAAOC,IAAV,MAMVkL,GAAanL,IAAOC,IAAV,MAIVmL,GAAqBpL,IAAOC,IAAV,MAiBTwb,GA9hBc,WAAO,IAAD,IACoBlV,qBAC/CjM,GADIM,EADuB,EACvBA,UADuB,KACZC,aADY,EACE2L,cAIGlF,mBAAS,IALd,mBAKxBoa,EALwB,KAKZC,EALY,OAMDra,mBAAS,GANR,mBAMxBtH,EANwB,KAMf4hB,EANe,OAOSta,mBAAS,GAPlB,mBAOxBua,EAPwB,KAOVC,EAPU,OAQKxa,mBAAS,GARd,mBAQxBya,EARwB,KAQZC,EARY,OASO1a,mBAAS,GAThB,mBASxB2a,EATwB,KASXC,EATW,OAUa5a,mBAAS,GAVtB,mBAUxB6a,EAVwB,KAURC,EAVQ,OAWe9a,mBAAS,GAXxB,mBAWxB+a,EAXwB,KAWPC,EAXO,OAaGhb,mBAAS,GAbZ,gCAcLA,mBAAS1G,EAAUb,UAdd,gCAemBuH,mBAAS,KAf5B,mBAexBib,EAfwB,KAeLC,EAfK,OAgByBlb,mBAAS,IAhBlC,mBAgBxBmb,EAhBwB,KAgBFC,EAhBE,OAiByBpb,mBAAS,IAjBlC,mBAiBxB0Y,EAjBwB,KAiBF2C,EAjBE,OAkBGrb,mBAAS,IAlBZ,oBAkBxB2Y,GAlBwB,MAkBb2C,GAlBa,SAmBWtb,mBAAS,IAnBpB,qBAmBxB2V,GAnBwB,MAmBT4F,GAnBS,SAsBCvb,oBAAS,GAtBV,qBAsBdoU,IAtBc,aA8BzBT,GAAgB,SAACxZ,GACnBmgB,GAAW,SAACxK,GAAD,OAAUA,EAAO3V,MA/BD,GA2CT6F,mBAAS,CAC3B,CACIK,OAAQ,KACRC,KAAM,GACNnG,KAAM,GACNsG,YAAa,GACbE,OAAQ,MAjDe,iCAqD/B0E,qBAAU,WACNrL,QAAQC,IAAI,aAAc0e,MAC3B,CAACA,KAEJtT,qBAAU,WACNrL,QAAQC,IAAI,cAAemgB,KAC5B,CAACA,IAEJ/U,qBAAU,WACNrL,QAAQC,IAAI,WAAYvB,KACzB,CAACA,IAEJ2M,qBAAU,WACNrL,QAAQC,IAAI,cAAewgB,KAC5B,CAACA,IAEJpV,qBAAU,WACNrL,QAAQC,IAAI,eAAgB0gB,KAC7B,CAACA,IAvE2B,IAyEvBviB,GAAO0W,eAAP1W,GAsBRiN,qBAAU,WACNhL,IACKC,IAAI,UAAW,CACZC,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAGpDsC,MAAK,SAACC,GACH,IAAI6f,EAAe7f,EAAIzC,KAAKujB,KAC5BhB,EAAgBD,QAEzB,IAEHlV,qBAAU,WACN6V,EAAqB,IACrBE,EAAwB,IACxBC,EAAwB,IACxBC,GAAa,IACbjhB,IACKC,IADL,qBACuBlC,GADvB,WACoC,CAC5BmC,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAGpDsC,MAAK,SAACC,GACHV,QAAQC,IAAI,iBAAkBS,EAAIzC,KAAKwjB,YACvC,IACIC,EAAM,EACNC,EAAOjhB,EAAIzC,KAAKwjB,WAAW5P,YAC/BwP,EAAwBM,GACxBL,GAAa5gB,EAAIzC,KAAKwjB,WAAWG,WAAWC,MAC5CN,GAAiB7gB,EAAIzC,KAAK0d,eAE1B,IATW,2CASCrJ,EATD,KASM5S,EATN,KAUPM,QAAQC,IAAI,cAAeqS,EAAK5S,GAChCA,EAAMoB,KAAI,SAACghB,GACP9hB,QAAQC,IAAI,MAAO6hB,GACfA,EAAGrE,WACHyD,GAAqB,SAACpL,GAAD,4BACdA,GADc,CAEjB,CACIX,QAAS2M,EAAGhK,MAAM3C,QAClB+I,UAAW4D,EAAGhK,MAAMnX,KACpBsV,UAAW6L,EAAGhK,MAAMxR,KACpBmX,SAAUqE,EAAGrE,eAGrBiE,GAAOI,EAAGrE,aAGdiE,GACAN,GAAwB,SAACtL,GAAD,4BACjBA,GADiB,CAEpB,CACIxE,aAAcgB,EACdmL,SAAUiE,QAItBA,EAAM,GA1BV,MAA2BhQ,OAAOmK,QAAQ8F,GAA1C,eAAkD,IA4BlD3hB,QAAQC,IAAI,SAAUS,EAAIzC,KAAKwjB,WAAWG,YAC1C,IAAIG,EAAUrhB,EAAIzC,KAAKwjB,WAAWG,WAApB,KACVG,GACAA,EAAQjhB,KAAI,SAACkhB,GACLA,EAAGvE,WACHyD,GAAqB,SAACpL,GAAD,4BACdA,GADc,CAEjB,CACIX,QAAS,KACT+I,UAAW8D,EAAG7M,QACdc,UACkB,SAAd+L,EAAG7M,QAAqB,MAAQ,MACpCsI,SAAUuE,EAAGvE,eAGrBiE,GAAOM,EAAGvE,aAIlBiE,GACAN,GAAwB,SAACtL,GAAD,4BACjBA,GADiB,CAEpB,CACIxE,aAAc,eACdmM,SAAUiE,aAK/B,CAACpiB,EAAUP,WACdsM,qBAAU,WACNrL,QAAQC,IAAI,qBAAsBghB,GAClCjhB,QAAQC,IAAI,wBAAyBkhB,KACtC,CAACF,IAgBJ5V,qBAAU,WACNrL,QAAQC,IAAI,WAAY7B,IAExB4B,QAAQC,IAAI,oBAAqBX,GACjCU,QAAQC,IAAI,qBAAsBX,EAAUb,SAC5CuB,QAAQC,IAAI,qBAAsBX,EAAUV,oBAC7C,CAACU,IAiBJ,SAASsX,GAAiBC,GACtB,OAAOA,EAAEC,WAAW1V,QAAQ,wBAAyB,KAEzD,OACI,8BACI,cAAC,GAAD,UACI,eAAC,GAAD,WACI,cAAC,GAAD,UACI,sBAAKwF,UAAU,YAAf,4CACW,oBAUf,eAACsZ,GAAD,WACI,sBAAKtZ,UAAU,SAAf,UACI,gCACI,8DACA,wCAEKgQ,IAEOiK,EACAN,EAAeQ,GACjBtG,QAAQ,UAItB,wBACA,qBAAK7T,UAAU,YAAf,SACI,kCACK,MAEKia,EACEN,EAAeQ,IACdN,EACGE,EAAcJ,GACbM,EACGN,EACIQ,IAChB,KACFtG,QAAQ,GAXd,YAgBR,sBAAK7T,UAAU,SAAf,UACI,gCACI,oEACA,wCAEKgQ,IAEO6J,EACAE,EAAcJ,GACbH,EACG1hB,EAAU6hB,IAChB9F,QAAQ,UAItB,wBACA,qBAAK7T,UAAU,YAAf,SACI,kCACK,IACAgQ,KAES6J,EACEE,EAAcJ,GACbH,EACG1hB,EAAU6hB,KACbH,EACG1hB,EAAU6hB,GAClB,KACF9F,QAAQ,IAXlB,YAiBR,sBAAK7T,UAAU,SAAf,UACI,gCACI,oEAEA,wCASKgQ,IAEOwJ,EACA1hB,EAAU6hB,GACZ9F,QAAQ,UAKtB,2BAEJ,sBAAK7T,UAAU,SAAf,UACI,gCACI,oEACA,wCAEKgQ,IAEO6J,EACAE,EAAcJ,GAKb9F,QAAQ,UAIzB,8BAWR,uBACA,uBACA,8BACI,eAACxC,GAAA,EAAD,CACIxQ,WAAS,EACTwa,UAAU,MACVC,QAAQ,eACRC,UAAU,UACVva,QAAS,EALb,UAOI,cAACqQ,GAAA,EAAD,CAAMxQ,WAAS,EAACwH,MAAI,EAACiJ,GAAI,GAAIkK,GAAI,EAAGxa,QAAS,EAA7C,SAEI,qBAAKtD,MAAO,CAAE+d,WAAY,OAA1B,SACKlB,EAAqBpf,QAClBkf,EAAkBlf,QACd,cAACoa,GAAD,CACIC,OAAQ+E,EACR9E,OAAQ4E,QAM5B,cAAChJ,GAAA,EAAD,CAAMxQ,WAAS,EAACwH,MAAI,EAACiJ,GAAI,GAAIkK,GAAI,EAAGxa,QAAS,EAA7C,SAEI,cAAC6W,GAAD,CACIC,qBAAsBA,EACtB/C,cAAeA,GACfgD,UAAWA,GACXrf,UAAWA,EACXgR,YAAalS,YAM7B,uBACA,uBAoBA,8BACI,cAAC,GAAD,CACIia,eAjZD,kBAAM+B,IAAY,SAACtE,GAAD,OAAWA,MAkZ5BxF,YAAalS,GACbkB,UAAWA,EACX6X,SAAS,WACT5K,WAAW,+BAWnB,cAAC,IAAD,GACIoN,cAAeA,GACfC,YAAU,EACVtJ,YAAalS,GACbkB,UAAWA,EACXgc,iBA1ZK,SAACnb,GACtBkgB,GAAc,SAACvK,GAAD,OAAUA,EAAO3V,OAoZnB,+BAMmBwZ,IANnB,mCAlZS,SAACxZ,GACtBugB,GAAc,SAAC5K,GAAD,OAAUA,EAAO3V,QAiZnB,oCA/YU,SAACA,GACvBygB,GAAe,SAAC9K,GAAD,OAAUA,EAAO3V,QA8YpB,uCA/Za,SAACmiB,GAC1BxB,GAAkB,SAAChL,GAAD,OAAUA,EAAOwM,QA8ZvB,wCA5Zc,SAACA,GAC3BtB,GAAmB,SAAClL,GAAD,OAAUA,EAAOwM,QA2ZxB,IAeA,cAAC,GAAD,CAGIlkB,GAAIA,GACJ4X,MAAM,eACN/I,OAAO,OACPgJ,UAAU,kBC7dnBsM,OAhBf,YAAuC,IAAZ3N,EAAW,EAAXA,QAEnB4N,GADaC,eACP,MAIV,OAHI7N,EAAQ8N,SAAS/iB,QACjB6iB,EAAM9W,KAAKmB,UAAU+H,EAAQ8N,SAAS/iB,MAAM1B,KAAK0kB,iBAGjD,gCACKH,GAAO,+BAAOA,IACf,cAAC,GAAD,IAEA,cAAC,GAAD,Q,m1BCRZ,IAiHM5S,GAAalL,IAAOC,IAAV,MAMVkL,GAAanL,IAAOC,IAAV,MAKVyP,GAAO1P,IAAOC,IAAV,MASJmL,GAAqBpL,IAAOC,IAAV,MAcTie,GAnJM,WAAM,MAE4B3X,qBAC/CjM,GADIM,EAFe,EAEfA,UAIJsV,GANmB,EAEJrV,aAFI,EAEU2L,cAInB2J,gBANS,EA0CYlP,YAAQ,IAAnCE,EA1Ce,EA0CfA,SAAUD,EA1CK,EA0CLA,aASlB,OACI,8BACI,cAAC,GAAD,UACI,eAAC,GAAD,WACI,cAAC,GAAD,UACI,qBAAKgB,UAAU,YAAf,2DAEJ,cAAC,GAAD,UACI,uBACIA,UAAU,qBACVT,SAAUP,GAtDjB,SAAC3H,GAEd+B,QAAQC,IAAI,uBAAwBhC,EAAK0kB,gBAEzCtiB,IACKgM,KACG,aACA,CACI/F,KAAMrI,EAAK0kB,eAAe5gB,OACpB9D,EAAK0kB,eACL,oDAEV,CACIpiB,QAAS,CACLC,cAAc,UAAD,OAAYlB,EAAUtB,UAAUG,iBAIxDsC,MAAK,SAACC,GAKH,OAJAV,QAAQC,IAAIS,GAERkU,EAAQQ,KAAK,cAEV,cAAC,GAAD,OAEVlJ,OAAM,WACHlM,QAAQC,IAAI,aA0BJ,UAII,uBAAO4iB,QAAQ,iBAAf,yDAGA,uBACIjc,UAAU,sBACVN,KAAK,iBACLiM,YAAY,mDACZnL,IAAKvB,IAGT,uBAAOgd,QAAQ,kBAAf,yDAGA,uBACIjc,UAAU,sBACVN,KAAK,kBACLiM,YAAY,IACZnL,IAAKvB,IAoBT,uBACIe,UAAU,sBACV/G,KAAK,wB,oQCGd6E,IAAOC,IAAV,MAORD,IAAOG,IAAV,MAPT,IAUerB,GAtGf,WAOI,OACI,cAAC,EAAD,UACI,qBACIoD,UAAU,MADd,SASI,eAAC,KAAD,WACI,cAAC,GAAD,IAEA,eAAC,KAAD,WACI,cAAC,KAAD,CAAOkc,OAAK,EAACC,KAAK,IAAIC,UAAWtY,KACjC,cAAC,KAAD,CACIoY,OAAK,EACLC,KAAK,aACLC,UAAWT,KAEf,cAAC,KAAD,CACIO,OAAK,EACLC,KAAK,iBACLC,UAAWJ,KAEf,cAAC,KAAD,CACIE,OAAK,EACLC,KAAK,yBACLC,UAAW7C,KAEf,cAAC,KAAD,CAAO2C,OAAK,EAACC,KAAK,UAAUC,UAAWle,IAjB3C,eChCpBkE,IAAS9F,OACL,cAAC,IAAM+f,WAAP,UACI,cAAC,GAAD,MAEJxZ,SAASyZ,eAAe,W","file":"static/js/main.c21abf2b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/brand_icon.545ad235.svg\";","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport { userReducer, stockReducer } from \"./reducers\";\r\n\r\n// Initial State\r\nexport const initialState = {\r\n    loginInfo: {\r\n        data: \"kakao\",\r\n        jsKey: \"af45d260886da3efeecc059923fb619e\",\r\n        access_token: \"\",\r\n        id: \"\",\r\n        user: {},\r\n    },\r\n    portfolioIdList: [],\r\n    portfolioInfo: [\r\n        // {\r\n        //     portfolioId: \"ca875074-ffc1-401b-9550-54bd3abe5f2a\",\r\n        //     portfolioName: \"test\",\r\n        //     updateTimestamp: 1605011442,\r\n        // },\r\n    ],\r\n    activePortfolioId: \"\",\r\n    krwCost: 3,\r\n    usdCost: 0,\r\n    krwRealTimeValue: 0,\r\n    usdRealTimeValue: 0,\r\n    krwTodayEarnValue: 0,\r\n    usdTodayEarnValue: 0,\r\n    rerender: 0,\r\n};\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [userState, userDispatch] = useReducer(userReducer, initialState);\r\n    const [stockState, stockDispatch] = useReducer(stockReducer, initialState);\r\n    return (\r\n        <GlobalContext.Provider value={{ userState, userDispatch }}>\r\n            {/* <GlobalContext.Provider\r\n            value={{ userState, userDispatch, stockState, stockDispatch }}\r\n        > */}\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n};\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport produce from \"immer\";\r\nimport { GlobalContext } from \"./GlobalState\";\r\n\r\nconst stockAutoComplete = (res) => {\r\n    axios.get(\"/search/prefix/005\").then((res) => {\r\n        console.log(\"/search/prefix/005:\", res);\r\n    });\r\n};\r\n\r\n// export const login_user = (state, res) =>\r\n//     axios\r\n//         .post(\"/user/login\", {\r\n//             socialType: \"kakao\",\r\n//             socialToken: res.response.access_token,\r\n//         })\r\n//         .then((res) => {\r\n//             console.log(\"res:\", res);\r\n//             if (res && res.status != 404) {\r\n//                 console.log(\"response:\", res);\r\n//                 console.log(\"access_token:\", res.data.accessToken);\r\n//                 console.log(\"Login Successed!\");\r\n\r\n//                 // produce(state, (draft) => {\r\n//                 //     draft.loginInfo.access_token = res.data.accessToken;\r\n//                 //     draft.loginInfo.id = res.data.userId;\r\n//                 // });\r\n//                 localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n//                 // const {\r\n//                 //     userState,\r\n//                 //     userDispatch,\r\n//                 //     stockState,\r\n//                 //     stockDispatch,\r\n//                 // } = useContext(GlobalContext);\r\n//                 // userDispatch({\r\n//                 //     type: \"userState_update\",\r\n//                 //     access_token: res.data.accessToken,\r\n//                 // });\r\n//                 console.log(\r\n//                     'localStorage.getItem(\"user\"):',\r\n//                     localStorage.getItem(\"user\")\r\n//                 );\r\n//             }\r\n//             console.log(\"tets:\", state.loginInfo);\r\n//         })\r\n//         .catch(function (error) {\r\n//             console.log(error);\r\n//         });\r\n// });\r\n\r\nexport const getuser = (state) => {\r\n    return axios.get(\"/user\", {\r\n        headers: {\r\n            Authorization: `Bearer ${state.loginInfo.access_token}`,\r\n        },\r\n    });\r\n    // .then((res) => {\r\n    //     console.log(res);\r\n    // })\r\n    // .catch((res) => {\r\n    //     console.log(state.loginInfo.access_token, res);\r\n    // });\r\n};\r\n\r\nexport const handleLogout = (state) => {\r\n    console.log(\"handlelogout excuted\");\r\n    axios\r\n        .delete(\"/user/logout\", {\r\n            headers: {\r\n                Authorization: `Bearer ${state.loginInfo.access_token}`,\r\n            },\r\n        })\r\n        .then(() => {\r\n            console.log(\"logout succeeded\");\r\n            // console.log(\"initialState.loginInfo:\", initialState.loginInfo);\r\n        })\r\n        .catch(console.log(\"err\"));\r\n};\r\n\r\nexport const userReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"userState_update\": {\r\n            return produce(state, (draft) => {\r\n                draft.loginInfo.access_token = action.access_token;\r\n                draft.loginInfo.id = action.id;\r\n            });\r\n        }\r\n\r\n        case \"userState_portfolio_update\": {\r\n            return produce(state, (draft) => {\r\n                console.log(\"action,action\", action);\r\n                draft.portfolioIdList = action.portfolios2;\r\n                console.log(\"userState_portfolio_update:\", state);\r\n            });\r\n        }\r\n\r\n        case \"krw_cost_update\": {\r\n            return {\r\n                ...state,\r\n                krwCost: state.krwCost + action.cost,\r\n            };\r\n        }\r\n        case \"krw_cost_zero\": {\r\n            return {\r\n                ...state,\r\n                krwCost: 0,\r\n            };\r\n        }\r\n\r\n        case \"krw_real_time_value_update\": {\r\n            return {\r\n                ...state,\r\n                krwRealTimeValue: state.krwRealTimeValue + action.payload,\r\n            };\r\n        }\r\n        case \"krw_real_time_value_zero\": {\r\n            return {\r\n                ...state,\r\n                krwRealTimeValue: 0,\r\n            };\r\n        }\r\n        case \"krw_today_value_update\": {\r\n            return {\r\n                ...state,\r\n                krwTodayEarnValue: state.krwTodayEarnValue + action.payload,\r\n            };\r\n        }\r\n        case \"krw_today_value_zero\": {\r\n            return {\r\n                ...state,\r\n                krwTodayEarnValue: 0,\r\n            };\r\n        }\r\n\r\n        case \"usd_cost_update\": {\r\n            return {\r\n                ...state,\r\n                usdCost: state.usdCost + action.cost,\r\n            };\r\n        }\r\n        case \"usd_cost_zero\": {\r\n            return {\r\n                ...state,\r\n                usdCost: 0,\r\n            };\r\n        }\r\n\r\n        case \"usd_real_time_value_update\": {\r\n            return {\r\n                ...state,\r\n                usdRealTimeValue: state.usdRealTimeValue + action.payload,\r\n            };\r\n        }\r\n        case \"usd_real_time_value_zero\": {\r\n            return {\r\n                ...state,\r\n                usdRealTimeValue: 0,\r\n            };\r\n        }\r\n        case \"usd_today_value_update\": {\r\n            return {\r\n                ...state,\r\n                usdTodayEarnValue: state.usdTodayEarnValue + action.payload,\r\n            };\r\n        }\r\n        case \"usd_today_value_zero\": {\r\n            return {\r\n                ...state,\r\n                usdTodayEarnValue: 0,\r\n            };\r\n        }\r\n\r\n        case \"trigger_rerender\": {\r\n            return {\r\n                ...state,\r\n                rerender: state.rerender + 1,\r\n            };\r\n        }\r\n\r\n        // case \"refresh_token\": {\r\n        //     return axios\r\n        //         .post(\"/user/refresh\", {\r\n        //             refreshToken: action.refreshToken,\r\n        //             userId: action.userId,\r\n        //             accessToken: action.accessToken,\r\n        //         })\r\n        //         .then(console.log(\"refresh tocken succeeded\"));\r\n        // }\r\n\r\n        // case \"logout_user\": {\r\n        //     return produce(state, (draftState) => {\r\n        //         draftState.loginInfo.access_token = \"\";\r\n        //         draftState.loginInfo.id = \"\";\r\n        //     });\r\n        // }\r\n\r\n        // case \"delete_user\": {\r\n        //     return axios.delete(\"/user\").then(console.log(\"delete succeeded\"));\r\n        // }\r\n\r\n        // // Stock API\r\n        // case \"stock_auto_complete\": {\r\n        //     return axios\r\n        //         .get(\"/search/prefix/0057\", {\r\n        //             headers: {\r\n        //                 Authorization: `Bearer ${state.loginInfo.access_token}`,\r\n        //             },\r\n        //         })\r\n        //         .then((res) => {\r\n        //             console.log(\"/search/prefix/0057:\", res);\r\n        //         });\r\n        // }\r\n\r\n        // case \"get_now_price\": {\r\n        //     return axios\r\n        //         .get(`/stock/now/${action.code}`, {\r\n        //             headers: {\r\n        //                 Authorization: `Bearer ${state.loginInfo.access_token}`,\r\n        //             },\r\n        //         })\r\n        //         .then((res) => {\r\n        //             console.log(\"get_now_price:\", res);\r\n        //         });\r\n        // }\r\n        // case \"get_now_prices\": {\r\n        //     return axios\r\n        //         .get(`/stock/now`, {\r\n        //             headers: {\r\n        //                 Authorization: `Bearer ${state.loginInfo.access_token}`,\r\n        //             },\r\n        //         })\r\n        //         .then((res) => {\r\n        //             console.log(\"get_now_prices succeeded, res:\", res);\r\n        //         });\r\n        // }\r\n        // case \"get_now_krw_usd\": {\r\n        //     return axios\r\n        //         .get(\"/krwusd\", {\r\n        //             headers: {\r\n        //                 Authorization: `Bearer ${state.loginInfo.access_token}`,\r\n        //             },\r\n        //         })\r\n        //         .then((res) => {\r\n        //             console.log(\"get_now_krw_usd:\", res);\r\n        //         });\r\n        // }\r\n        // // Portfolio API\r\n        // case \"create_portfolio\": {\r\n        //     return axios\r\n        //         .post(\r\n        //             \"/portfolio\",\r\n        //             { name: action.payload },\r\n        //             {\r\n        //                 headers: {\r\n        //                     Authorization: `Bearer ${state.loginInfo.access_token}`,\r\n        //                 },\r\n        //             }\r\n        //         )\r\n        //         .then((res) => {\r\n        //             console.log(\r\n        //                 \"create_portfolio executed, portfolio Object:\",\r\n        //                 res\r\n        //             );\r\n        //         })\r\n        //         .catch((err) => {\r\n        //             console.log(\r\n        //                 `state.loginInfo.access_token:${state.loginInfo.access_token}`\r\n        //             );\r\n        //             console.log(\"create_portfolio err:\", err);\r\n        //         });\r\n        // }\r\n\r\n        // case \"get_portfolio_status\": {\r\n        //     return axios\r\n        //         .get(`/portfolio/${action.portfolioId}/status`, {\r\n        //             headers: {\r\n        //                 Authorization: `Bearer ${state.loginInfo.access_token}`,\r\n        //             },\r\n        //         })\r\n        //         .then((res) => {\r\n        //             console.log(\"---\", res);\r\n        //         })\r\n        //         .catch((res) => {\r\n        //             console.log(\"err\", res);\r\n        //             console.log(\"${action.portfolioId}\", action.portfolioId);\r\n        //         });\r\n        // }\r\n    }\r\n};\r\n\r\nexport const stockReducer = (state, action) => {\r\n    debugger;\r\n    switch (action.type) {\r\n        // Stock API\r\n        case \"stock_auto_complete\": {\r\n            return axios\r\n                .get(\"/search/prefix/0057\", {\r\n                    headers: {\r\n                        Authorization: `Bearer ${state.loginInfo.access_token}`,\r\n                    },\r\n                })\r\n                .then((res) => {\r\n                    console.log(\"/search/prefix/0057:\", res);\r\n                });\r\n        }\r\n\r\n        case \"get_now_price\": {\r\n            return axios\r\n                .get(`/stock/now/${action.code}`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${state.loginInfo.access_token}`,\r\n                    },\r\n                })\r\n                .then((res) => {\r\n                    console.log(\"get_now_price:\", res);\r\n                });\r\n        }\r\n        case \"get_now_prices\": {\r\n            return axios\r\n                .get(`/stock/now`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${state.loginInfo.access_token}`,\r\n                    },\r\n                })\r\n                .then((res) => {\r\n                    console.log(\"get_now_prices succeeded, res:\", res);\r\n                });\r\n        }\r\n        case \"get_now_krw_usd\": {\r\n            return axios\r\n                .get(\"/krwusd\", {\r\n                    headers: {\r\n                        Authorization: `Bearer ${state.loginInfo.access_token}`,\r\n                    },\r\n                })\r\n                .then((res) => {\r\n                    console.log(\"get_now_krw_usd:\", res);\r\n                });\r\n        }\r\n\r\n        default: {\r\n            console.log(\"stockReducer err\");\r\n            return;\r\n        }\r\n    }\r\n};\r\n\r\nexport const portfolioReducer = (state, action) => {\r\n    switch (action.type) {\r\n        // Portfolio API\r\n        case \"create_portfolio\": {\r\n            return axios\r\n                .post(\r\n                    \"/portfolio\",\r\n                    { name: \"test\" },\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${state.loginInfo.access_token}`,\r\n                        },\r\n                    }\r\n                )\r\n                .then((res) => {\r\n                    console.log(\r\n                        \"create_portfolio executed, portfolio Object:\",\r\n                        res\r\n                    );\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\r\n                        `state.loginInfo.access_token:${state.loginInfo.access_token}`\r\n                    );\r\n                    // console.log(initialState);\r\n                    console.log(\"err:\", err);\r\n                });\r\n        }\r\n\r\n        case \"get_portfolio_status\": {\r\n            return axios.get(`/portfolio/${action.portfolioId}/status`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${state.loginInfo.access_token}`,\r\n                },\r\n            });\r\n        }\r\n    }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/buffett.511bc00c.png\";","import React from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport warrenStockData from \"../json/warren_buffet_portfolio.json\";\r\nimport pastelColors from \"../json/pastel_tone_colors_hex\";\r\nvar companyName = warrenStockData.map(function (warren) {\r\n    return warren[\"회사명\"];\r\n});\r\n\r\n// \"id\": 0,\r\n// \"회사명\": \"TOTAL\",\r\n// \"회사코드\": \"TOTAL\",\r\n// \"보유주식수\": \"\",\r\n// \"보유금액\": \"$238,386,028,163\",\r\n// \"지분률\": \"\"\r\n\r\n// \"id\": 1,\r\n// \"회사명\": \"Apple Inc.\",\r\n// \"회사코드\": \"AAPL\",\r\n// \"보유주식수\": \"1,003,466,264\",\r\n// \"보유금액\": \"$115,438,759,011\",\r\n// \"지분률\": \"5.90%\"\r\nvar totalVolum = 238386028163;\r\nvar volumData = warrenStockData.map(function (warren) {\r\n    if (warren.id != 0) {\r\n        // console.log(\r\n        //     // Math.round(num * 100) / 100\r\n        //     Math.round(\r\n        //         (warren[\"보유금액\"].replace(\"$\", \"\").replace(/,/g, \"\") *\r\n        //             10000) /\r\n        //             totalVolum\r\n        //     ) / 100\r\n        // );\r\n        return parseFloat(\r\n            Math.round(\r\n                (warren[\"보유금액\"].replace(\"$\", \"\").replace(/,/g, \"\") *\r\n                    10000) /\r\n                    totalVolum\r\n            ) / 100\r\n        );\r\n    }\r\n});\r\n\r\nvar backgroundColor2 = pastelColors.map(function (color) {\r\n    return color[\"hex\"];\r\n});\r\n\r\nvar Doughnut2 = () => {\r\n    // console.log(volumData);\r\n    const data = {\r\n        labels: [\r\n            // \"Bank of America\",\r\n            // \"Wells Fargo\",\r\n            // \"Occidental Petroleum\",\r\n            // \"Delta Air\",\r\n            // \"Coca-Cola\",\r\n            // \"American Express\",\r\n            // \"etc    [단위: M$]\",\r\n            ...companyName.slice(1),\r\n        ],\r\n        datasets: [\r\n            {\r\n                // data: [48.93, 23.89, 19.49, 15.06, 12.99, 7.95, 44, 55],\r\n                data: volumData.slice(1),\r\n                // [48.93, 23.89, 19.49, 15.06, 12.99, 7.95, 44, 55],\r\n                backgroundColor: backgroundColor2,\r\n\r\n                // [\r\n\r\n                // \"#FF6384\",\r\n                // \"#36A2EB\",\r\n                // \"#FFCE56\",\r\n                // \"#E0BBE4\",\r\n                // \"#957DAD\",\r\n                // \"#D291BC\",\r\n                // \"#FFDFD3\",\r\n                // \"#E0BBE4\",\r\n                // ],\r\n                hoverBackgroundColor: backgroundColor2,\r\n                // [\r\n                //     \"#FF6384\",\r\n                //     \"#36A2EB\",\r\n                //     \"#FFCE56\",\r\n                //     \"#E0BBE4\",\r\n                //     \"#957DAD\",\r\n                //     \"#D291BC\",\r\n                //     \"#FFDFD3\",\r\n                //     \"#E0BBE4\",\r\n                // ],\r\n            },\r\n        ],\r\n    };\r\n\r\n    for (var i = 0; i < data.labels.length; i++) {}\r\n    return (\r\n        <div>\r\n            {/* <h3>워렌버핏 포트폴리오</h3> */}\r\n            <Doughnut\r\n                data={data}\r\n                options={{\r\n                    // responsive: true,\r\n                    // maintainAspectRatio: false,\r\n                    legend: {\r\n                        display: false,\r\n                    },\r\n                    // responsive: true,\r\n                    // maintainAspectRatio: true,\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Doughnut2;\r\n\r\n// export default React.createClass({\r\n//     displayName: \"DoughnutExample\",\r\n\r\n//     render() {\r\n//         return (\r\n//         );\r\n//     },\r\n// });\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport BTable from \"react-bootstrap/Table\";\r\nimport { useTable } from \"react-table\";\r\nimport makeData from \"./makeData\";\r\nimport warrenStockData from \"../json/warren_buffet_portfolio\";\r\n\r\nfunction Table({ columns, data }) {\r\n    // Use the state and functions returned from useTable to build your UI\r\n    const { getTableProps, headerGroups, rows, prepareRow } = useTable({\r\n        columns,\r\n        data,\r\n    });\r\n    return (\r\n        <BTable striped bordered hover size=\"sm\" {...getTableProps()}>\r\n            <thead>\r\n                {headerGroups.map((headerGroup) => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map((column) => (\r\n                            <th {...column.getHeaderProps()}>\r\n                                {column.render(\"Header\")}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody>\r\n                {rows.map((row, i) => {\r\n                    prepareRow(row);\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                            {row.cells.map((cell) => {\r\n                                return (\r\n                                    <td {...cell.getCellProps()}>\r\n                                        {cell.render(\"Cell\")}\r\n                                    </td>\r\n                                );\r\n                            })}\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </tbody>\r\n        </BTable>\r\n    );\r\n}\r\nfunction App() {\r\n    const warrenData = warrenStockData.map(function (warren) {\r\n        var info = {\r\n            회사코드: warren.회사코드,\r\n            lastName: warren.회사명,\r\n            age: warren[\"보유금액\"],\r\n            visits: warren[\"보유주식수\"],\r\n            status: warren.지분률,\r\n        };\r\n        return info;\r\n    });\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: \"Name\",\r\n                columns: [\r\n                    {\r\n                        Header: \"회사코드\",\r\n                        accessor: \"회사코드\",\r\n\r\n                        Cell: ({ value }) => {\r\n                            const nameArr = [\"AAPL\", \"AAB\"];\r\n                            return (\r\n                                <div\r\n                                    style={{\r\n                                        color: \"#323f9b\",\r\n                                        fontSize: \"13px\",\r\n                                        fontWeight: \"900\",\r\n                                    }}\r\n                                >\r\n                                    {value}\r\n                                </div>\r\n                            );\r\n                            return nameArr.includes(value) ? (\r\n                                <div style={{ color: \"red\" }}>{value}</div>\r\n                            ) : (\r\n                                value\r\n                            );\r\n                        },\r\n                        // style: {\r\n                        //     background: \"red\",\r\n                        //     color: \"yellow\",\r\n                        // },\r\n                        // getProps: (state, rowInfo, column) => {\r\n                        //     return {\r\n                        //         style: {\r\n                        //             background: \"red\",\r\n                        //             color: \"yellow\",\r\n                        //         },\r\n                        //     };\r\n                        // },\r\n                    },\r\n                    {\r\n                        Header: \"회사명\",\r\n                        accessor: \"lastName\",\r\n                        Cell: ({ value }) => {\r\n                            const nameArr = [\"AAPL\", \"AAB\"];\r\n                            return (\r\n                                <div\r\n                                    style={{\r\n                                        color: \"#323f9b\",\r\n                                        fontSize: \"13px\",\r\n                                        // fontWeight: \"900\",\r\n                                    }}\r\n                                >\r\n                                    {value}\r\n                                </div>\r\n                            );\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                Header: \"Info\",\r\n                columns: [\r\n                    {\r\n                        Header: \"보유금액\",\r\n                        accessor: \"age\",\r\n                    },\r\n                    {\r\n                        Header: \"보유 주식 수\",\r\n                        accessor: \"visits\",\r\n                    },\r\n                    {\r\n                        Header: \"지분률\",\r\n                        accessor: \"status\",\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        []\r\n    );\r\n    const data = React.useMemo(\r\n        () => [...warrenData.slice(1), warrenData[0]],\r\n        []\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Table columns={columns} data={data} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import buffett from \"../images/PNG/buffett.png\";\r\nimport Doughnut from \"../Charts/Doughnut\";\r\nimport BuffetTable from \"../Tables/WarrenTable\";\r\nimport styled from \"styled-components\";\r\n\r\n// import Doughnut from \"./components/Charts/Doughnut\";\r\n// import buffett from \"./components/images/PNG/buffett.png\";\r\nfunction WarrenBuffet() {\r\n    return (\r\n        <div>\r\n            <ChartContainer>\r\n                <Img src={buffett} />\r\n                <Doughnut />\r\n                <BuffetTable />\r\n            </ChartContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ChartContainer = styled.div`\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    max-width: 720px;\r\n    padding: 1em;\r\n`;\r\n\r\nconst Img = styled.img`\r\n    max-width: 720px;\r\n`;\r\n\r\nexport default WarrenBuffet;\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./BuySellModal.css\";\r\n\r\nimport { DatePicker } from \"@y0c/react-datepicker\";\r\nimport \"./red.scss\";\r\n\r\nimport \"dayjs/locale/ko\";\r\n\r\nfunction DatePickerExample() {\r\n    const [action, setAction] = useState({});\r\n    return (\r\n        <div className=\"App\">\r\n            <label className=\"section-container\">날짜</label>\r\n            <div />\r\n            <DatePicker\r\n                onChange={(ac) => {\r\n                    setAction(ac);\r\n                    console.log(action);\r\n                    console.log(ac);\r\n                }}\r\n            />\r\n\r\n            <hr />\r\n        </div>\r\n    );\r\n}\r\nexport default DatePickerExample;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport ReactSelect from \"react-select\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./BuySellModal.css\";\r\n\r\nimport { DatePicker } from \"@y0c/react-datepicker\";\r\nimport \"./red.scss\";\r\n\r\nimport \"dayjs/locale/ko\";\r\nimport DatePickerExample from \"./DatePickerExample\";\r\n// import DateFnsUtils from \"@date-io/date-fns\";\r\n// import { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\n\r\n// import {\r\n//     KeyboardDatePicker,\r\n//     MuiPickersUtilsProvider,\r\n// } from \"@material-ui/pickers\";\r\n\r\nimport \"./BuySellModal.css\";\r\n\r\n// const theme = createMuiTheme({\r\n//     palette: {\r\n//         type: \"dark\",\r\n//     },\r\n// });\r\n\r\nconst defaultValues = {\r\n    ReactDatepicker: \"\",\r\n    ReactSelect: {},\r\n    numberFormat: 0,\r\n};\r\n\r\nfunction BuySellModal({ row, setRow, closeModal, setFormData }) {\r\n    const { handleSubmit, register, reset, control } = useForm(\r\n        defaultValues,{\r\n    });\r\n    const [data, setData] = useState(null);\r\n    const [action, setAction] = useState({});\r\n    const [selectedDate, handleDateChange] = useState(new Date());\r\n\r\n    const clickButton = (e) => {\r\n        closeModal();\r\n        console.log(e);\r\n    };\r\n\r\n    // const submitFunc = (data) => {\r\n    //     handleSubmit((data) => console.log(data));\r\n    //     closeModal();\r\n    // };\r\n\r\n    // return (\r\n    //     <form\r\n    //         onSubmit={submitFunc(data)}\r\n    //         // handleSubmit((data) => console.log(data))\r\n    //         className=\"form\"\r\n    //     ></form>\r\n\r\n    // const item = {\r\n    //     symbol: \"aaaaa\",\r\n    //     name: \"\",\r\n    //     cost: \"\",\r\n    //     marketValue: \"\",\r\n    //     return: \"\",\r\n    // };\r\n    return (\r\n        <form\r\n            onSubmit={handleSubmit((data) => {\r\n                console.log(data);\r\n                setFormData(data);\r\n                // setRow()\r\n                {\r\n                    data.BuySellSelector &&\r\n                        setRow([\r\n                            ...row,\r\n                            {   \r\n                                symbol: data.BuySellSelector.value,\r\n                                name: data.date,\r\n                                // JSON.stringify(\r\n                                // : data[\"numOfStock\"],\r\n                                cost: data.price,\r\n                                date: data[\"date\"],\r\n                                marketValue: data.numOfStock,\r\n                                return: \"\",\r\n                            },\r\n                        ]);\r\n                }\r\n\r\n                closeModal();\r\n            })}\r\n            className=\"form\"\r\n        >\r\n            <div className=\"form-container\">\r\n                <section>\r\n                    <label className=\"section-container\">티커</label>\r\n                    <div />\r\n                    <Controller\r\n                        as={NumberFormat}\r\n                        thousandSeparator\r\n                        // type=\"number\"\r\n                        name=\"price\"\r\n                        className=\"input\"\r\n                        control={control}\r\n                        // onClick={}\r\n                        //   onClick={this.props.closeModal}\r\n                    />\r\n                </section>\r\n                <section className=\"section-container\">\r\n                    <label className=\"section-container\">거래</label>\r\n                    <Controller\r\n                        as={ReactSelect}\r\n                        options={[\r\n                            { value: \"매수\", label: \"매수\" },\r\n                            { value: \"매도\", label: \"매도\" },\r\n                        ]}\r\n                        name=\"BuySellSelector\"\r\n                        isClearable\r\n                        control={control}\r\n                    />\r\n                    <hr />\r\n                </section>\r\n\r\n                {/* <DatePickerExample /> */}\r\n                <section>\r\n                    <label className=\"section-container\">날짜</label>\r\n                    <div />\r\n                    <DatePicker\r\n                        onChange={(ac) => {\r\n                            console.log(ac);\r\n                            setAction(\r\n                                `${ac[\"$y\"]}-${ac[\"$M\"] + 1}-${ac[\"$D\"]}`\r\n                            );\r\n                            //console.log(action);\r\n                            // console.log(ac[\"$d\"]);\r\n                            console.log(action);\r\n                        }}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"date\"\r\n                        value={action}\r\n                        // defaultValue=\"0\"\r\n                        className=\"disable\"\r\n                        ref={register}\r\n                    />\r\n                    <hr />\r\n                </section>\r\n                <section>\r\n                    <label className=\"section-container\">수량</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        name=\"numOfStock\"\r\n                        className=\"input\"\r\n                        defaultValue=\"0\"\r\n                        ref={register}\r\n                    />\r\n                    <hr />\r\n                </section>\r\n                <section>\r\n                    <label className=\"section-container\">가격</label>\r\n                    <div />\r\n                    <Controller\r\n                        as={NumberFormat}\r\n                        thousandSeparator\r\n                        // type=\"number\"\r\n                        name=\"price\"\r\n                        className=\"input\"\r\n                        control={control}\r\n                        // onClick={}\r\n                        //   onClick={this.props.closeModal}\r\n                    />\r\n                </section>\r\n                <input type=\"submit\" value=\"Save\" />\r\n                {/* <Button\r\n                    className=\"buy-sell-add-button\"\r\n                    style={{ position: \"absolute\", right: \"0px\" }}\r\n                    variant=\"outline-primary\"\r\n                    type=\"submit\"\r\n                    onClick={clickButton}\r\n                >\r\n                    <SaveIcon /> {\"  \"}\r\n                    Save\r\n                </Button> */}\r\n            </div>\r\n        </form>\r\n        // </MuiPickersUtilsProvider>\r\n    );\r\n}\r\n\r\nexport default BuySellModal;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\n// import Divider from \"@material-ui/core/Divider\";\r\n// import Grid from \"@material-ui/core/Grid\";\r\n// import KrwInput from \"./KrwInput\";\r\nimport BuySellModal from \"./BuySellModal\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"repeat(12, 1fr)\",\r\n        gridGap: theme.spacing(3),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: \"left\",\r\n        color: theme.palette.text.secondary,\r\n        whiteSpace: \"nowrap\",\r\n        marginBottom: theme.spacing(0),\r\n    },\r\n    divider: {\r\n        margin: theme.spacing(2, 0),\r\n    },\r\n}));\r\n\r\nexport const FormContainer = ({ row, setRow, onSubmit, closeModal }) => {\r\n    const classes = useStyles();\r\n    const [formData, setFormData] = useState([{}]);\r\n    return (\r\n        <div>\r\n            {/* {console.log(formData, \"------\")} */}\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                새로운 매매 일지:\r\n            </Typography>\r\n            <br />\r\n            <BuySellModal\r\n                setRow={setRow}\r\n                closeModal={closeModal}\r\n                setFormData={setFormData}\r\n                row={row}\r\n            />\r\n            {/* <KrwInput /> */}\r\n        </div>\r\n    );\r\n};\r\nexport default FormContainer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { FormContainer } from \"./FormContainer\";\r\nimport FocusTrap from \"focus-trap-react\";\r\nexport const Modal = ({\r\n    onClickOutside,\r\n    onKeyDown,\r\n    modalRef,\r\n    buttonRef,\r\n    closeModal,\r\n    onSubmit,\r\n    setRow,\r\n    row,\r\n}) => {\r\n    return ReactDOM.createPortal(\r\n        <FocusTrap>\r\n            <aside\r\n                tag=\"aside\"\r\n                role=\"dialog\"\r\n                tabIndex=\"-1\"\r\n                aria-modal=\"true\"\r\n                className=\"modal-cover\"\r\n                onClick={onClickOutside}\r\n                onKeyDown={onKeyDown}\r\n            >\r\n                <div className=\"modal-area\" ref={modalRef}>\r\n                    {/* <div className=\"tmp\" onClick={closeModal}> */}\r\n                    <button\r\n                        onClick={closeModal}\r\n                        ref={buttonRef}\r\n                        aria-label=\"Close Modal\"\r\n                        aria-labelledby=\"close-modal\"\r\n                        className=\"_modal-close\"\r\n                        /* style={{\r\n                            position: \"absolute\",\r\n                            left: \"90%\",\r\n                            // top: \"50%\",\r\n                            transform: \"translate(-50%, 0%)\",\r\n                        }} */\r\n                    >\r\n                        <span id=\"close-modal\" className=\"_hide-visual\">\r\n                            Close\r\n                        </span>\r\n                        {/* <svg className=\"_modal-close-icon\" viewBox=\"0 0 40 40\">\r\n                            <path d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\r\n                        </svg> */}\r\n                    </button>\r\n                    {/* </div> */}\r\n                    <div className=\"modal-body\">\r\n                        <FormContainer\r\n                            closeModal={closeModal}\r\n                            onSubmit={onSubmit}\r\n                            setRow={setRow}\r\n                            row={row}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </aside>\r\n        </FocusTrap>,\r\n        document.body\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nconst Trigger = ({ triggerText, buttonRef, showModal }) => {\r\n    return (\r\n        <Fab color=\"primary\" size=\"small\" aria-label=\"add\">\r\n            <AddIcon ref={buttonRef} onClick={showModal} />\r\n        </Fab>\r\n        // <button\r\n        //     className=\"btn btn-lg btn-danger center modal-button\"\r\n        //     ref={buttonRef}\r\n        //     onClick={showModal}\r\n        // >\r\n        //     {triggerText}\r\n        // </button>\r\n    );\r\n};\r\nexport default Trigger;\r\n","import React, { Component } from \"react\";\r\nimport { Modal } from \"./Modal\";\r\nimport TriggerButton from \"./TriggerButton\";\r\nexport class ModalPopup extends Component {\r\n    state = { isShown: false };\r\n    showModal = () => {\r\n        this.setState({ isShown: true }, () => {\r\n            this.closeButton.focus();\r\n        });\r\n        this.toggleScrollLock();\r\n    };\r\n    closeModal = () => {\r\n        this.setState({ isShown: false });\r\n        this.TriggerButton.focus();\r\n        this.toggleScrollLock();\r\n    };\r\n    onKeyDown = (event) => {\r\n        if (event.keyCode === 27) {\r\n            this.closeModal();\r\n        }\r\n    };\r\n    onClickOutside = (event) => {\r\n        if (this.modal && this.modal.contains(event.target)) return;\r\n        this.closeModal();\r\n    };\r\n\r\n    toggleScrollLock = () => {\r\n        document.querySelector(\"html\").classList.toggle(\"scroll-lock\");\r\n    };\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <TriggerButton\r\n                    showModal={this.showModal}\r\n                    buttonRef={(n) => (this.TriggerButton = n)}\r\n                    triggerText={this.props.triggerText}\r\n                />\r\n                {this.state.isShown ? (\r\n                    <Modal\r\n                        onSubmit={this.props.onSubmit}\r\n                        modalRef={(n) => (this.modal = n)}\r\n                        buttonRef={(n) => (this.closeButton = n)}\r\n                        closeModal={this.closeModal}\r\n                        onKeyDown={this.onKeyDown}\r\n                        onClickOutside={this.onClickOutside}\r\n                        setRow={this.props.setRow}\r\n                        row={this.props.row}\r\n                    />\r\n                ) : null}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModalPopup;\r\n","export default __webpack_public_path__ + \"static/media/portfolioImg.4e200b23.JPG\";","import ModalPopup from \"../Form/ModalPopup\";\r\n\r\nfunction PortfolioAdd({ row, setRow }) {\r\n    const triggerText = \"+\";\r\n    const onSubmit = (event) => {\r\n        event.preventDefault(event);\r\n        // console.log(event.target.name.value);\r\n        // console.log(event.target);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ModalPopup\r\n                row={row}\r\n                setRow={setRow}\r\n                triggerText={triggerText}\r\n                onSubmit={onSubmit}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PortfolioAdd;\r\n","export default __webpack_public_path__ + \"static/media/frontpage_images01.3ba0344b.jpg\";","export default __webpack_public_path__ + \"static/media/free_try_kakao.58d5b034.svg\";","export default __webpack_public_path__ + \"static/media/doughnut_chart02.32b95bf4.jpg\";","export default __webpack_public_path__ + \"static/media/grafana.b8bf70dd.JPG\";","import React from \"react\";\r\nimport \"./Logo.css\";\r\nimport Kakao from \"../images/SVG/free_try_kakao.svg\";\r\nimport grafana from \"../images/JPG/grafana.JPG\";\r\nimport doughnut_chart02 from \"../images/JPG/doughnut_chart02.jpg\";\r\n\r\nfunction Logo() {\r\n    return (\r\n        <section className=\"container-name \">\r\n            <div className=\"layout2\">\r\n                <div className=\"title\">\r\n                    <div className=\"smart_invest\">투자를 현명하게</div>\r\n                    <div className=\"detail_desc\">\r\n                        포트폴리오 거래를 기록으로 남기고 정리하세요.\r\n                    </div>\r\n                    <div className=\"kakao\">\r\n                        <img\r\n                            src={Kakao}\r\n                            alt=\"Kakao\"\r\n                            className=\"kakao_login_logo\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"right_img\"> */}\r\n                <img\r\n                    className=\"grafana\"\r\n                    src={doughnut_chart02}\r\n                    alt=\"Grafana\"\r\n                    style={{ opacity: 0.9, marginTop: 103 }}\r\n                />\r\n                {/* </div>   */}\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n{\r\n    /* <span className='title_sub'></span> */\r\n}\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport portfolioImg from \"../images/JPG/portfolioImg.JPG\";\r\nimport frontImg01 from \"../images/JPG/frontpage_images01.jpg\";\r\nimport Logo from \"../logo/Logo\";\r\nimport \"./IntroPageContent.css\";\r\n\r\nconst IntroPageContent = () => (\r\n    <Container>\r\n        <Logo />\r\n        <Title>\r\n            <div className=\"main_title\">주식 포트폴리오 기록</div>\r\n            <div className=\"sub_title\">\r\n                주식, ETF, 채권, 현금의 움직임을 간단히 포트폴리오로 기록을\r\n                남기세요.\r\n            </div>\r\n        </Title>\r\n        <PortfolioImg>\r\n            <div>\r\n                <img\r\n                    className=\"portfolio_img\"\r\n                    src={frontImg01}\r\n                    alt=\"portfolioImg\"\r\n                    style={{ width: \"100%\" }}\r\n                />\r\n            </div>\r\n        </PortfolioImg>\r\n        {/* <div>Hi</div> */}\r\n    </Container>\r\n);\r\n\r\nconst Container = styled.div`\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n    height: 300vh;\r\n    background-color: #eff0f3;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    position: relative;\r\n    padding-top: 123px;\r\n    text-align: center;\r\n    margin: auto;\r\n    // overflow: hidden;\r\n    width: 757px;\r\n    // height: 115px;\r\n    .main_title {\r\n        position: relative;\r\n        font-family: Roboto;\r\n        font-style: normal;\r\n        font-weight: normal;\r\n        font-size: 46px;\r\n    }\r\n    .sub_title {\r\n        position: relative;\r\n        font-family: Roboto;\r\n        font-style: normal;\r\n        font-weight: normal;\r\n        font-size: 22px;\r\n        line-height: 152.4%;\r\n    }\r\n`;\r\n\r\nconst PortfolioImg = styled.div`\r\n    position: relative;\r\n    padding-top: 30px;\r\n    margin: auto;\r\n    text-align: center;\r\n    width: 1288px;\r\n    height: 1165px;\r\n\r\n    .portfolio_img {\r\n        filter: drop-shadow(0px 4px 30px rgba(0, 0, 0, 0.25));\r\n    }\r\n`;\r\nexport default IntroPageContent;\r\n","import React, { useEffect, useState, useReducer, useContext } from \"react\";\r\n// import React from \"react\";\r\nimport \"./WallHeader.css\";\r\n// import compass from \"../images/compass.png\";\r\n// import Kakao from \"../images/kakao_login_medium_narrow.png\";\r\nimport brandImg from \"./../images/SVG/brand_icon.svg\";\r\nimport KaKaoLogin from \"react-kakao-login\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { login_user, getuser, handleLogout } from \"../../store/reducers\";\r\nimport WarrenBuffet from \"../Content/WarrenBuffet\";\r\nimport PortfolioAdd from \"../Content/PortfolioAdd\";\r\nimport IntroPageContent from \"../Content/IntroPageContent\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../../store/GlobalState\";\r\n\r\nconst WallHeader = (props) => {\r\n    const { userState, userDispatch, stockDispatch } = useContext(\r\n        GlobalContext\r\n    );\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const loggedInUser = localStorage.getItem(\"user\");\r\n        if (loggedInUser) {\r\n            setLoggedIn(true);\r\n            console.log(\"loggedInUser:\", loggedInUser);\r\n            const foundUser = JSON.parse(loggedInUser);\r\n            console.log(\"foundUser:\", foundUser);\r\n            userDispatch({\r\n                type: \"userState_update\",\r\n                access_token: foundUser.data.accessToken,\r\n                id: foundUser.data.userId,\r\n            });\r\n        }\r\n        // }\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    // const loggedInUser = localStorage.getItem(\"user\");\r\n    // console.log(\r\n    //     'localStorage.getItem(\"user\")2:',\r\n    //     localStorage.getItem(\"user\")\r\n    // );\r\n    // console.log(\"Hi\");\r\n    // console.log(\"userState:\", userState);\r\n    // });\r\n\r\n    const responseFail = (err) => {\r\n        console.log(\"login failed\", err);\r\n    };\r\n\r\n    const responseKaKao = (res) => {\r\n        axios\r\n            .post(\"/user/login\", {\r\n                socialType: \"kakao\",\r\n                socialToken: res.response.access_token,\r\n            })\r\n            .then((res) => {\r\n                console.log(\"res\", res);\r\n                localStorage.setItem(\"user\", JSON.stringify(res));\r\n                userDispatch({\r\n                    type: \"userState_update\",\r\n                    access_token: res.data.accessToken,\r\n                    id: res.data.userId,\r\n                });\r\n                setLoggedIn(true);\r\n            })\r\n            .catch((err) => alert(\"1111111111\"));\r\n    };\r\n\r\n    return (\r\n        <header className=\"navbar\">\r\n            <div className=\"navbar__title navbar__item\">\r\n                <Link to=\"/\" className=\"navbar__item\">\r\n                    <img className=\"brand_img\" src={brandImg} alt=\"brand_img\" />\r\n                    {\"    \"}\r\n                    <span className=\"bold_nav\"> Assetlocation</span>\r\n                </Link>\r\n            </div>\r\n            <div\r\n                className=\"navbar__item\"\r\n                // onClick={() => userDispatch({ type: \"stock_auto_complete\" })}\r\n            >\r\n                <Link to=\"/portfolio\" className=\"navbar__item\">\r\n                    포트폴리오\r\n                </Link>\r\n            </div>\r\n            <div className=\"navbar__item\">\r\n                <Link to=\"/warren\" className=\"navbar__item\">\r\n                    워렌버핏\r\n                </Link>\r\n            </div>\r\n            {/* <div\r\n                className=\"navbar__item\"\r\n                onClick={() =>\r\n                    userDispatch({ type: \"get_now_price\", code: \"qqq\" })\r\n                }\r\n            >\r\n                통계\r\n            </div>\r\n            <div\r\n                className=\"navbar__item\"\r\n                onClick={() => console.log(userState.loginInfo.access_token)}\r\n            >\r\n                뉴스\r\n            </div> */}\r\n            <div className=\"navbar__item\">\r\n                {loggedIn ? (\r\n                    <div>\r\n                        <div\r\n                            className=\"navbar__item\"\r\n                            onClick={\r\n                                () => {\r\n                                    axios\r\n                                        .delete(\"/user/logout\", {\r\n                                            headers: {\r\n                                                Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                                            },\r\n                                        })\r\n                                        .then((res) => {\r\n                                            userDispatch({\r\n                                                type: \"userState_update\",\r\n                                                access_token: \"\",\r\n                                                id: \"\",\r\n                                            });\r\n                                            console.log(\r\n                                                \"----------------------logout succeed\",\r\n                                                res\r\n                                            );\r\n                                            localStorage.clear();\r\n                                            setLoggedIn(false);\r\n                                        })\r\n                                        .catch((err) => {\r\n                                            const loggedInUser = localStorage.getItem(\r\n                                                \"user\"\r\n                                            );\r\n                                            alert(\"22222222\");\r\n                                            if (loggedInUser) {\r\n                                                console.log(\r\n                                                    \"type:\",\r\n                                                    typeof loggedInUser\r\n                                                );\r\n                                                console.log(\r\n                                                    \"loggedInUser:\",\r\n                                                    loggedInUser\r\n                                                );\r\n                                                const foundUser = JSON.parse(\r\n                                                    loggedInUser\r\n                                                );\r\n                                                console.log(\r\n                                                    \"foundUser:\",\r\n                                                    foundUser\r\n                                                );\r\n                                                axios\r\n                                                    .post(\"/user/refresh\", {\r\n                                                        userId:\r\n                                                            foundUser.data\r\n                                                                .userId,\r\n                                                        accessToken:\r\n                                                            foundUser.data\r\n                                                                .accessToken,\r\n                                                        refreshToken:\r\n                                                            foundUser.data\r\n                                                                .refreshToken,\r\n                                                    })\r\n                                                    .then((res) => {\r\n                                                        console.log(\r\n                                                            \"refresh succ:\",\r\n                                                            res\r\n                                                        );\r\n                                                        axios\r\n                                                            .delete(\r\n                                                                \"/user/logout\",\r\n                                                                {\r\n                                                                    headers: {\r\n                                                                        Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                                                                    },\r\n                                                                }\r\n                                                            )\r\n                                                            .then((res) => {\r\n                                                                userDispatch({\r\n                                                                    type:\r\n                                                                        \"userState_update\",\r\n                                                                    access_token:\r\n                                                                        \"\",\r\n                                                                    id: \"\",\r\n                                                                });\r\n                                                                console.log(\r\n                                                                    \"logout succeed\",\r\n                                                                    res\r\n                                                                );\r\n                                                                localStorage.clear();\r\n                                                                setLoggedIn(\r\n                                                                    false\r\n                                                                );\r\n                                                            });\r\n                                                    })\r\n                                                    .catch((res) => alert(res));\r\n                                                // console.log(\r\n                                                //     \"loggedInUser:\",\r\n                                                //     loggedInUser\r\n                                                // );\r\n                                                // console.log(foundUser);\r\n                                                //     console.log(\r\n                                                //         foundUser.accessToken\r\n                                                //     );\r\n                                                //     console.log(\r\n                                                //         foundUser.refreshToken\r\n                                                //     );\r\n                                                //     axios\r\n                                                //         .post(\"/user/refresh\", {\r\n                                                //             userId:\r\n                                                //                 foundUser.userId,\r\n                                                //             accessToken:\r\n                                                //                 foundUser.accessToken,\r\n                                                //             refreshToken:\r\n                                                //                 foundUser.refreshToken,\r\n                                                //         })\r\n                                                //         .catch((res) => alert(res));\r\n                                            }\r\n                                        });\r\n                                }\r\n                                // userDispatch({ type: \"logout_user\" })\r\n                            }\r\n                        >\r\n                            Logout\r\n                        </div>\r\n                        {/* <div\r\n                            className=\"navbar__item\"\r\n                            onClick={() => getuser(userState)}\r\n                        >\r\n                            getUser\r\n                        </div> */}\r\n                    </div>\r\n                ) : (\r\n                    (console.log(\"userState:\", userState),\r\n                    (\r\n                        <KaKaoBtn\r\n                            jsKey={\"af45d260886da3efeecc059923fb619e\"}\r\n                            buttonText=\"카카오 kakao\"\r\n                            onSuccess={responseKaKao}\r\n                            // onSuccess={responseKaKao}\r\n                            onFailure={responseFail}\r\n                            getProfile={true}\r\n                        />\r\n                    ))\r\n                )}\r\n            </div>\r\n            {/* </Router> */}\r\n        </header>\r\n    );\r\n};\r\n\r\nconst KaKaoBtn = styled(KaKaoLogin)`\r\n    padding: 0;\r\n    width: 190px;\r\n    height: 44px;\r\n    line-height: 44px;\r\n    color: #783c00;\r\n    background-color: #ffeb00;\r\n    border: 1px solid transparent;\r\n    border-radius: 3px;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    &:hover {\r\n        box-shadow: 0 0px 15px 0 rgba(0, 0, 0, 0.2);\r\n    }\r\n`;\r\n\r\nexport default WallHeader;\r\n","import TradingViewWidget, { Themes } from \"react-tradingview-widget\";\r\n\r\n// const StockChart = () => <TradingViewWidget symbol=\"AAPL\" />;\r\nconst StockChart = ({ ticker }) => (\r\n    <TradingViewWidget\r\n        symbol={ticker && ticker.length ? ticker : \"NASDAQ:QQQ\"}\r\n        // theme={Themes.DARK}\r\n        locale=\"kr\"\r\n        autosize\r\n    />\r\n);\r\n\r\nexport default StockChart;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction ShortHeader() {\r\n    return (\r\n        <div>\r\n            <Header />\r\n        </div>\r\n    );\r\n}\r\nconst Header = styled.div`\r\n    height: 72px;\r\n    width: 100%;\r\n\r\n    background: #13113c;\r\n`;\r\n\r\nexport default ShortHeader;\r\n","import React from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nconst options = [\"Delete\"];\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nexport default function MenuIconThreeDots() {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <IconButton\r\n                aria-label=\"more\"\r\n                aria-controls=\"long-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n            >\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"long-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                PaperProps={{\r\n                    style: {\r\n                        maxHeight: ITEM_HEIGHT * 4.5,\r\n                        width: \"20ch\",\r\n                    },\r\n                }}\r\n            >\r\n                {options.map((option) => (\r\n                    <MenuItem\r\n                        key={option}\r\n                        selected={option === \"Pyxis\"}\r\n                        onClick={handleClose}\r\n                    >\r\n                        {option}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport axios from \"axios\";\r\nimport { GlobalContext } from \"../../store/GlobalState\";\r\n\r\nexport default function AlertDialogModal(param) {\r\n    useEffect(() => {\r\n        console.log(\"param.portfolio_Id:\", param.portfolio_Id);\r\n    }, [param.portfolio_Id]);\r\n    useEffect(() => {\r\n        console.log(\"userId4:\", param.userId);\r\n    }, [param.userId]);\r\n    const { userState, userDispatch, stockDispatch } = useContext(\r\n        GlobalContext\r\n    );\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleDeleteAndClose = async () => {\r\n        console.log(\"param.portfolio_Id3:\", param.portfolio_Id);\r\n        // console.log(\"userId:\", userId);\r\n        const result = await axios.delete(`/portfolio/${param.portfolio_Id}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n            },\r\n        });\r\n        console.log(\"result:\", result);\r\n        // userId = [...userId];\r\n        const newList = param.userId.filter(\r\n            (item) => item !== param.portfolio_Id\r\n        );\r\n        // setUserId(newList);\r\n        param.handleUserId(newList);\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                삭제\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"포트폴리오를 삭제하시겠습니까?\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        포트폴리오 삭제시 포트폴리오에 등록된 데이터 모두\r\n                        삭제됩니다.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleDeleteAndClose} color=\"primary\">\r\n                        삭제\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        취소\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useReducer, useContext, useEffect } from \"react\";\r\nimport { useTable } from \"react-table\";\r\nimport styled from \"styled-components\";\r\nimport PortfolioAdd from \"../Content/PortfolioAdd\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./table.css\";\r\nimport produce from \"immer\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MenuIconThreeDots from \"../Form/MenuIconThreeDots\";\r\nimport AlertDialogModal from \"../Form/AlertDialogModal\";\r\n\r\n// import { initialState, userReducer } from \"../../store/reducers\";\r\nimport { GlobalContext } from \"../../store/GlobalState\";\r\n\r\nexport const columns = [\r\n    {\r\n        Header: \"종목코드\",\r\n        accessor: \"symbol\",\r\n    },\r\n    {\r\n        Header: \"종목명\",\r\n        accessor: \"name\",\r\n    },\r\n    {\r\n        Header: \"비용\",\r\n        accessor: \"cost\",\r\n    },\r\n    {\r\n        Header: \"평가금액\",\r\n        accessor: \"marketValue\",\r\n    },\r\n    {\r\n        Header: \"수익률\",\r\n        accessor: \"return\",\r\n    },\r\n];\r\n\r\nfunction PortfolioManageContent() {\r\n    const { userState, userDispatch, stockDispatch } = useContext(\r\n        GlobalContext\r\n    );\r\n    const [userId, setUserId] = useState([]);\r\n    const [portfolioInfo, setPortfolioInfo] = useState([]);\r\n\r\n    async function getUser(ID) {\r\n        try {\r\n            const response = await axios.get(`/portfolio/${ID}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                },\r\n            });\r\n            console.log(\"response:\", response);\r\n        } catch (error) {\r\n            console.log(\"err:\", error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"/user\", {\r\n                headers: {\r\n                    Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                },\r\n            })\r\n            .then((res) => {\r\n                console.log(\"getuser succeed1:\", res.data);\r\n                console.log(\"getuser succeed2:\", res.data.portfolios);\r\n                setUserId(() => [...res.data.portfolios]);\r\n            })\r\n            .catch((err) => console.log(\"err:\", err));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(\"userId:\", userId);\r\n        setPortfolioInfo([]);\r\n        // console.log(\"now state:\", userState);\r\n        userId.map((ID) => {\r\n            axios\r\n                .get(`/portfolio/${ID}`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                    },\r\n                })\r\n                .then((res) => {\r\n                    setPortfolioInfo(\r\n                        (currState) => [...currState, res],\r\n                        console.log(\"portfolioINFO:\", portfolioInfo)\r\n                    );\r\n                });\r\n        });\r\n    }, [userId]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"portfolioINFO2:\", portfolioInfo);\r\n    }, [portfolioInfo]);\r\n\r\n    const [row, setRow] = useState([\r\n        {\r\n            symbol: \"ss\",\r\n            name: \"\",\r\n            cost: \"\",\r\n            marketValue: \"\",\r\n            return: \"\",\r\n        },\r\n    ]);\r\n\r\n    const handleDeletePortfolio = async (portfolioId) => {\r\n        console.log(\"portfolioId?:\", portfolioId);\r\n        const result = await axios.delete(`/portfolio/${portfolioId}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n            },\r\n        });\r\n        console.log(\"result:\", result);\r\n        const newList = userId.filter((item) => item !== portfolioId);\r\n        setUserId(newList);\r\n    };\r\n\r\n    const handleUserId = (param) => {\r\n        setUserId(param);\r\n    };\r\n\r\n    const data = row;\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        footerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n    });\r\n\r\n    const handleAddRow = () => {\r\n        const item = {\r\n            symbol: \"gggss\",\r\n            name: \"\",\r\n            cost: \"\",\r\n            marketValue: \"\",\r\n            return: \"\",\r\n        };\r\n        setRow([...row, item]);\r\n        console.log(row);\r\n    };\r\n    const ab = (props) => {\r\n        const value = props.value;\r\n        value.map((id) => {\r\n            <Container3\r\n                style={{\r\n                    fontWeight: \"bold\",\r\n                }}\r\n            >\r\n                포트폴리오\r\n            </Container3>;\r\n            <br />;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Background>\r\n            <Container2>\r\n                <WatchListContainer>\r\n                    <div className=\"watchlist\">\r\n                        포트폴리오 {\"            \"}\r\n                        <Link to=\"/portfolio/add\">\r\n                            <span className=\"portfolio_add\">\r\n                                +새로운 포트폴리오\r\n                            </span>\r\n                        </Link>\r\n                    </div>\r\n                </WatchListContainer>\r\n                {portfolioInfo.map((res) => {\r\n                    console.log(\"res.data.name:\", res.data.name);\r\n                    console.log(\"res.data.portfolioId:\", res.data.portfolioId);\r\n                    return (\r\n                        <div>\r\n                            <Link\r\n                                to={`/portfolio/diverse/${res.data.portfolioId}`}\r\n                                style={{ textDecoration: \"none\" }}\r\n                            >\r\n                                <Container3\r\n                                    style={{\r\n                                        color: \"black\",\r\n                                    }}\r\n                                >\r\n                                    {res.data.name}\r\n                                    {/* <div\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"flex-end\",\r\n                                        }}\r\n                                    >\r\n                                        <MenuIcon style={{ fontSize: 25 }} />\r\n                                    </div> */}\r\n                                </Container3>\r\n                            </Link>\r\n                            <span\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"flex-end\",\r\n                                }}\r\n                            >\r\n                                <AlertDialogModal\r\n                                    // userState={userState}\r\n                                    portfolio_Id={res.data.portfolioId}\r\n                                    // setUserId={setUserId}\r\n                                    handleUserId={handleUserId}\r\n                                    userId={userId}\r\n\r\n                                    // portfolioInfo={res.data.portfolioId}\r\n                                />\r\n                                {/* <br />\r\n                                <hr />\r\n                                <div\r\n                                    onClick={() =>\r\n                                        handleDeletePortfolio(\r\n                                            res.data.portfolioId\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    .......\r\n                                </div> */}\r\n                                <MenuIconThreeDots\r\n                                    portfolioId={res.data.portfolioId}\r\n                                    onClick={() =>\r\n                                        handleDeletePortfolio(\r\n                                            res.data.portfolioId\r\n                                        )\r\n                                    }\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </Container2>\r\n        </Background>\r\n    );\r\n}\r\n\r\nconst Container3 = styled.div`\r\n    margin: 20px 20px;\r\n    height: 130px;\r\n    width: 100%;\r\n    background-color: white;\r\n    color: balck;\r\n    padding: 30px;\r\n`;\r\n\r\nconst Background = styled.div`\r\n    width: 100%;\r\n    height: 200vh;\r\n    background-color: #eff0f3;\r\n`;\r\n\r\nconst Container2 = styled.div`\r\n    width: 1580px;\r\n    margin: auto;\r\n`;\r\nconst WatchListContainer = styled.div`\r\n    margin: auto;\r\n    padding-top: 20px;\r\n    margin-bottom: 10px;\r\n\r\n    .watchlist {\r\n        padding: 40px 0;\r\n        line-height: 1.4;\r\n        font-size: 2rem;\r\n        font-weight: 900;\r\n        color: #13113c;\r\n        margin-right: 10px;\r\n        margin-bottom: 15px;\r\n        font-family: merriweather, sans-serif, Helvetica, Arial;\r\n    }\r\n`;\r\n\r\nexport default PortfolioManageContent;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport axios from \"axios\";\r\n// import { useParams } from \"react-router-dom\";\r\n\r\n// import ButtonBox from \"./ButtonBox\";\r\nimport { GlobalContext } from \"../../store/GlobalState\";\r\nimport pink from \"@material-ui/core/colors/pink\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction ShowAndAddCategory({ id, categoryHandle }) {\r\n    const [addIconVisable, setAddIconVisable] = useState(true);\r\n    // const { portfolioId2 } = useParams();\r\n    const [activeButtonIndex, setActiveButtonIndex] = useState(0);\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const onClick = (e) => {\r\n        setAddIconVisable(!addIconVisable);\r\n    };\r\n    const { userState, userDispatch, stockDispatch } = useContext(\r\n        GlobalContext\r\n    );\r\n    const [buttonBoxList, setButtonBoxList] = useState([]);\r\n    const onChange = (event) => {\r\n        /*  event: 사용자의 액션에 따라서 자동으로 이벤트가\r\n      생성되며, 특정한 파라미터가 없을경우, 기본 파라미터로 이벤트 객체가 생성된다. */\r\n        setInputValue(event.target.value);\r\n    };\r\n\r\n    const addCategoryAxios = async (categoryName) => {\r\n        console.log(\"categoryName:\", categoryName);\r\n        // console.log(\"activePortfolioId:\", userState.activePortfolioId);\r\n        console.log(\"usepram:\", id);\r\n        const response = await axios.post(\r\n            `/portfolio/${id}/category`,\r\n            {\r\n                category: categoryName,\r\n            },\r\n            {\r\n                headers: {\r\n                    Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                },\r\n            }\r\n        );\r\n        console.log(\"response.config.data:\", response.config.data);\r\n        const JsonParsed = JSON.parse(response.config.data);\r\n        console.log(`response.config.data.category`, JsonParsed.category);\r\n        setButtonBoxList([...buttonBoxList, JsonParsed.category]);\r\n        // console.log(\r\n        //     \"response.config.data.json():\",\r\n        //     response.config.data.json()\r\n        // );\r\n        // console.log(\r\n        //     \"response.config.data.json().category:\",\r\n        //     response.config.data.json().category\r\n        // );\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`/portfolio/${id}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                },\r\n            })\r\n            .then((res) => {\r\n                console.log(\r\n                    \"Object.keys(res.data.goalAssetRatio.stockRatios):\",\r\n                    Object.keys(res.data.goalAssetRatio.stockRatios)\r\n                );\r\n                setButtonBoxList(\r\n                    Object.keys(res.data.goalAssetRatio.stockRatios)\r\n                );\r\n                // Object.keys(res.data.goalAssetRatio.stockRatios).map(\r\n                //     (portfolioName) => {\r\n                //         setButtonBoxList([...buttonBoxList, portfolioName]);\r\n                //     }\r\n                // );\r\n            });\r\n\r\n        // console.log(\"Portfolio get:\", result2);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(\"buttonBoxList:\", buttonBoxList);\r\n        if (buttonBoxList) {\r\n            categoryHandle(buttonBoxList[activeButtonIndex]);\r\n        }\r\n    }, [buttonBoxList]);\r\n    // useEffect(() => {\r\n    // }, [activeButtonIndex]);\r\n\r\n    const onKeyPress = (event) => {\r\n        // 클릭 했을때 실행할 소스 추가\r\n        if (event.key === \"Enter\") {\r\n            alert(\"버튼의 클릭 효과\");\r\n            // setInputValue(event.target.value);\r\n            addCategoryAxios(inputValue);\r\n            setAddIconVisable(!addIconVisable);\r\n        }\r\n    };\r\n    const primary = pink[500];\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            \"& > *\": {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n    }));\r\n\r\n    function ButtonBox({\r\n        key,\r\n        buttonText,\r\n        buttonColor,\r\n        // setActiveButtonIndex,\r\n        activeButtonIndex,\r\n    }) {\r\n        const classes = useStyles();\r\n        return (\r\n            <span className={classes.root}>\r\n                {console.log(key)}\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color={buttonColor}\r\n                    onClick={() => setActiveButtonIndex(key)}\r\n                >\r\n                    {buttonText}\r\n                </Button>\r\n            </span>\r\n        );\r\n    }\r\n\r\n    // const buttonBoxList = [\"00\", \"11\", \"22\", \"33\"];\r\n    // useEffect(() => {}, [activeButtonIndex]);\r\n    const classes = useStyles();\r\n    const list = buttonBoxList.map((v, i) => {\r\n        if (i == activeButtonIndex) {\r\n            return (\r\n                <span key={i} className={classes.root}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={() => setActiveButtonIndex(i)}\r\n                    >\r\n                        {v}\r\n                    </Button>\r\n                </span>\r\n            );\r\n        }\r\n        return (\r\n            <span key={i} className={classes.root}>\r\n                {console.log(\"activeButtonIndex:\", activeButtonIndex)}\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={(e) => {\r\n                        console.log(\"buttonBoxList[i]:\", buttonBoxList[i]);\r\n                        categoryHandle(buttonBoxList[i]);\r\n                        setActiveButtonIndex(i);\r\n                    }}\r\n                >\r\n                    {v}\r\n                </Button>\r\n            </span>\r\n            // <ButtonBox\r\n            //     key={i}\r\n            //     buttonText={i}\r\n            //     // onClick={() => {\r\n            //     //     setActiveButtonIndex(i);\r\n            //     //     console.log(i);\r\n            //     // }}\r\n            //     buttonColor=\"primary\"\r\n            // />\r\n        );\r\n    });\r\n    return (\r\n        <div>\r\n            {list}\r\n            {/* <ButtonBox buttonText=\"한국 주식\" /> */}\r\n            {addIconVisable ? (\r\n                <AddIcon onClick={onClick} fontSize=\"large\" />\r\n            ) : (\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={onChange}\r\n                    onKeyPress={onKeyPress}\r\n                    placeholder=\"한국 주식\"\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShowAndAddCategory;\r\n","import React, { Fragment, useContext, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport { GlobalContext } from \"../../store/GlobalState\";\r\n\r\nrequire(\"./StockAutoCompleteSearchBar.css\");\r\n\r\nfunction StockAutoCompleteSearchBar({\r\n    tickerHandle,\r\n    stockInfoHandle,\r\n    stockInfo,\r\n}) {\r\n    const { userState, userDispatch, stockDispatch } = useContext(\r\n        GlobalContext\r\n    );\r\n    const [activeSuggestion, setActiveSuggestion] = useState(0);\r\n    const [filteredSuggestions, setFilteredSuggestions] = useState([]);\r\n    const [showSuggestions, setShowSuggestions] = useState(false);\r\n    const [userInput, setUserInput] = useState(\"\");\r\n\r\n    const onChange = async (e) => {\r\n        const userInput = e.currentTarget.value;\r\n        setShowSuggestions(false);\r\n        const suggestions = await axios.get(`/search/prefix/${userInput}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n            },\r\n        });\r\n        console.log(\"suggestions.data.usaStocks:\", suggestions.data.usaStocks);\r\n        let usaStockSuggestions = [];\r\n        suggestions.data.usaStocks.map((e) => {\r\n            usaStockSuggestions.push(`${e[\"code\"]} | ${e[\"name\"]}`);\r\n        });\r\n        let koreaStockSuggestions = [];\r\n        suggestions.data.koreaStocks.map((e) => {\r\n            koreaStockSuggestions.push(`${e[\"code\"]} | ${e[\"name\"]}`);\r\n        });\r\n        console.log(\"usaStockSuggestions:\", usaStockSuggestions);\r\n        console.log(\"koreaStockSuggestions:\", koreaStockSuggestions);\r\n        usaStockSuggestions\r\n            ? setFilteredSuggestions(usaStockSuggestions)\r\n            : setFilteredSuggestions(koreaStockSuggestions);\r\n        // 여기서 axios return값인 stock information을 parent에게 건네줌\r\n        stockInfoHandle(suggestions.data);\r\n\r\n        setActiveSuggestion(0);\r\n        setShowSuggestions(true);\r\n        setUserInput(userInput);\r\n\r\n        // setFilteredSuggestions(\r\n        //     usaStockSuggestions.filter(\r\n        //         (suggestion) =>\r\n        //             suggestion.toLowerCase().indexOf(userInput.toLowerCase()) >\r\n        //             -1\r\n        //     )\r\n        // );\r\n\r\n        // Filter our suggestions that don't contain the user's input\r\n        // const filteredSuggestions = suggestions.filter(\r\n        //     (suggestion) =>\r\n        //         suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n        // );\r\n\r\n        // this.setState({\r\n        //     activeSuggestion: 0,\r\n        //     filteredSuggestions,\r\n        //     showSuggestions: true,\r\n        //     userInput: e.currentTarget.value,\r\n        // });\r\n    };\r\n\r\n    const onClick = (e) => {\r\n        const userInput = e.currentTarget.value;\r\n        console.log(\"userInput:\", userInput);\r\n        setActiveSuggestion(0);\r\n        setFilteredSuggestions([]);\r\n        setShowSuggestions(false);\r\n        setUserInput(userInput);\r\n\r\n        // this.setState({\r\n        //     activeSuggestion: 0,\r\n        //     filteredSuggestions: [],\r\n        //     showSuggestions: false,\r\n        //     userInput: e.currentTarget.innerText,\r\n        // });\r\n    };\r\n\r\n    const SliceTicker = (str) => {\r\n        var pos = str.lastIndexOf(\" | \");\r\n        var res = str.slice(0, pos).toLowerCase();\r\n        return res;\r\n    };\r\n\r\n    const setParentTickerState = (str) => {\r\n        var str2 = SliceTicker(str);\r\n        tickerHandle(str2);\r\n    };\r\n\r\n    const onKeyDown = (e) => {\r\n        // const { activeSuggestion, filteredSuggestions } = this.state;\r\n\r\n        // User pressed the enter key\r\n        if (e.key === \"Enter\") {\r\n            setActiveSuggestion(0);\r\n            setShowSuggestions(false);\r\n            setUserInput(filteredSuggestions[activeSuggestion]);\r\n            console.log(\"e.key enter:\", filteredSuggestions[activeSuggestion]);\r\n            // setParentTickerState(filteredSuggestions[activeSuggestion]);\r\n            var pos = filteredSuggestions[activeSuggestion].lastIndexOf(\" | \");\r\n            var res = filteredSuggestions[activeSuggestion]\r\n                .slice(0, pos)\r\n                .toLowerCase();\r\n            tickerHandle(res);\r\n\r\n            console.log(\"stockInfo:\", stockInfo);\r\n            // this.setState({\r\n            //     activeSuggestion: 0,\r\n            //     showSuggestions: false,\r\n            //     userInput: filteredSuggestions[activeSuggestion],\r\n            // });\r\n        }\r\n        // User pressed the up arrow\r\n        else if (e.keyCode === 38) {\r\n            if (activeSuggestion === 0) {\r\n                return;\r\n            }\r\n            setActiveSuggestion(activeSuggestion - 1);\r\n            // this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n        }\r\n        // User pressed the down arrow\r\n        else if (e.keyCode === 40) {\r\n            if (activeSuggestion - 1 === filteredSuggestions.length) {\r\n                return;\r\n            }\r\n            setActiveSuggestion(activeSuggestion + 1);\r\n            // this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n        }\r\n    };\r\n\r\n    // render() {\r\n    //     const {\r\n    //         onChange,\r\n    //         onClick,\r\n    //         onKeyDown,\r\n    //         state: {\r\n    //             activeSuggestion,\r\n    //             filteredSuggestions,\r\n    //             showSuggestions,\r\n    //             userInput,\r\n    //         },\r\n    //     } = this;\r\n\r\n    let suggestionsListComponent;\r\n\r\n    if (showSuggestions && userInput) {\r\n        if (filteredSuggestions.length) {\r\n            suggestionsListComponent = (\r\n                <ul class=\"suggestions\">\r\n                    {filteredSuggestions.map((suggestion, index) => {\r\n                        let className;\r\n\r\n                        // Flag the active suggestion with a class\r\n                        if (index === activeSuggestion) {\r\n                            className = \"suggestion-active\";\r\n                        }\r\n\r\n                        return (\r\n                            <li\r\n                                className={className}\r\n                                key={suggestion}\r\n                                onClick={onClick}\r\n                            >\r\n                                {suggestion}\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            );\r\n        } else {\r\n            suggestionsListComponent = (\r\n                <div class=\"no-suggestions\">\r\n                    <em>해당하는 티커가 없습니다.</em>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <input\r\n                className=\"ticker_auto_complete_bar\"\r\n                type=\"text\"\r\n                onChange={onChange}\r\n                onKeyDown={onKeyDown}\r\n                value={userInput}\r\n            />\r\n            {suggestionsListComponent}\r\n        </Fragment>\r\n    );\r\n    // }\r\n}\r\n\r\nexport default StockAutoCompleteSearchBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport axios from \"axios\";\r\n\r\nfunction StockAutoComplete2() {\r\n    // useEffect(async () => {\r\n    //     let top100Films = await axios.get(`/search/prefix/${userInput}`, {\r\n    //         headers: {\r\n    //             Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n    //         },\r\n    //     });\r\n    // }, []);\r\n    const [top100Films, setTop100Films] = useState([\r\n        { title: \"Witness for the Prosecution\", year: 1957 },\r\n        { title: \"Das Boot\", year: 1981 },\r\n        { title: \"The Kid\", year: 1921 },\r\n        { title: \"Inglourious Basterds\", year: 2009 },\r\n    ]);\r\n    // var top100Films = [\r\n    //     { title: \"Witness for the Prosecution\", year: 1957 },\r\n    //     { title: \"Das Boot\", year: 1981 },\r\n    //     { title: \"The Kid\", year: 1921 },\r\n    //     { title: \"Inglourious Basterds\", year: 2009 },\r\n    // ];\r\n    const [param, setParam] = useState(\"\");\r\n    useEffect(() => {\r\n        setTop100Films((prev) => [...prev, { title: param, year: 1999 }]);\r\n    }, [param]);\r\n\r\n    const renderInputFunc = (params) => {\r\n        console.log(\"params;\", params);\r\n        setParam(params);\r\n        return <TextField {...params} label=\"Combo box\" variant=\"outlined\" />;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                options={top100Films}\r\n                getOptionLabel={(option) => option.title}\r\n                style={{ width: 300 }}\r\n                renderInput={renderInputFunc}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StockAutoComplete2;\r\n","// *https://www.registers.service.gov.uk/registers/country/use-the-api*\r\nimport fetch from \"cross-fetch\";\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n// function sleep(delay = 0) {\r\n//     return new Promise((resolve) => {\r\n//         setTimeout(resolve, delay);\r\n//     });\r\n// }\r\nfunction StockAutoComplete3({\r\n    userState,\r\n    stockInfoHandle,\r\n    tickerHandle,\r\n\r\n    stockInfo,\r\n    passedStockInfo,\r\n}) {\r\n    const [open, setOpen] = useState(false);\r\n    const [options, setOptions] = useState([]);\r\n    const [koreaStocks, setKoreaStocks] = useState([]);\r\n    const [usaStocks, setUsaStocks] = useState([]);\r\n    const [typedValue, setTypedValue] = useState(\"\");\r\n    const loading = open && usaStocks && usaStocks.length === 0;\r\n\r\n    useEffect(() => {\r\n        console.log(\"passedStockInfo last:\", passedStockInfo);\r\n    }, [passedStockInfo]);\r\n    const onChangeHandle = async (value) => {\r\n        // use the changed value to make request and then use the result. Which\r\n        console.log(\"value:\", value);\r\n        const response = await axios.get(`/search/prefix/${value}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n            },\r\n        });\r\n\r\n        // const response = await fetch(\r\n        //     \"https://country.register.gov.uk/records.json?page-size=5000\"\r\n        // );\r\n        // const countries = await response.json();\r\n        console.log(\"/search/prefix result:\", response);\r\n        setKoreaStocks(response.data.koreaStocks);\r\n        setUsaStocks(response.data.usaStocks);\r\n        if (response.data) {\r\n            if (response.data.koreaStocks.length) {\r\n                setOptions(response.data.koreaStocks);\r\n            } else {\r\n                setOptions(response.data.usaStocks);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setKoreaStocks([]);\r\n            setUsaStocks([]);\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <Autocomplete\r\n            id=\"asynchronous-demo\"\r\n            style={{ width: \"100%\" }}\r\n            open={open}\r\n            onOpen={() => {\r\n                setOpen(true);\r\n            }}\r\n            onClose={() => {\r\n                setOpen(false);\r\n            }}\r\n            // defaultValue={\"PLT\"}\r\n            // {\r\n            //     code: \"PLTR\",\r\n            //     country: \"usa\",\r\n            //     market: \"nyse\",\r\n            //     name: \"PALANTIR TECHNOLOGIES INC-A\",\r\n            // }\r\n            defaultValue={passedStockInfo}\r\n            getOptionSelected={(option, value) => {\r\n                // console.log(\"object, value:\", option, value);\r\n                stockInfoHandle(value);\r\n                tickerHandle(value.code);\r\n                return option.name === value.name;\r\n            }}\r\n            getOptionLabel={(option) => `${option.code} | ${option.name}`}\r\n            options={options}\r\n            loading={loading}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label=\"티커\"\r\n                    variant=\"outlined\"\r\n                    onChange={(ev, value) => {\r\n                        console.log(\"value:\", value);\r\n                        if (\r\n                            ev.target.value !== \"\" ||\r\n                            ev.target.value !== null\r\n                        ) {\r\n                            onChangeHandle(ev.target.value);\r\n                        }\r\n                    }}\r\n                    InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                            <React.Fragment>\r\n                                {loading ? (\r\n                                    <CircularProgress\r\n                                        color=\"inherit\"\r\n                                        size={20}\r\n                                    />\r\n                                ) : null}\r\n                                {params.InputProps.endAdornment}\r\n                            </React.Fragment>\r\n                        ),\r\n                    }}\r\n                />\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default StockAutoComplete3;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ReactSelect from \"react-select\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport ShowAndAddCategory from \"./ShowAndAddCategory\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport { DatePicker } from \"@y0c/react-datepicker\";\r\nimport styled from \"styled-components\";\r\nimport StockAutoCompleteSearchBar from \"./StockAutoCompleteSearchBar\";\r\nimport StockAutoComplete2 from \"./StockAutoComplete2\";\r\nimport StockAutoComplete3 from \"./StockAutoComplete3\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../../store/GlobalState\";\r\n\r\nimport NumberFormat from \"react-number-format\";\r\n// import \"./KRWFormHooks.css\";\r\n\r\nconst defaultValues = {\r\n    ReactDatepicker: \"\",\r\n    ReactSelect: {},\r\n    numberFormat: 0,\r\n};\r\nfunction KRWFormHooks({ portfolioId, handleModalIsOpen, passedId }) {\r\n    const [ticker, setTicker] = useState(\"\");\r\n    const [category, setCategory] = useState(\"\");\r\n    const [action, setAction] = useState(\"\");\r\n    const [timestamp, setTimestamp] = useState(0);\r\n    const [stockInfo, setStockInfo] = useState({});\r\n    const [krw, setKrw] = useState(0);\r\n    const { userState, userDispatch, stockDispatch } = useContext(\r\n        GlobalContext\r\n    );\r\n    let history = useHistory();\r\n\r\n    const stockInfoHandle = (param) => {\r\n        setStockInfo(param);\r\n    };\r\n\r\n    const categoryHandle = (param) => {\r\n        setCategory(param);\r\n    };\r\n\r\n    const tickerHandle = (param) => {\r\n        setTicker(param);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"stockInfo:\", stockInfo);\r\n    }, [stockInfo]);\r\n    useEffect(() => {\r\n        console.log(\"timestamp:\", timestamp);\r\n    }, [timestamp]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"ticker:\", ticker);\r\n    }, [ticker]);\r\n    useEffect(() => {\r\n        console.log(\"date action:\", action);\r\n    }, [action]);\r\n    useEffect(() => {\r\n        console.log(\"category:\", category);\r\n    }, [category]);\r\n    const { id } = useParams();\r\n    const { register, handleSubmit, watch, errors, control } = useForm({\r\n        defaultValues,\r\n    });\r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n        console.log(\"passedId:\", passedId);\r\n        console.log(stockInfo);\r\n        console.log(category);\r\n        // console.log(data.BuySellSelector.value == \"매수\" ? \"Buy\" : \"Sell\");\r\n        // console.log(parseInt(data.amount.replace(/,/g, \"\")));\r\n        console.log(parseFloat(data.price.replace(/,/g, \"\")));\r\n        console.log(timestamp);\r\n        // const response = await\r\n        axios\r\n            .post(\r\n                `/portfolio/${portfolioId}/cash/history`,\r\n                {\r\n                    cashFlowType: \"Deposit\",\r\n                    data: {\r\n                        balance: parseFloat(data.price.replace(/,/g, \"\")),\r\n                        country: passedId == 0 ? \"korea\" : \"usa\",\r\n                        timestamp: timestamp,\r\n                    },\r\n                },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                    },\r\n                }\r\n            )\r\n            .then((res) => {\r\n                console.log(\"res:\", res);\r\n                // userDispatch({ type: \"trigger_rerender\" });\r\n            })\r\n            .then((res) => {\r\n                handleModalIsOpen();\r\n                userDispatch({ type: \"trigger_rerender\" });\r\n            })\r\n            .then(() => {\r\n                history.push(`/portfolio/diverse/${portfolioId}`);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    console.log(watch(\"example\")); // you can watch individual input by pass the name of the input\r\n\r\n    return (\r\n        <Body>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <section>\r\n                    {passedId == 0 ? (\r\n                        <label className=\"section-container\">KRW 입금액</label>\r\n                    ) : (\r\n                        <label className=\"section-container\">USD 입금액</label>\r\n                    )}\r\n\r\n                    <div />\r\n                    <Controller\r\n                        as={NumberFormat}\r\n                        thousandSeparator\r\n                        // type=\"number\"\r\n                        name=\"price\"\r\n                        className=\"input\"\r\n                        control={control}\r\n                        // onClick={}\r\n                        //   onClick={this.props.closeModal}\r\n                    />\r\n                </section>\r\n                <section>\r\n                    <label className=\"section-container\">날짜</label>\r\n                    <div />\r\n                    <DatePicker\r\n                        onChange={(date) => {\r\n                            console.log(date);\r\n\r\n                            setAction(\r\n                                // date\r\n                                `${date[\"$y\"]}-${\r\n                                    date[\"$M\"] + 1 < 10\r\n                                        ? \"0\" + (date[\"$M\"] + 1)\r\n                                        : date[\"$M\"] + 1\r\n                                }-${\r\n                                    date[\"$D\"] < 10\r\n                                        ? \"0\" + date[\"$D\"]\r\n                                        : date[\"$D\"]\r\n                                }`\r\n                            );\r\n                            var newDate = new Date(\r\n                                date[\"$y\"],\r\n                                date[\"$M\"],\r\n                                date[\"$D\"]\r\n                            );\r\n                            setTimestamp(newDate.getTime());\r\n                        }}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"date\"\r\n                        value={action}\r\n                        // defaultValue=\"0\"\r\n                        className=\"disable\"\r\n                        ref={register}\r\n                    />\r\n                    {/* <hr /> */}\r\n                </section>\r\n                {errors.exampleRequired && <p>This field is required</p>}\r\n                <input type=\"submit\" value=\"Save\" />\r\n            </Form>\r\n        </Body>\r\n    );\r\n}\r\nconst Body = styled.div`\r\n    // height: 100%;\r\n    margin: 0 0 0 0;\r\n\r\n    // background: #0e101c;\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\",\r\n        \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\r\n        \"Helvetica Neue\", sans-serif;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    max-width: 500px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    line-height: 2;\r\n    text-align: left;\r\n    display: block;\r\n    margin-bottom: 10px;\r\n    margin-top: 20px;\r\n    font-size: 16px;\r\n    font-weight: 300;\r\n    color: black;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    padding: 10px 15px;\r\n    font-size: 14px;\r\n`;\r\nexport default KRWFormHooks;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport KRWFormHooks from \"./KRWFormHooks\";\r\nimport Button from \"@material-ui/core/Button\";\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction KRWFormModal({ portfolioId, userState, passedId }) {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const handleModalIsOpen = () => {\r\n        setModalIsOpen((prev) => !prev);\r\n    };\r\n    // useEffect(() => {\r\n    //     handleReRender();\r\n    // }, [modalIsOpen]);\r\n    return (\r\n        <div className=\"App\">\r\n            <Button\r\n                key={passedId}\r\n                variant=\"contained\"\r\n                onClick={() => setModalIsOpen(true)}\r\n            >\r\n                추가\r\n            </Button>\r\n            {/* <button onClick={() => setModalIsOpen(true)}>추가</button> */}\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onRequestClose={() => setModalIsOpen(false)}\r\n                // style={{\r\n                //     overlay: {\r\n                //         backgroundColor: \"grey\",\r\n                //     },\r\n                //     content: {\r\n                //         color: \"orange\",\r\n                //     },\r\n                // }}\r\n                // shouldCloseOnOverlayClick={false}\r\n            >\r\n                <div>\r\n                    <button onClick={() => setModalIsOpen(false)}>Close</button>\r\n                </div>\r\n                <KRWFormHooks\r\n                    handleModalIsOpen={handleModalIsOpen}\r\n                    passedId={passedId}\r\n                    portfolioId={portfolioId}\r\n                    userState={userState}\r\n                />\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default KRWFormModal;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { GlobalContext } from \"../../store/GlobalState\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport KRWFormModal from \"../Form/KRWFormModal\";\r\n\r\nfunction CashTable({ title, ticker, stockName, id }) {\r\n    const { userState, userDispatch, stockDispatch } = useContext(\r\n        GlobalContext\r\n    );\r\n    const URL = \"/portfolio/\" + id;\r\n    console.log(URL);\r\n    const [tableData, setTableData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [userState.rerender]);\r\n\r\n    const getData = async () => {\r\n        setTableData([]);\r\n        const response = await axios.get(`/portfolio/${id}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n            },\r\n        });\r\n        console.log(\"getdata2 response:\", response);\r\n        console.log(\r\n            \"response.data.holdings.cashHoldings.korea.balance:\",\r\n            response.data.holdings.cashHoldings.korea.balance\r\n        );\r\n        const [KRW, USD] = [\r\n            response.data.holdings.cashHoldings.korea.balance,\r\n            response.data.holdings.cashHoldings.usa.balance,\r\n        ];\r\n        console.log(\"KRW, USD:\", KRW, USD);\r\n        setTableData([KRW, USD]);\r\n        // setTableData(response.data);\r\n    };\r\n\r\n    const removeData = (id) => {\r\n        axios.delete(`${URL}/${id}`).then((res) => {\r\n            const del = tableData.filter((employee) => id !== employee.id);\r\n            setTableData(del);\r\n        });\r\n    };\r\n    function numberWithCommas(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    const renderHeader = () => {\r\n        let headerElement = [\r\n            \"현금\",\r\n            \"예수금\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n            \"\",\r\n        ];\r\n\r\n        return headerElement.map((key, idx) => {\r\n            return <th key={idx}>{key.toUpperCase()}</th>;\r\n        });\r\n    };\r\n\r\n    const renderBody = () => {\r\n        return (\r\n            tableData &&\r\n            tableData.map((e, i) => {\r\n                return (\r\n                    <tr key={i}>\r\n                        {i == 1 ? <td>USD</td> : <td>KRW</td>}\r\n                        {i == 0 ? (\r\n                            <td>₩{numberWithCommas(e)}</td>\r\n                        ) : (\r\n                            <td>${numberWithCommas(e)}</td>\r\n                        )}\r\n                        <td id=\"text_align_center\">\r\n                            <KRWFormModal\r\n                                passedId={i}\r\n                                // handleReRender={handleReRender}\r\n                                portfolioId={id}\r\n                                userState={userState}\r\n                                userDispatch={userDispatch}\r\n                            />\r\n                        </td>\r\n                        {/* <td>{KRW}</td>\r\n                        <td>{USD}</td> */}\r\n                        {/* <td>{name}</td>\r\n                        <td>{phone}</td> */}\r\n                        {/* <td className=\"opration\">\r\n                            <button\r\n                                className=\"button\"\r\n                                onClick={() => removeData(id)}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </td> */}\r\n                    </tr>\r\n                );\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1\r\n                id=\"title_sm\"\r\n                style={{\r\n                    color: \"#3f50b4\",\r\n                    fontWeight: \"bold\",\r\n                    textAlign: \"left\",\r\n                    fontSize: \"1.3rem\",\r\n                }}\r\n            >\r\n                {title}\r\n            </h1>\r\n            <table id=\"employee\">\r\n                <thead>\r\n                    <tr>{renderHeader()}</tr>\r\n                </thead>\r\n                <tbody>{renderBody()}</tbody>\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CashTable;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ReactSelect from \"react-select\";\r\nimport { watch, useForm, Controller } from \"react-hook-form\";\r\nimport ShowAndAddCategory from \"./ShowAndAddCategory\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { GlobalContext } from \"../../store/GlobalState\";\r\n\r\nimport { DatePicker } from \"@y0c/react-datepicker\";\r\nimport styled from \"styled-components\";\r\nimport StockAutoCompleteSearchBar from \"./StockAutoCompleteSearchBar\";\r\nimport StockAutoComplete2 from \"./StockAutoComplete2\";\r\nimport StockAutoComplete3 from \"./StockAutoComplete3\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport StockChart from \"../Charts/StockChart\";\r\n\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: \"center\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nfunction FormHookSecond({\r\n    portfolioId,\r\n    handleModalIsOpen,\r\n    formType,\r\n    passedStockInfo,\r\n}) {\r\n    const classes = useStyles();\r\n\r\n    const [checked, setChecked] = useState(true);\r\n    const [ticker, setTicker] = useState(\"\");\r\n    // const [tickerLen, setTickerLen] = useState(0);\r\n    const defaultValues = {\r\n        ReactDatepicker: \"\",\r\n        ReactSelect: {},\r\n        numberFormat: 0,\r\n        // Checkbox: checked,\r\n        price: 0,\r\n    };\r\n    const { userState, userDispatch, stockDispatch } = useContext(\r\n        GlobalContext\r\n    );\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        watch,\r\n        errors,\r\n        control,\r\n        setValue,\r\n    } = useForm({\r\n        defaultValues,\r\n    });\r\n    const watchFields = watch([\"Checkbox\"]); // you can also target specific fields by their names\r\n    console.log(\"watchFields:\", watchFields);\r\n\r\n    const [category, setCategory] = useState(\"\");\r\n    const [action, setAction] = useState(\"\");\r\n    const [timestamp, setTimestamp] = useState(0);\r\n    const [stockInfo, setStockInfo] = useState({});\r\n\r\n    let history = useHistory();\r\n\r\n    const stockInfoHandle = (param) => {\r\n        setStockInfo(param);\r\n    };\r\n\r\n    const categoryHandle = (param) => {\r\n        setCategory(param);\r\n    };\r\n\r\n    const tickerHandle = (param) => {\r\n        setTicker(param);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\" second passedStockInfo:\", passedStockInfo);\r\n        console.log(\"stockInfo:\", stockInfo);\r\n    }, [stockInfo]);\r\n    useEffect(() => {\r\n        console.log(\"timestamp:\", timestamp);\r\n    }, [timestamp]);\r\n    useEffect(() => {\r\n        console.log(\"checked:\", checked);\r\n    }, [checked]);\r\n    useEffect(() => {\r\n        if (passedStockInfo) {\r\n            setTicker(passedStockInfo.code);\r\n        }\r\n    }, [passedStockInfo]);\r\n    useEffect(() => {\r\n        console.log(\"ticker:\", ticker);\r\n        console.log(\"ticker length:\", ticker.length);\r\n        // setTickerLen(ticker.length);\r\n\r\n        axios\r\n            .get(`/stock/now/${ticker}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                },\r\n            })\r\n            .then((res) => {\r\n                // console.log(\"rpiceNow:\", parseFloat(res.data.price));\r\n                setValue(\"price\", res.data.price.toString());\r\n            });\r\n    }, [ticker]);\r\n    useEffect(() => {\r\n        console.log(\"date action:\", action);\r\n    }, [action]);\r\n    useEffect(() => {\r\n        console.log(\"category:\", category);\r\n    }, [category]);\r\n    const { id } = useParams();\r\n    const onSubmit = async (data) => {\r\n        console.log(\"data:\", data);\r\n        console.log(\"stockInfo:\", stockInfo);\r\n        console.log(\"category:\", category);\r\n        console.log(\"passedStockInf333o:\", passedStockInfo);\r\n        console.log(data.BuySellSelector.value == \"매수\" ? \"Buy\" : \"Sell\");\r\n        console.log(parseFloat(data.amount.replace(/,/g, \"\")));\r\n        console.log(parseFloat(data.price.replace(/,/g, \"\")));\r\n        console.log(timestamp);\r\n\r\n        // const response = await\r\n        if (data.Checkbox == false && data.BuySellSelector.value == \"매수\") {\r\n            // if (stockInfo.country == \"usa\") {\r\n            //     console.log(\r\n            //         `stockInfo.country == \"usa\"stockInfo.country == \"usa\"stockInfo.country == \"usa\",`,\r\n            //         parseFloat(data.amount.replace(/,/g, \"\")) *\r\n            //             parseFloat(data.price.replace(/,/g, \"\"))\r\n            //     );\r\n            console.log(\"data.Checkbox == false clicked\");\r\n\r\n            axios\r\n                .post(\r\n                    `/portfolio/${portfolioId}/cash/history`,\r\n                    {\r\n                        cashFlowType: \"Deposit\",\r\n                        data: {\r\n                            balance:\r\n                                parseInt(\r\n                                    data.amount.replace(/,/g, \"\") *\r\n                                        parseFloat(data.price.replace(/,/g, \"\"))\r\n                                ) + 1,\r\n                            country:\r\n                                (stockInfo && stockInfo.country == \"usa\") ||\r\n                                (passedStockInfo &&\r\n                                    passedStockInfo.country == \"usa\")\r\n                                    ? \"usa\"\r\n                                    : \"korea\",\r\n                            timestamp: timestamp,\r\n                        },\r\n                    },\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                        },\r\n                    }\r\n                )\r\n                .then((res) => {\r\n                    alert(\"succ portfolio/${portfolioId}/cash/hist:\", res);\r\n                })\r\n                .catch((err) =>\r\n                    console.log(\"folio/${portfolioId}/cash/hist\", err)\r\n                );\r\n        }\r\n\r\n        // 주식 매매기록 업데이트 (not add)\r\n        if (formType == \"stock_update\") {\r\n            axios\r\n                .post(\r\n                    `/portfolio/${portfolioId}/stock/history`,\r\n                    {\r\n                        stock: passedStockInfo,\r\n                        history: {\r\n                            tradeType:\r\n                                data.BuySellSelector.value == \"매수\"\r\n                                    ? \"Buy\"\r\n                                    : \"Sell\",\r\n                            data: {\r\n                                amount: parseFloat(\r\n                                    data.amount.replace(/,/g, \"\")\r\n                                ),\r\n                                price: parseFloat(data.price.replace(/,/g, \"\")),\r\n                                timestamp: timestamp,\r\n                            },\r\n                        },\r\n                    },\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                        },\r\n                    }\r\n                )\r\n                .then((res) => {\r\n                    console.log(\"stock_update:\", res);\r\n                    handleModalIsOpen();\r\n                    userDispatch({ type: \"trigger_rerender\" });\r\n                })\r\n                .then(() => {\r\n                    history.push(`/portfolio/diverse/${portfolioId}`);\r\n                })\r\n                .catch((err) => {\r\n                    console.log('formType == \"stock_update\":', err);\r\n                    if (data.BuySellSelector.value == \"매도\") {\r\n                        alert(`오류 : \r\n1. 매수한 주식보다 매도 주식이 클경우\r\n2. 매수한 주식기록 이전 날짜에 매도 등록하는 경우\r\n                        `);\r\n                    }\r\n                });\r\n        }\r\n        // else {\r\n        //     await axios.post(\r\n        //         `/portfolio/${portfolioId}/cash/history`,\r\n        //         {\r\n        //             cashFlowType: \"Deposit\",\r\n        //             data: {\r\n        //                 balance: parseInt(\r\n        //                     parseFloat(data.amount.replace(/,/g, \"\")) *\r\n        //                         parseFloat(data.price.replace(/,/g, \"\")) +\r\n        //                         1\r\n        //                 ),\r\n        //                 country: \"korea\",\r\n        //                 timestamp: timestamp,\r\n        //             },\r\n        //         },\r\n        //         {\r\n        //             headers: {\r\n        //                 Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n        //             },\r\n        //         }\r\n        //     );\r\n        // }\r\n        else {\r\n            await axios\r\n                .post(\r\n                    `/portfolio/${portfolioId}/stock`,\r\n                    {\r\n                        stock: stockInfo,\r\n                        category: category,\r\n                        tradingHistories: [\r\n                            {\r\n                                tradeType:\r\n                                    data.BuySellSelector.value == \"매수\"\r\n                                        ? \"Buy\"\r\n                                        : \"Sell\",\r\n                                data: {\r\n                                    amount: parseFloat(\r\n                                        data.amount.replace(/,/g, \"\")\r\n                                    ),\r\n                                    price: parseFloat(\r\n                                        data.price.replace(/,/g, \"\")\r\n                                    ),\r\n                                    timestamp: timestamp,\r\n                                },\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                        },\r\n                    }\r\n                )\r\n                .then((res) => console.log(\"res:\", res))\r\n                .then((res) => {\r\n                    handleModalIsOpen();\r\n                    userDispatch({ type: \"trigger_rerender\" });\r\n                })\r\n                .then(() => {\r\n                    history.push(`/portfolio/diverse/${portfolioId}`);\r\n                })\r\n                .catch((err) => {\r\n                    alert(\"현금이 부족합니다. 현금을 등록해주세요.\");\r\n                    console.log(\"err:\", err);\r\n                });\r\n        }\r\n    };\r\n\r\n    console.log(watch(\"example\")); // you can watch individual input by pass the name of the input\r\n\r\n    return (\r\n        <Body>\r\n            <div>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                        {/* <Paper> */}\r\n                        {passedStockInfo ? (\r\n                            <StockChart ticker={passedStockInfo.code} />\r\n                        ) : (\r\n                            <StockChart ticker={ticker} />\r\n                        )}\r\n                        {/* </Paper> */}\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Paper>\r\n                            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                                {/* <Label>티커</Label> */}\r\n                                {/* <StockAutoCompleteSearchBar\r\n                    stockInfoHandle={stockInfoHandle}\r\n                    tickerHandle={tickerHandle}\r\n                    stockInfo={stockInfo}\r\n                /> */}\r\n                                {/* <StockAutoComplete2 /> */}\r\n                                <br />\r\n                                <StockAutoComplete3\r\n                                    stockInfoHandle={stockInfoHandle}\r\n                                    tickerHandle={tickerHandle}\r\n                                    stockInfo={stockInfo}\r\n                                    userState={userState}\r\n                                    passedStockInfo={passedStockInfo}\r\n                                />\r\n                                {/* <Controller /> */}\r\n                                <label className=\"section-container\">\r\n                                    거래\r\n                                </label>\r\n                                <Controller\r\n                                    as={ReactSelect}\r\n                                    options={[\r\n                                        { value: \"매수\", label: \"매수\" },\r\n                                        { value: \"매도\", label: \"매도\" },\r\n                                    ]}\r\n                                    name=\"BuySellSelector\"\r\n                                    isClearable\r\n                                    control={control}\r\n                                />\r\n                                <section>\r\n                                    <label className=\"section-container\">\r\n                                        가격 {ticker}\r\n                                    </label>\r\n                                    <div />\r\n                                    <Controller\r\n                                        as={NumberFormat}\r\n                                        thousandSeparator\r\n                                        // name=\"price\"\r\n                                        name=\"price\"\r\n                                        className=\"input\"\r\n                                        control={control}\r\n                                    />\r\n                                </section>\r\n                                <section>\r\n                                    <label className=\"section-container\">\r\n                                        수량\r\n                                    </label>\r\n                                    <div />\r\n                                    <Controller\r\n                                        as={NumberFormat}\r\n                                        thousandSeparator\r\n                                        // type=\"number\"\r\n                                        name=\"amount\"\r\n                                        className=\"input\"\r\n                                        control={control}\r\n                                        // onClick={}\r\n                                        //   onClick={this.props.closeModal}\r\n                                    />\r\n                                </section>\r\n                                <section>\r\n                                    <label className=\"section-container\">\r\n                                        날짜\r\n                                    </label>\r\n                                    <div />\r\n                                    <DatePicker\r\n                                        onChange={(date) => {\r\n                                            console.log(date);\r\n\r\n                                            setAction(\r\n                                                // date\r\n                                                `${date[\"$y\"]}-${\r\n                                                    date[\"$M\"] + 1 < 10\r\n                                                        ? \"0\" + (date[\"$M\"] + 1)\r\n                                                        : date[\"$M\"] + 1\r\n                                                }-${\r\n                                                    date[\"$D\"] < 10\r\n                                                        ? \"0\" + date[\"$D\"]\r\n                                                        : date[\"$D\"]\r\n                                                }`\r\n                                            );\r\n                                            var newDate = new Date(\r\n                                                date[\"$y\"],\r\n                                                date[\"$M\"],\r\n                                                date[\"$D\"]\r\n                                            );\r\n                                            setTimestamp(newDate.getTime());\r\n                                        }}\r\n                                    />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"date\"\r\n                                        value={action}\r\n                                        // defaultValue=\"0\"\r\n                                        className=\"disable\"\r\n                                        ref={register}\r\n                                    />\r\n                                    {/* <hr /> */}\r\n                                </section>\r\n                                <br />\r\n                                {formType !== \"stock_update\" && (\r\n                                    <section>\r\n                                        <ShowAndAddCategory\r\n                                            categoryHandle={categoryHandle}\r\n                                            id={id}\r\n                                        />\r\n                                    </section>\r\n                                )}\r\n                                <section onClick={() => setChecked(!checked)}>\r\n                                    <Controller\r\n                                        name=\"Checkbox\"\r\n                                        control={control}\r\n                                        defaultValue={true}\r\n                                        // rules={{ required: true }}\r\n                                        render={(props) => (\r\n                                            <Checkbox\r\n                                                onChange={(e) =>\r\n                                                    props.onChange(\r\n                                                        e.target.checked\r\n                                                    )\r\n                                                }\r\n                                                checked={props.value}\r\n                                            />\r\n                                        )} // props contains: onChange, onBlur and value\r\n                                    />\r\n                                    {/* <Controller\r\n                        as={Checkbox}\r\n                        name=\"Checkbox\"\r\n                        ref={register}\r\n                        type=\"checkbox\"\r\n                        control={control}\r\n                        defaultChecked={checked}\r\n                        checked={checked}\r\n                    /> */}\r\n                                    <span>매수시, 등록한 현금에서 뺍니다.</span>\r\n                                </section>\r\n                                {/* <Label>Example</Label>\r\n                <Input name=\"example\" defaultValue=\"test\" ref={register} /> */}\r\n                                {/* <Label>ExampleRequired</Label>\r\n                <Input\r\n                    name=\"exampleRequired\"\r\n                    ref={register({ required: true, maxLength: 10 })}\r\n                /> */}\r\n                                {errors.exampleRequired && (\r\n                                    <p>This field is required</p>\r\n                                )}\r\n                                <input type=\"submit\" value=\"Save\" />\r\n                            </Form>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </Body>\r\n    );\r\n}\r\nconst Body = styled.div`\r\n    // height: 100%;\r\n    margin: 0 0 0 0;\r\n\r\n    // background: #0e101c;\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\",\r\n        \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\r\n        \"Helvetica Neue\", sans-serif;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    max-width: 500px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    line-height: 2;\r\n    text-align: left;\r\n    display: block;\r\n    margin-bottom: 10px;\r\n    margin-top: 20px;\r\n    font-size: 16px;\r\n    font-weight: 300;\r\n    color: black;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    padding: 10px 15px;\r\n    font-size: 14px;\r\n`;\r\nexport default FormHookSecond;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport FormHookSecond from \"./FormHookSecond\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nModal.setAppElement(\"#root\");\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& > *\": {\r\n            margin: 0,\r\n            padding: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nfunction FormModalHooks({\r\n    portfolioId,\r\n    userState,\r\n    handleReRender,\r\n    formType,\r\n    buttonText,\r\n    stockInfo,\r\n}) {\r\n    const classes = useStyles();\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const handleModalIsOpen = () => {\r\n        setModalIsOpen((prev) => !prev);\r\n    };\r\n    useEffect(() => {\r\n        console.log(\"formodal stockInfo: \", stockInfo);\r\n        handleReRender();\r\n    }, [modalIsOpen]);\r\n    return (\r\n        <div style={{ marginTop: \"-18px\", padding: 0, height: \"10px\" }}>\r\n            <Button\r\n                className={classes.root}\r\n                variant=\"contained\"\r\n                // color=\"primary\"\r\n                onClick={() => setModalIsOpen(true)}\r\n            >\r\n                {buttonText}\r\n            </Button>\r\n            <br />\r\n            <br />\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onRequestClose={() => setModalIsOpen(false)}\r\n                // style={{\r\n                //     overlay: {\r\n                //         backgroundColor: \"grey\",\r\n                //     },\r\n                //     content: {\r\n                //         color: \"orange\",\r\n                //     },\r\n                // }}\r\n                // shouldCloseOnOverlayClick={false}\r\n            >\r\n                <div>\r\n                    <button onClick={() => setModalIsOpen(false)}>Close</button>\r\n                </div>\r\n                <FormHookSecond\r\n                    handleModalIsOpen={handleModalIsOpen}\r\n                    portfolioId={portfolioId}\r\n                    userState={userState}\r\n                    formType={formType}\r\n                    passedStockInfo={stockInfo}\r\n                />\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormModalHooks;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction OneStockDetailedTradingHistory({\r\n    stockInfo,\r\n    portfolioId,\r\n    userState,\r\n    isExpanded,\r\n    code,\r\n}) {\r\n    const [newIsExpanded, setNewIsExpanded] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setNewIsExpanded(isExpanded);\r\n    }, [isExpanded]);\r\n    function numberWithCommas(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    const [tradeHistory, setTradeHistory] = useState([]);\r\n    useEffect(() => {\r\n        console.log(\"stockInfo:\", stockInfo);\r\n        let encoded = encodeURI(JSON.stringify(stockInfo));\r\n        axios\r\n            .get(`/portfolio/${portfolioId}/stock/info/${encoded}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                },\r\n            })\r\n            .then((res) => {\r\n                console.log(\"OneStockDetailedTradingHistory succ:\", res);\r\n                setTradeHistory(res.data.tradeHistories);\r\n            })\r\n            .catch((err) => \"OneStockDetailedTradingHistory\");\r\n    }, []);\r\n    useEffect(() => {\r\n        console.log(\"21241dc:\", code);\r\n        console.log(\"tradeHistory:\", tradeHistory);\r\n    }, [tradeHistory]);\r\n\r\n    const timestampToDate = (timeStamp) => {\r\n        var date = new Date(timeStamp);\r\n        console.log(\r\n            \"tiemstamp:\",\r\n            date.getFullYear() +\r\n                \"년 \" +\r\n                (date.getMonth() + 1) +\r\n                \"월 \" +\r\n                date.getDate() +\r\n                \"일\"\r\n        );\r\n        return (\r\n            date.getFullYear() +\r\n            \"년 \" +\r\n            (date.getMonth() + 1) +\r\n            \"월 \" +\r\n            date.getDate() +\r\n            \"일\"\r\n        );\r\n    };\r\n    return (\r\n        <>\r\n            {tradeHistory &&\r\n                newIsExpanded.includes(code) &&\r\n                tradeHistory.map((elem) => {\r\n                    return (\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>{elem.tradeType == \"Buy\" ? \"매수\" : \"매도\"}</td>\r\n                            <td>{elem.data.price}</td>\r\n                            <td>{elem.data.amount}</td>\r\n                            <td>\r\n                                {numberWithCommas(\r\n                                    elem.data.price * elem.data.amount\r\n                                )}\r\n                            </td>\r\n                            <td>\r\n                                {timestampToDate(elem.data.timestamp)}\r\n                                {/* new Date(elem.data.timestamp).getTime() */}\r\n                                {/* // new Date(timestamp) // elem.data.timestamp } */}\r\n                            </td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OneStockDetailedTradingHistory;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./EasyTableBody.css\";\r\nimport OneStockDetailedTradingHistory from \"./OneStockDetailedTradingHistory\";\r\nimport { GlobalContext } from \"../../store/GlobalState\";\r\nimport { AXIS_LINE_COLOR } from \"@gooddata/sdk-ui-charts/dist/highcharts/utils/color\";\r\nimport FormModalHooks from \"../Form/FormModalHooks\";\r\n\r\nfunction EasyTableBody2({\r\n    DATA,\r\n    stockInfo,\r\n    currPrice,\r\n    title,\r\n    portfolioId,\r\n    handleUsdCost,\r\n    setKrwCost,\r\n    stockCodeAndCurrPrice,\r\n}) {\r\n    const { userState, userDispatch } = useContext(GlobalContext);\r\n    const [tableData, setTableData] = useState([]);\r\n    const [newStockInfo, setNewStockInfo] = useState([]);\r\n    const [nowPrice, setNowPrice] = useState([]);\r\n    const [newStockCodeAndCurrPrice, setnewStockCodeAndCurrPrice] = useState(\r\n        []\r\n    );\r\n    const [decimalPoint, setDecimalPoint] = useState(0);\r\n    const [isExpanded, setIsExpanded] = useState([]);\r\n    const [reRender, setReRenter] = useState(true);\r\n    const handleReRender = () => setReRenter((prev) => !prev);\r\n    useEffect(() => {\r\n        console.log(\"isExpanded:\", isExpanded);\r\n    }, [isExpanded]);\r\n    useEffect(() => {\r\n        console.log(\"stockCodeAndCurrPrice:\", stockCodeAndCurrPrice);\r\n        setnewStockCodeAndCurrPrice(stockCodeAndCurrPrice);\r\n    }, [stockCodeAndCurrPrice]);\r\n\r\n    // useEffect(() => {\r\n    //     setNewStockInfo(stockInfo);\r\n    // }, []);\r\n    // useEffect(() => {\r\n    //     setNewStockInfo(stockInfo);\r\n    // }, [stockInfo]);\r\n    // useEffect(() => {\r\n    //     setNowPrice(currPrice);\r\n    // }, []);\r\n    // useEffect(() => {\r\n    //     setNowPrice(currPrice);\r\n    // }, [currPrice]);\r\n    // useEffect(() => {\r\n    //     setTableData(DATA);\r\n    // }, []);\r\n    // useEffect(() => {\r\n    //     setTableData(DATA);\r\n    // }, [DATA]);\r\n    useEffect(() => {\r\n        console.log(\"tableData:\", tableData);\r\n    }, [tableData]);\r\n    // useEffect(() => {\r\n    //     userDispatch({\r\n    //         type: \"krw_cost_zero\",\r\n    //     });\r\n    //     userDispatch({\r\n    //         type: \"usd_cost_zero\",\r\n    //     });\r\n    //     userDispatch({\r\n    //         type: \"krw_real_time_value_zero\",\r\n    //     });\r\n    //     userDispatch({\r\n    //         type: \"usd_real_time_value_zero\",\r\n    //     });\r\n    //     userDispatch({\r\n    //         type: \"krw_today_value_zero\",\r\n    //     });\r\n    //     userDispatch({\r\n    //         type: \"usd_today_value_zero\",\r\n    //     });\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        var krwCount = 0;\r\n        var usdCount = 0;\r\n        var krwRealTimeValue = 0;\r\n        var usdRealTimeValue = 0;\r\n        var krwTodayEarnValue = 0;\r\n        var usdTodayEarnValue = 0;\r\n        // tableData &&\r\n        newStockCodeAndCurrPrice.map((elem, i) => {\r\n            if (elem[0]) {\r\n                if (elem[0].data.stock.country == \"korea\") {\r\n                    console.log(\r\n                        \"test4:\",\r\n                        i,\r\n                        newStockInfo,\r\n                        elem[0].data.avgPrice * elem[0].data.amount\r\n                    );\r\n                    console.log(\r\n                        \"------------------:\",\r\n                        elem[0].data.avgPrice * elem[0].data.amount\r\n                    );\r\n                    userDispatch({\r\n                        type: \"krw_cost_update\",\r\n                        cost: elem[0].data.avgPrice * elem[0].data.amount,\r\n                    });\r\n                    // krwCount +=\r\n                    //     elem[0].data.avgPrice * elem[0].data.amount;\r\n                    setDecimalPoint(0);\r\n                } else {\r\n                    usdCount += elem[0].data.avgPrice * elem[0].data.amount;\r\n                    setDecimalPoint(2);\r\n                }\r\n            }\r\n            console.log(\"nowPrice[i] elem[0]:\", nowPrice[i], elem[0]);\r\n            if (nowPrice[i]) {\r\n                if (elem[0].data.stock.country == \"korea\") {\r\n                    krwRealTimeValue +=\r\n                        nowPrice[i].data.price * elem[0].data.amount;\r\n                    // krw today earned value change\r\n                    krwTodayEarnValue +=\r\n                        (nowPrice[i].data.price -\r\n                            (1 / (nowPrice[i].data.changePercent / 100 + 1)) *\r\n                                nowPrice[i].data.price) *\r\n                        elem[0].data.amount;\r\n                } else {\r\n                    usdRealTimeValue +=\r\n                        nowPrice[i].data.price * elem[0].data.amount;\r\n                    // usd today earned value change\r\n                    usdTodayEarnValue +=\r\n                        (nowPrice[i].data.price -\r\n                            (1 / (nowPrice[i].data.changePercent / 100 + 1)) *\r\n                                nowPrice[i].data.price) *\r\n                        elem[0].data.amount;\r\n                }\r\n            }\r\n            console.log(\r\n                \"krwRealTimeValue, usd:\",\r\n                krwRealTimeValue,\r\n                usdRealTimeValue\r\n            );\r\n        });\r\n        // userDispatch({\r\n        //     type: \"krw_cost_update\",\r\n        //     cost: krwCount,\r\n        // });\r\n        // userDispatch({\r\n        //     type: \"usd_cost_update\",\r\n        //     cost: usdCount,\r\n        // });\r\n        // userDispatch({\r\n        //     type: \"krw_real_time_value_update\",\r\n        //     payload: krwRealTimeValue,\r\n        // });\r\n        // userDispatch({\r\n        //     type: \"usd_real_time_value_update\",\r\n        //     payload: usdRealTimeValue,\r\n        // });\r\n        // userDispatch({\r\n        //     type: \"krw_today_value_update\",\r\n        //     payload: krwTodayEarnValue,\r\n        // });\r\n        // userDispatch({\r\n        //     type: \"usd_today_value_update\",\r\n        //     payload: usdTodayEarnValue,\r\n        // });\r\n    }, [nowPrice]);\r\n    function numberWithCommas(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    const handleDelete = (i, newStockInfoTmp, title) => {\r\n        console.log(\"newStockInfoTmp:\", newStockInfoTmp, title);\r\n        axios\r\n            .delete(`/portfolio/${portfolioId}/stock`, {\r\n                data: { stock: newStockInfoTmp, category: title },\r\n                headers: {\r\n                    Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                },\r\n            })\r\n            .then((res) => {\r\n                console.log(res);\r\n                userDispatch({ type: \"trigger_rerender\" });\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n    return (\r\n        newStockCodeAndCurrPrice &&\r\n        newStockCodeAndCurrPrice.map((elem, i) => {\r\n            return (\r\n                <>\r\n                    <tr\r\n                        key={i}\r\n                        onClick={() =>\r\n                            setIsExpanded((prev) => {\r\n                                var index = isExpanded.indexOf(\r\n                                    elem[1].data.code\r\n                                );\r\n                                if (index == -1) {\r\n                                    return [...prev, elem[1].data.code];\r\n                                } else {\r\n                                    return prev.filter((ele) => {\r\n                                        return ele != elem[1].data.code;\r\n                                    });\r\n                                    // prev.splice(index, 1);\r\n                                    return prev;\r\n                                }\r\n\r\n                                // if (isExpanded.includes(elem[1].data.code)) {\r\n                                //     if (index !== -1) {\r\n                                //         array.splice(index, 1);\r\n                                //     }\r\n                                //     return [...prev];\r\n                                // } else {\r\n                                // }\r\n                            })\r\n                        }\r\n                    >\r\n                        {/* 티커 */}\r\n                        <td style={{ fontWeight: \"bold\" }}>\r\n                            {elem[1].data.code}\r\n                        </td>\r\n                        {/* 종목명 */}\r\n                        <td>{elem[0].data.stock.name}</td>\r\n                        {/* 현재가 */}\r\n                        <td style={{ textAlign: \"right\" }}>\r\n                            {elem[1]\r\n                                ? numberWithCommas(\r\n                                      elem[1].data.price.toFixed(decimalPoint)\r\n                                  )\r\n                                : \"something went wrong\"}\r\n                        </td>\r\n                        {/* 등락률 */}\r\n                        <td\r\n                            style={\r\n                                elem[1] && elem[1].data.changePercent >= 0\r\n                                    ? {\r\n                                          color: \"green\",\r\n                                          fontWeight: \"normal\",\r\n                                          textAlign: \"right\",\r\n                                      }\r\n                                    : {\r\n                                          color: \"red\",\r\n                                          fontWeight: \"normal\",\r\n                                          textAlign: \"right\",\r\n                                      }\r\n                            }\r\n                        >\r\n                            {elem[1]\r\n                                ? elem[1].data.changePercent + \"%\"\r\n                                : \"something went wrong\"}\r\n                        </td>\r\n                        {/* 등락 */}\r\n                        <td style={{ textAlign: \"right\" }}>\r\n                            {elem[1]\r\n                                ? numberWithCommas(\r\n                                      (\r\n                                          elem[1].data.price -\r\n                                          (1 /\r\n                                              (elem[1].data.changePercent /\r\n                                                  100 +\r\n                                                  1)) *\r\n                                              elem[1].data.price\r\n                                      ).toFixed(decimalPoint)\r\n                                  )\r\n                                : \"something went wrong\"}\r\n                        </td>\r\n                        {/* 주 */}\r\n                        <td id=\"text_align_right\">\r\n                            {elem[0]\r\n                                ? numberWithCommas(elem[0].data.amount)\r\n                                : JSON.stringify(elem[0])}\r\n                        </td>\r\n                        {/* 매입평균가 */}\r\n                        <td id=\"text_align_right\">\r\n                            {elem[0] &&\r\n                                numberWithCommas(\r\n                                    elem[0].data.avgPrice.toFixed(decimalPoint)\r\n                                )}\r\n                        </td>\r\n                        {/* 매수금 */}\r\n                        <td id=\"text_align_right\">\r\n                            {elem[0] &&\r\n                                numberWithCommas(\r\n                                    (\r\n                                        elem[0].data.avgPrice *\r\n                                        elem[0].data.amount\r\n                                    ).toFixed(decimalPoint)\r\n                                )}\r\n                        </td>\r\n                        {/* 마켓 벨류 */}\r\n                        <td id=\"text_align_right\">\r\n                            {elem[1] && elem[0]\r\n                                ? numberWithCommas(\r\n                                      (\r\n                                          elem[1].data.price *\r\n                                          elem[0].data.amount\r\n                                      ).toFixed(decimalPoint)\r\n                                  )\r\n                                : \"something went wrong\"}\r\n                        </td>\r\n                        {/* 총 수익 */}\r\n                        {elem[0] && elem[1] ? (\r\n                            <td\r\n                                id=\"text_align_right\"\r\n                                style={\r\n                                    elem[1].data.price * elem[0].data.amount -\r\n                                        elem[0].data.avgPrice *\r\n                                            elem[0].data.amount >=\r\n                                    0\r\n                                        ? { color: \"green\", fontWeight: \"bold\" }\r\n                                        : { color: \"red\", fontWeight: \"bold\" }\r\n                                }\r\n                            >\r\n                                {numberWithCommas(\r\n                                    (\r\n                                        elem[1].data.price *\r\n                                            elem[0].data.amount -\r\n                                        elem[0].data.avgPrice *\r\n                                            elem[0].data.amount\r\n                                    ).toFixed(decimalPoint)\r\n                                )}\r\n                            </td>\r\n                        ) : (\r\n                            \"something went wrong\"\r\n                        )}\r\n                        {/* 하루 수익 */}\r\n                        <td\r\n                            id=\"text_align_right\"\r\n                            style={\r\n                                (elem[1].data.price -\r\n                                    (1 /\r\n                                        (elem[1].data.changePercent / 100 +\r\n                                            1)) *\r\n                                        elem[1].data.price) *\r\n                                    elem[0].data.amount >=\r\n                                0\r\n                                    ? { color: \"green\", fontWeight: \"bold\" }\r\n                                    : { color: \"red\", fontWeight: \"bold\" }\r\n                            }\r\n                        >\r\n                            {elem[1] && elem[0]\r\n                                ? numberWithCommas(\r\n                                      (\r\n                                          (elem[1].data.price -\r\n                                              (1 /\r\n                                                  (elem[1].data.changePercent /\r\n                                                      100 +\r\n                                                      1)) *\r\n                                                  elem[1].data.price) *\r\n                                          elem[0].data.amount\r\n                                      ).toFixed(decimalPoint)\r\n                                  )\r\n                                : \"something went wrong\"}\r\n                        </td>\r\n                        {/* 수익률 */}\r\n\r\n                        {elem[1] && elem[0] ? (\r\n                            <td\r\n                                id=\"text_align_right\"\r\n                                // className={\r\n                                //     elem[1].data.price /\r\n                                //         elem[0].data.avgPrice >\r\n                                //     0\r\n                                //         ? \"plus\"\r\n                                //         : \"minus\"\r\n                                // }\r\n                                style={\r\n                                    elem[1].data.price / elem[0].data.avgPrice -\r\n                                        1 >=\r\n                                    0\r\n                                        ? { color: \"green\", fontWeight: \"bold\" }\r\n                                        : { color: \"red\", fontWeight: \"bold\" }\r\n                                }\r\n                            >\r\n                                {elem[0].data.avgPrice\r\n                                    ? numberWithCommas(\r\n                                          (\r\n                                              (elem[1].data.price /\r\n                                                  elem[0].data.avgPrice -\r\n                                                  1) *\r\n                                              100\r\n                                          ).toFixed(2) + \"%\"\r\n                                      )\r\n                                    : \"0%\"}\r\n                            </td>\r\n                        ) : (\r\n                            // : (\r\n                            //     <td style={{ color: \"red\" }}>\r\n                            //         numberWithCommas( ( (currPrice[i].data.price /\r\n                            //         elem[0].data.avgPrice - 1) * 100\r\n                            //         ).toFixed(decimalPoint) + \"%\" )\r\n                            //     </td>\r\n                            // )\r\n                            \"something went wrong\"\r\n                        )}\r\n\r\n                        {/* <td id=\"text_align_center\">\r\n                            <Button\r\n                                key={i}\r\n                                // newStockInfo={elem[0].data}\r\n                                // category={title}\r\n                                ticker={elem[1].data.code}\r\n                                variant=\"contained\"\r\n                                onClick={() =>\r\n                                    handleDelete(\r\n                                        i,\r\n                                        elem[0].data.stock,\r\n                                        title\r\n                                    )\r\n                                }\r\n                            >\r\n                                EDIT\r\n                            </Button>\r\n                        </td> */}\r\n                        <td id=\"text_align_center\">\r\n                            {elem[0] && (\r\n                                <FormModalHooks\r\n                                    handleReRender={handleReRender}\r\n                                    portfolioId={portfolioId}\r\n                                    userState={userState}\r\n                                    formType=\"stock_update\"\r\n                                    buttonText=\"등록\"\r\n                                    stockInfo={elem[0].data.stock}\r\n                                />\r\n                            )}\r\n\r\n                            {/* <Button\r\n                                key={i}\r\n                                // newStockInfo={elem[0].data}\r\n                                // category={title}\r\n                                ticker={elem[1].data.code}\r\n                                variant=\"contained\"\r\n                                onClick={() =>\r\n                                    handleDelete(\r\n                                        i,\r\n                                        elem[0].data.stock,\r\n                                        title\r\n                                    )\r\n                                }\r\n                            >\r\n                                기록\r\n                            </Button> */}\r\n                        </td>\r\n                        <td id=\"text_align_center\">\r\n                            <Button\r\n                                key={i}\r\n                                // newStockInfo={elem[0].data}\r\n                                // category={title}\r\n                                ticker={elem[1].data.code}\r\n                                variant=\"contained\"\r\n                                onClick={() =>\r\n                                    handleDelete(i, elem[0].data.stock, title)\r\n                                }\r\n                            >\r\n                                삭제\r\n                            </Button>\r\n                        </td>\r\n                    </tr>\r\n                    {/* && isExpanded.includes(elem[1].data.code) */}\r\n                    {elem[0] && (\r\n                        <OneStockDetailedTradingHistory\r\n                            userState={userState}\r\n                            portfolioId={portfolioId}\r\n                            code={elem[1].data.code}\r\n                            stockInfo={elem[0].data.stock}\r\n                            isExpanded={isExpanded}\r\n                        />\r\n                    )}\r\n                    {/* <tr>\r\n                        <td>sss</td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                    </tr> */}\r\n                </>\r\n            );\r\n        })\r\n    );\r\n}\r\n\r\nexport default EasyTableBody2;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport EasyTableBody from \"./EasyTableBody\";\r\nimport EasyTableBody2 from \"./EasyTableBody2\";\r\nimport ReactTableEasy from \"../Tables/ReactTableEasy\";\r\n// const URL = \"https://jsonplaceholder.typicode.com/users\";\r\n\r\nfunction EasyTable({\r\n    title,\r\n    DATA,\r\n    userState,\r\n    portfolioId,\r\n    handleUsdCost,\r\n    setKrwCost,\r\n    handleNowKrValue,\r\n    handleNowUsaValue,\r\n    handleKrTodayEarning,\r\n    handleUsaTodayEarning,\r\n}) {\r\n    const [tableData, setTableData] = useState([]);\r\n    const [stockInfo, setStockInfo] = useState([]);\r\n    const [currPrice, setCurrPrice] = useState([]);\r\n    const [stockCodeAndCurrPrice, setStockCodeAndCurrPrice] = useState([]);\r\n    useEffect(() => {\r\n        setTableData(DATA);\r\n    }, []);\r\n    useEffect(() => {\r\n        setTableData(DATA);\r\n    }, [DATA]);\r\n    useEffect(() => {\r\n        setStockInfo([]);\r\n        setCurrPrice([]);\r\n        setStockCodeAndCurrPrice([]);\r\n        tableData.map(async (e) => {\r\n            console.log(\"e;\", e);\r\n\r\n            let encoded = encodeURI(JSON.stringify(e));\r\n            const stockInfo2 = await axios.get(\r\n                `/portfolio/${portfolioId}/stock/info/${encoded}`,\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                    },\r\n                }\r\n            );\r\n            const priceNow = await axios.get(`/stock/now/${e.code}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                },\r\n            });\r\n            console.log(\"stockInfo2priceNow:\", stockInfo2, priceNow);\r\n            if (stockInfo2.data.stock.country == \"korea\") {\r\n                // 현재 평가금\r\n                handleNowKrValue(stockInfo2.data.amount * priceNow.data.price);\r\n                // 오늘 하루 수익\r\n                handleKrTodayEarning(\r\n                    stockInfo2.data.amount *\r\n                        priceNow.data.price *\r\n                        priceNow.data.changePercent *\r\n                        0.01\r\n                );\r\n            } else if (stockInfo2.data.stock.country == \"usa\") {\r\n                handleNowUsaValue(stockInfo2.data.amount * priceNow.data.price);\r\n                handleUsaTodayEarning(\r\n                    stockInfo2.data.amount *\r\n                        priceNow.data.price *\r\n                        priceNow.data.changePercent *\r\n                        0.01\r\n                );\r\n            }\r\n            console.log(\"resresrresr:\", stockInfo2, priceNow);\r\n\r\n            setStockInfo((prev) => [...prev, stockInfo2]);\r\n            setCurrPrice((prev) => [...prev, priceNow]);\r\n            setStockCodeAndCurrPrice((prev) => [\r\n                ...prev,\r\n                [stockInfo2, priceNow],\r\n            ]);\r\n        });\r\n    }, [tableData]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"currPrice:\", currPrice);\r\n    }, [currPrice]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"title, DATA:\", title, tableData);\r\n    }, [tableData]);\r\n\r\n    const renderHeader = () => {\r\n        let headerElement = [\r\n            \"티커\",\r\n            \"종목명\",\r\n            \"현재가\",\r\n            \"등락률\",\r\n            \"등락\",\r\n            \"주\",\r\n            \"매입평균가\",\r\n            \"매수금\",\r\n            \"마켓벨류\",\r\n            \"총 수익\",\r\n            \"하루 수익\",\r\n            \"수익률\",\r\n            \"매수/매도 내역\",\r\n            \"삭제\",\r\n        ];\r\n\r\n        return headerElement.map((key, idx) => {\r\n            return <th key={idx}>{key.toUpperCase()}</th>;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1\r\n                id=\"title_sm\"\r\n                style={{\r\n                    color: \"#3f50b4\",\r\n                    fontWeight: \"bold\",\r\n                    textAlign: \"left\",\r\n                    fontSize: \"1.3rem\",\r\n                }}\r\n            >\r\n                {title}\r\n            </h1>\r\n            {/* <ReactTableEasy\r\n                        title={title}\r\n                        stockInfo={stockInfo}\r\n                        stockCodeAndCurrPrice={stockCodeAndCurrPrice}\r\n                        DATA={tableData}\r\n                        currPrice={currPrice}\r\n                        portfolioId={portfolioId}\r\n                        userState={userState}\r\n                        handleUsdCost={handleUsdCost}\r\n                        setKrwCost\r\n                        /> */}\r\n\r\n            <table id=\"employee\">\r\n                <thead>\r\n                    <tr>{renderHeader()}</tr>\r\n                </thead>\r\n                <tbody>\r\n                    <EasyTableBody2\r\n                        title={title}\r\n                        stockInfo={stockInfo}\r\n                        stockCodeAndCurrPrice={stockCodeAndCurrPrice}\r\n                        DATA={tableData}\r\n                        currPrice={currPrice}\r\n                        portfolioId={portfolioId}\r\n                        userState={userState}\r\n                        handleUsdCost={handleUsdCost}\r\n                        setKrwCost\r\n                    />\r\n                </tbody>\r\n            </table>\r\n            <br />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EasyTable;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport EasyTable from \"../Tables/EasyTable\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GlobalContext } from \"./../../store/GlobalState\";\r\n\r\nfunction CategoryPortfolioTable({\r\n    portfolioId,\r\n    handleUsdCost,\r\n    handleKoreanCost,\r\n    handleNowKrValue,\r\n    handleKrTodayEarning,\r\n    handleUsaTodayEarning,\r\n    handleNowUsaValue,\r\n}) {\r\n    const { userState, userDispatch } = useContext(GlobalContext);\r\n    const [stockCategoryList, setStockCategoryList] = useState([]);\r\n    const [stockTitleAndStockList, setStockTitleAndStockList] = useState([]);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [insideCategoryStockList, setInsideCategoryStockList] = useState([]);\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        axios\r\n            .get(`/portfolio/${portfolioId}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                },\r\n            })\r\n            .then((res) => {\r\n                console.log(\"axios.get(`/portfolio/${portfolioId}`:\", res);\r\n\r\n                // getstock Category 결과값: {미국 주식: Array(4), 한국 주식: Array(2)}\r\n                console.log(\r\n                    \"getstock Category:\",\r\n                    res.data.assetCategory.stockCategory\r\n                );\r\n                for (const [key, value] of Object.entries(\r\n                    res.data.holdings.stockHoldings\r\n                )) {\r\n                    console.log(\"value222:\", value);\r\n                    if (value.stock.country == \"korea\") {\r\n                        handleKoreanCost(value.amount * value.avgPrice);\r\n                    } else if (value.stock.country == \"usa\") {\r\n                        handleUsdCost(value.amount * value.avgPrice);\r\n                    }\r\n                }\r\n\r\n                // for (const property in object) {\r\n                //     console.log(`${property}: ${object[property]}`);\r\n                // }\r\n                // console.log(\r\n                //     \"getstock Category Stock[0]:\",\r\n                //     e.data.assetCategory.stockCategory[\"한국 주식\"][0]\r\n                // );\r\n\r\n                // console.log(\r\n                //     \"JSON.stringify( getstock Category Stock[0]:\",\r\n                //     JSON.stringify(\r\n                //         e.data.assetCategory.stockCategory[\"한국 주식\"][0]\r\n                //     )\r\n                // );\r\n                // const encoded = encodeURI(\r\n                //     JSON.stringify(\r\n                //         e.data.assetCategory.stockCategory[\"한국 주식\"][0]\r\n                //     )\r\n                // );\r\n                // console.log(\r\n                //     \"encodeURI JSON.stringify( getstock Category Stock[0]:\",\r\n                //     encoded\r\n                // );\r\n                setStockCategoryList(res.data.assetCategory.stockCategory);\r\n            })\r\n            .then((res) => {});\r\n    }, [userState.rerender]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"stockCategoryList:\", stockCategoryList);\r\n        setStockTitleAndStockList([]);\r\n        for (const [key, value] of Object.entries(stockCategoryList)) {\r\n            console.log(`${key} + ${JSON.stringify(value)}`);\r\n            setStockTitleAndStockList((prevState) => [\r\n                ...prevState,\r\n                [key, value],\r\n            ]);\r\n        }\r\n    }, [stockCategoryList]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"stockTitleAndStockList:\", stockTitleAndStockList);\r\n    }, [stockTitleAndStockList]);\r\n\r\n    // useEffect(() => {\r\n    //     userDispatch({\r\n    //         type: \"krw_cost_zero\",\r\n    //     });\r\n    //     userDispatch({\r\n    //         type: \"usd_cost_zero\",\r\n    //     });\r\n    //     userDispatch({\r\n    //         type: \"krw_real_time_value_zero\",\r\n    //     });\r\n    //     userDispatch({\r\n    //         type: \"usd_real_time_value_zero\",\r\n    //     });\r\n    //     userDispatch({\r\n    //         type: \"krw_today_value_zero\",\r\n    //     });\r\n    //     userDispatch({\r\n    //         type: \"usd_today_value_zero\",\r\n    //     });\r\n    // }, []);\r\n\r\n    return (\r\n        <div>\r\n            {stockTitleAndStockList.map((res) => {\r\n                return (\r\n                    <EasyTable\r\n                        handleUsdCost={handleUsdCost}\r\n                        setKrwCost\r\n                        title={res[0]}\r\n                        DATA={res[1]}\r\n                        portfolioId={portfolioId}\r\n                        userState={userState}\r\n                        stockCategoryList={stockCategoryList}\r\n                        handleNowKrValue={handleNowKrValue}\r\n                        handleNowUsaValue={handleNowUsaValue}\r\n                        handleKrTodayEarning={handleKrTodayEarning}\r\n                        handleUsaTodayEarning={handleUsaTodayEarning}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CategoryPortfolioTable;\r\n","export const pastel_tone = [\r\n    {\r\n        id: 0,\r\n        hex: \"#FF6384\",\r\n    },\r\n    {\r\n        id: 1,\r\n        hex: \"#36A2EB\",\r\n    },\r\n    {\r\n        id: 2,\r\n        hex: \"#FFCE56\",\r\n    },\r\n    {\r\n        id: 3,\r\n        hex: \"#E0BBE4\",\r\n    },\r\n    {\r\n        id: 4,\r\n        hex: \"#957DAD\",\r\n    },\r\n    {\r\n        id: 5,\r\n        hex: \"#A3D6D4\",\r\n    },\r\n    {\r\n        id: 6,\r\n        hex: \"#F1E9CB\",\r\n    },\r\n    {\r\n        id: 7,\r\n        hex: \"#C2D5A7\",\r\n    },\r\n    {\r\n        id: 8,\r\n        hex: \"#B0ABCA\",\r\n    },\r\n    {\r\n        id: 9,\r\n        hex: \"#E2A9BE\",\r\n    },\r\n    {\r\n        id: 10,\r\n        hex: \"#E1C6AC\",\r\n    },\r\n    // from here https://coolors.co/\r\n    {\r\n        id: 11,\r\n        hex: \"#85f3d5\",\r\n    },\r\n    {\r\n        id: 12,\r\n        hex: \"#54bcf9\",\r\n    },\r\n    {\r\n        id: 13,\r\n        hex: \"#fee43e\",\r\n    },\r\n    {\r\n        id: 14,\r\n        hex: \"#e261b5\",\r\n    },\r\n    {\r\n        id: 15,\r\n        hex: \"#9d67e5\",\r\n    },\r\n    {\r\n        id: 16,\r\n        hex: \"#F7EF64\",\r\n    },\r\n    {\r\n        id: 17,\r\n        hex: \"#E2EEC2\",\r\n    },\r\n    {\r\n        id: 18,\r\n        hex: \"#B4D7A2\",\r\n    },\r\n    {\r\n        id: 19,\r\n        hex: \"#D291BC\",\r\n    },\r\n    {\r\n        id: 20,\r\n        hex: \"#FFDFD3\",\r\n    },\r\n    {\r\n        id: 21,\r\n        hex: \"#E0BBE4\",\r\n    },\r\n    {\r\n        id: 22,\r\n        hex: \"#957DAD\",\r\n    },\r\n    {\r\n        id: 23,\r\n        hex: \"#D291BC\",\r\n    },\r\n    {\r\n        id: 24,\r\n        hex: \"#FEC8D8\",\r\n    },\r\n    {\r\n        id: 25,\r\n        hex: \"#FFDFD3\",\r\n    },\r\n];\r\n","export const colors_piecharts = [\r\n    {\r\n        id: 0,\r\n        hex: \"#3f50b4\",\r\n    },\r\n    {\r\n        id: 1,\r\n        hex: \"#2f96f4\",\r\n    },\r\n    {\r\n        id: 2,\r\n        hex: \"#64bcb1\",\r\n    },\r\n    {\r\n        id: 3,\r\n        hex: \"#8bc34a\",\r\n    },\r\n    {\r\n        id: 4,\r\n        hex: \"#ee9500\",\r\n    },\r\n    {\r\n        id: 5,\r\n        hex: \"#e45022\",\r\n    },\r\n    {\r\n        id: 6,\r\n        hex: \"#e56667\",\r\n    },\r\n    {\r\n        id: 7,\r\n        hex: \"#d16de3\",\r\n    },\r\n    {\r\n        id: 8,\r\n        hex: \"#6a4eb6\",\r\n    },\r\n    {\r\n        id: 9,\r\n        hex: \"#785449\",\r\n    },\r\n    {\r\n        id: 10,\r\n        hex: \"#E1C6AC\",\r\n    },\r\n    {\r\n        id: 11,\r\n        hex: \"#799FCB\",\r\n    },\r\n    {\r\n        id: 12,\r\n        hex: \"#95B4CC\",\r\n    },\r\n    {\r\n        id: 13,\r\n        hex: \"#AFC7D0\",\r\n    },\r\n    {\r\n        id: 14,\r\n        hex: \"#F9665E\",\r\n    },\r\n    {\r\n        id: 15,\r\n        hex: \"#FEC9C9\",\r\n    },\r\n    {\r\n        id: 16,\r\n        hex: \"#F7EF64\",\r\n    },\r\n    {\r\n        id: 17,\r\n        hex: \"#E2EEC2\",\r\n    },\r\n    {\r\n        id: 18,\r\n        hex: \"#B4D7A2\",\r\n    },\r\n    {\r\n        id: 19,\r\n        hex: \"#D291BC\",\r\n    },\r\n    {\r\n        id: 20,\r\n        hex: \"#FFDFD3\",\r\n    },\r\n    {\r\n        id: 21,\r\n        hex: \"#E0BBE4\",\r\n    },\r\n    {\r\n        id: 22,\r\n        hex: \"#957DAD\",\r\n    },\r\n    {\r\n        id: 23,\r\n        hex: \"#D291BC\",\r\n    },\r\n    {\r\n        id: 24,\r\n        hex: \"#FEC8D8\",\r\n    },\r\n    {\r\n        id: 25,\r\n        hex: \"#FFDFD3\",\r\n    },\r\n];\r\n","// import \"./styles.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport { PieChart, Pie, Cell } from \"recharts\";\r\nimport { pastel_tone } from \"../json/pastel_tone_color.js\";\r\nimport { colors_piecharts } from \"../json/colors_for_piecharts.js\";\r\n\r\n// const dataAA = [\r\n//     { name: \"Group A\", value: 400 },\r\n//     { name: \"Group B\", value: 300 },\r\n//     { name: \"Group C\", value: 300 },\r\n//     { name: \"Group D\", value: 200 },\r\n// ];\r\n// const data02 = [\r\n//     { name: \"A1\", value: 100 },\r\n//     { name: \"A2\", value: 300 },\r\n//     { name: \"B1\", value: 100 },\r\n//     { name: \"B2\", value: 80 },\r\n//     { name: \"B3\", value: 40 },\r\n//     { name: \"B4\", value: 30 },\r\n//     { name: \"B5\", value: 50 },\r\n//     { name: \"C1\", value: 100 },\r\n//     { name: \"C2\", value: 200 },\r\n//     { name: \"D1\", value: 150 },\r\n//     { name: \"D2\", value: 50 },\r\n// ];\r\n\r\nexport default function RechartsDoublePie3({ dataAA, data02 }) {\r\n    const RADIAN = Math.PI / 180;\r\n\r\n    // const RADIAN = Math.PI / 180;\r\n    const renderCustomizedLabel = ({\r\n        cx,\r\n        cy,\r\n        midAngle,\r\n        innerRadius,\r\n        outerRadius,\r\n        percent,\r\n        index,\r\n        name,\r\n        nowRatio,\r\n        categoryName,\r\n    }) => {\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.7;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n        return (\r\n            <text\r\n                x={x}\r\n                y={y}\r\n                fill=\"white\"\r\n                textAnchor={x > cx ? \"start\" : \"end\"}\r\n                dominantBaseline=\"central\"\r\n                fontSize={12}\r\n            >\r\n                <tspan textAnchor=\"middle\" dx=\"0\">{`${categoryName}`}</tspan>\r\n                {/* <tspan\r\n                    textAnchor=\"middle\"\r\n                    dx=\"-40\"\r\n                    dy=\"20\"\r\n                >{`${nowRatio.toFixed(1)}%`}</tspan> */}\r\n            </text>\r\n        );\r\n    };\r\n    let renderLabel = (entry) => {\r\n        if (entry.country == \"usa\") {\r\n            return `${entry.stockCode} \r\n            ${entry.nowRatio}%`;\r\n        }\r\n        return `${entry.stockName} \r\n        ${entry.nowRatio}%`;\r\n    };\r\n    useEffect(() => {\r\n        console.log(\"ratio:\", dataAA);\r\n    }, []);\r\n\r\n    {\r\n        /* {`${name} `}\r\n                {`${(percent * 100).toFixed(1)}%`} */\r\n    }\r\n    // const renderCustomizedLabel = ({ name, value }) => {\r\n    //     // const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    //     // const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    //     // const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    //     return (\r\n    //         <text textAnchor=\"middle\" dominantBaseline=\"central\">\r\n    //             {`${name} `}\r\n    //         </text>\r\n    //     );\r\n    // };\r\n    const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\r\n    return (\r\n        <PieChart\r\n            width={800}\r\n            height={400}\r\n            margin={{ top: 0, right: 50, left: 150, bottom: 5 }}\r\n        >\r\n            <Pie\r\n                data={dataAA}\r\n                dataKey=\"nowRatio\"\r\n                cx={200}\r\n                cy={200}\r\n                outerRadius={90}\r\n                // fill=\"#1c1c68\"\r\n                fill=\"#6464c2\"\r\n                labelLine={false}\r\n                isAnimationActive={false}\r\n                label={renderCustomizedLabel}\r\n            >\r\n                {dataAA.map((entry, index) => (\r\n                    <Cell\r\n                        fill={\r\n                            pastel_tone[(index + 12) % pastel_tone.length][\r\n                                \"hex\"\r\n                            ]\r\n                        }\r\n                    />\r\n                ))}\r\n            </Pie>\r\n            <Pie\r\n                data={data02}\r\n                dataKey=\"nowRatio\"\r\n                cx={200}\r\n                cy={200}\r\n                innerRadius={100}\r\n                outerRadius={140}\r\n                // fill=\"#e35022\"\r\n                fill=\"#82ca9d\"\r\n                isAnimationActive={false}\r\n                label={renderLabel}\r\n                allowDataOverflow={true}\r\n            >\r\n                {data02.map((entry, index) => (\r\n                    <Cell\r\n                        fill={\r\n                            colors_piecharts[index % colors_piecharts.length][\r\n                                \"hex\"\r\n                            ]\r\n                        }\r\n                    />\r\n                ))}\r\n            </Pie>\r\n        </PieChart>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ReactSelect from \"react-select\";\r\nimport { watch, useForm, Controller } from \"react-hook-form\";\r\nimport ShowAndAddCategory from \"./ShowAndAddCategory\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { GlobalContext } from \"../../store/GlobalState\";\r\n\r\nimport { DatePicker } from \"@y0c/react-datepicker\";\r\nimport styled from \"styled-components\";\r\nimport StockAutoCompleteSearchBar from \"./StockAutoCompleteSearchBar\";\r\nimport StockAutoComplete2 from \"./StockAutoComplete2\";\r\nimport StockAutoComplete3 from \"./StockAutoComplete3\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport StockChart from \"../Charts/StockChart\";\r\n\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: \"center\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nfunction FormHookForGoalAssetRatio({\r\n    portfolioId,\r\n    handleModalIsOpen,\r\n    formType,\r\n    passedStockInfo,\r\n}) {\r\n    const classes = useStyles();\r\n\r\n    const [checked, setChecked] = useState(true);\r\n    const [ticker, setTicker] = useState(\"\");\r\n    // const [tickerLen, setTickerLen] = useState(0);\r\n    const defaultValues = {\r\n        ReactDatepicker: \"\",\r\n        ReactSelect: {},\r\n        numberFormat: 0,\r\n        // Checkbox: checked,\r\n        price: 0,\r\n    };\r\n    const { userState, userDispatch, stockDispatch } = useContext(\r\n        GlobalContext\r\n    );\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        watch,\r\n        errors,\r\n        control,\r\n        setValue,\r\n    } = useForm({\r\n        defaultValues,\r\n    });\r\n    const watchFields = watch([\"Checkbox\"]); // you can also target specific fields by their names\r\n    console.log(\"watchFields:\", watchFields);\r\n\r\n    const [category, setCategory] = useState(\"\");\r\n    const [action, setAction] = useState(\"\");\r\n    const [timestamp, setTimestamp] = useState(0);\r\n    const [stockInfo, setStockInfo] = useState({});\r\n\r\n    let history = useHistory();\r\n\r\n    const stockInfoHandle = (param) => {\r\n        setStockInfo(param);\r\n    };\r\n\r\n    const categoryHandle = (param) => {\r\n        setCategory(param);\r\n    };\r\n\r\n    const tickerHandle = (param) => {\r\n        setTicker(param);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\" second passedStockInfo:\", passedStockInfo);\r\n        console.log(\"stockInfo:\", stockInfo);\r\n    }, [stockInfo]);\r\n    useEffect(() => {\r\n        console.log(\"timestamp:\", timestamp);\r\n    }, [timestamp]);\r\n    useEffect(() => {\r\n        console.log(\"checked:\", checked);\r\n    }, [checked]);\r\n    useEffect(() => {\r\n        if (passedStockInfo) {\r\n            setTicker(passedStockInfo.code);\r\n        }\r\n    }, [passedStockInfo]);\r\n    useEffect(() => {\r\n        console.log(\"ticker:\", ticker);\r\n        console.log(\"ticker length:\", ticker.length);\r\n        // setTickerLen(ticker.length);\r\n\r\n        axios\r\n            .get(`/stock/now/${ticker}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                },\r\n            })\r\n            .then((res) => {\r\n                // console.log(\"rpiceNow:\", parseFloat(res.data.price));\r\n                setValue(\"price\", res.data.price.toString());\r\n            });\r\n    }, [ticker]);\r\n    useEffect(() => {\r\n        console.log(\"date action:\", action);\r\n    }, [action]);\r\n    useEffect(() => {\r\n        console.log(\"category:\", category);\r\n    }, [category]);\r\n    const { id } = useParams();\r\n    const onSubmit = async (data) => {\r\n        console.log(\"data:\", data);\r\n        console.log(\"stockInfo:\", stockInfo);\r\n        console.log(\"category:\", category);\r\n        console.log(\"passedStockInf333o:\", passedStockInfo);\r\n        console.log(data.BuySellSelector.value == \"매수\" ? \"Buy\" : \"Sell\");\r\n        console.log(parseFloat(data.amount.replace(/,/g, \"\")));\r\n        console.log(parseFloat(data.price.replace(/,/g, \"\")));\r\n        console.log(timestamp);\r\n\r\n        // const response = await\r\n        if (data.Checkbox == false && data.BuySellSelector.value == \"매수\") {\r\n            // if (stockInfo.country == \"usa\") {\r\n            //     console.log(\r\n            //         `stockInfo.country == \"usa\"stockInfo.country == \"usa\"stockInfo.country == \"usa\",`,\r\n            //         parseFloat(data.amount.replace(/,/g, \"\")) *\r\n            //             parseFloat(data.price.replace(/,/g, \"\"))\r\n            //     );\r\n\r\n            axios\r\n                .post(\r\n                    `/portfolio/${portfolioId}/cash/history`,\r\n                    {\r\n                        cashFlowType: \"Deposit\",\r\n                        data: {\r\n                            balance:\r\n                                data.amount.replace(/,/g, \"\") *\r\n                                parseFloat(data.price.replace(/,/g, \"\")),\r\n                            country:\r\n                                stockInfo.country == \"usa\" ? \"usa\" : \"korea\",\r\n                            timestamp: timestamp - 10,\r\n                        },\r\n                    },\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                        },\r\n                    }\r\n                )\r\n                .then((res) => {\r\n                    alert(\"succ portfolio/${portfolioId}/cash/hist:\", res);\r\n                })\r\n                .catch((err) =>\r\n                    console.log(\"folio/${portfolioId}/cash/hist\", err)\r\n                );\r\n        }\r\n\r\n        // 주식 매매기록 업데이트 (not add)\r\n        if (formType == \"stock_update\") {\r\n            axios\r\n                .post(\r\n                    `/portfolio/${portfolioId}/stock/history`,\r\n                    {\r\n                        stock: passedStockInfo,\r\n                        history: {\r\n                            tradeType:\r\n                                data.BuySellSelector.value == \"매수\"\r\n                                    ? \"Buy\"\r\n                                    : \"Sell\",\r\n                            data: {\r\n                                amount: parseFloat(\r\n                                    data.amount.replace(/,/g, \"\")\r\n                                ),\r\n                                price: parseFloat(data.price.replace(/,/g, \"\")),\r\n                                timestamp: timestamp,\r\n                            },\r\n                        },\r\n                    },\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                        },\r\n                    }\r\n                )\r\n                .then((res) => {\r\n                    console.log(\"stock_update:\", res);\r\n                    handleModalIsOpen();\r\n                    userDispatch({ type: \"trigger_rerender\" });\r\n                })\r\n                .then(() => {\r\n                    history.push(`/portfolio/diverse/${portfolioId}`);\r\n                })\r\n                .catch((err) => {});\r\n        }\r\n        // else {\r\n        //     await axios.post(\r\n        //         `/portfolio/${portfolioId}/cash/history`,\r\n        //         {\r\n        //             cashFlowType: \"Deposit\",\r\n        //             data: {\r\n        //                 balance: parseInt(\r\n        //                     parseFloat(data.amount.replace(/,/g, \"\")) *\r\n        //                         parseFloat(data.price.replace(/,/g, \"\")) +\r\n        //                         1\r\n        //                 ),\r\n        //                 country: \"korea\",\r\n        //                 timestamp: timestamp,\r\n        //             },\r\n        //         },\r\n        //         {\r\n        //             headers: {\r\n        //                 Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n        //             },\r\n        //         }\r\n        //     );\r\n        // }\r\n        else {\r\n            await axios\r\n                .post(\r\n                    `/portfolio/${portfolioId}/stock`,\r\n                    {\r\n                        stock: stockInfo,\r\n                        category: category,\r\n                        tradingHistories: [\r\n                            {\r\n                                tradeType:\r\n                                    data.BuySellSelector.value == \"매수\"\r\n                                        ? \"Buy\"\r\n                                        : \"Sell\",\r\n                                data: {\r\n                                    amount: parseFloat(\r\n                                        data.amount.replace(/,/g, \"\")\r\n                                    ),\r\n                                    price: parseFloat(\r\n                                        data.price.replace(/,/g, \"\")\r\n                                    ),\r\n                                    timestamp: timestamp,\r\n                                },\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        headers: {\r\n                            Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                        },\r\n                    }\r\n                )\r\n                .then((res) => console.log(\"res:\", res))\r\n                .then((res) => {\r\n                    handleModalIsOpen();\r\n                    userDispatch({ type: \"trigger_rerender\" });\r\n                })\r\n                .then(() => {\r\n                    history.push(`/portfolio/diverse/${portfolioId}`);\r\n                })\r\n                .catch((err) => {\r\n                    alert(\"현금이 부족합니다. 현금을 등록해주세요.\");\r\n                    console.log(\"err:\", err);\r\n                });\r\n        }\r\n    };\r\n\r\n    console.log(watch(\"example\")); // you can watch individual input by pass the name of the input\r\n\r\n    return (\r\n        <Body>\r\n            <div>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={6}>\r\n                        {/* <Paper> */}\r\n                        {passedStockInfo ? (\r\n                            <StockChart ticker={passedStockInfo.code} />\r\n                        ) : (\r\n                            <StockChart ticker={ticker} />\r\n                        )}\r\n                        {/* </Paper> */}\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Paper>\r\n                            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                                {/* <Label>티커</Label> */}\r\n                                {/* <StockAutoCompleteSearchBar\r\n                    stockInfoHandle={stockInfoHandle}\r\n                    tickerHandle={tickerHandle}\r\n                    stockInfo={stockInfo}\r\n                /> */}\r\n                                {/* <StockAutoComplete2 /> */}\r\n                                <br />\r\n                                <StockAutoComplete3\r\n                                    stockInfoHandle={stockInfoHandle}\r\n                                    tickerHandle={tickerHandle}\r\n                                    stockInfo={stockInfo}\r\n                                    userState={userState}\r\n                                    passedStockInfo={passedStockInfo}\r\n                                />\r\n                                {/* <Controller /> */}\r\n                                <label className=\"section-container\">\r\n                                    거래\r\n                                </label>\r\n                                <Controller\r\n                                    as={ReactSelect}\r\n                                    options={[\r\n                                        { value: \"매수\", label: \"매수\" },\r\n                                        { value: \"매도\", label: \"매도\" },\r\n                                    ]}\r\n                                    name=\"BuySellSelector\"\r\n                                    isClearable\r\n                                    control={control}\r\n                                />\r\n                                <section>\r\n                                    <label className=\"section-container\">\r\n                                        가격 {ticker}\r\n                                    </label>\r\n                                    <div />\r\n                                    <Controller\r\n                                        as={NumberFormat}\r\n                                        thousandSeparator\r\n                                        // name=\"price\"\r\n                                        name=\"price\"\r\n                                        className=\"input\"\r\n                                        control={control}\r\n                                    />\r\n                                </section>\r\n                                <section>\r\n                                    <label className=\"section-container\">\r\n                                        수량\r\n                                    </label>\r\n                                    <div />\r\n                                    <Controller\r\n                                        as={NumberFormat}\r\n                                        thousandSeparator\r\n                                        // type=\"number\"\r\n                                        name=\"amount\"\r\n                                        className=\"input\"\r\n                                        control={control}\r\n                                        // onClick={}\r\n                                        //   onClick={this.props.closeModal}\r\n                                    />\r\n                                </section>\r\n                                <section>\r\n                                    <label className=\"section-container\">\r\n                                        날짜\r\n                                    </label>\r\n                                    <div />\r\n                                    <DatePicker\r\n                                        onChange={(date) => {\r\n                                            console.log(date);\r\n\r\n                                            setAction(\r\n                                                // date\r\n                                                `${date[\"$y\"]}-${\r\n                                                    date[\"$M\"] + 1 < 10\r\n                                                        ? \"0\" + (date[\"$M\"] + 1)\r\n                                                        : date[\"$M\"] + 1\r\n                                                }-${\r\n                                                    date[\"$D\"] < 10\r\n                                                        ? \"0\" + date[\"$D\"]\r\n                                                        : date[\"$D\"]\r\n                                                }`\r\n                                            );\r\n                                            var newDate = new Date(\r\n                                                date[\"$y\"],\r\n                                                date[\"$M\"],\r\n                                                date[\"$D\"]\r\n                                            );\r\n                                            setTimestamp(newDate.getTime());\r\n                                        }}\r\n                                    />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"date\"\r\n                                        value={action}\r\n                                        // defaultValue=\"0\"\r\n                                        className=\"disable\"\r\n                                        ref={register}\r\n                                    />\r\n                                    {/* <hr /> */}\r\n                                </section>\r\n                                <br />\r\n                                {formType !== \"stock_update\" && (\r\n                                    <section>\r\n                                        <ShowAndAddCategory\r\n                                            categoryHandle={categoryHandle}\r\n                                            id={id}\r\n                                        />\r\n                                    </section>\r\n                                )}\r\n                                <section onClick={() => setChecked(!checked)}>\r\n                                    <Controller\r\n                                        name=\"Checkbox\"\r\n                                        control={control}\r\n                                        defaultValue={true}\r\n                                        // rules={{ required: true }}\r\n                                        render={(props) => (\r\n                                            <Checkbox\r\n                                                onChange={(e) =>\r\n                                                    props.onChange(\r\n                                                        e.target.checked\r\n                                                    )\r\n                                                }\r\n                                                checked={props.value}\r\n                                            />\r\n                                        )} // props contains: onChange, onBlur and value\r\n                                    />\r\n                                    {/* <Controller\r\n                        as={Checkbox}\r\n                        name=\"Checkbox\"\r\n                        ref={register}\r\n                        type=\"checkbox\"\r\n                        control={control}\r\n                        defaultChecked={checked}\r\n                        checked={checked}\r\n                    /> */}\r\n                                    <span>매수시, 등록한 현금에서 뺍니다.</span>\r\n                                </section>\r\n                                {/* <Label>Example</Label>\r\n                <Input name=\"example\" defaultValue=\"test\" ref={register} /> */}\r\n                                {/* <Label>ExampleRequired</Label>\r\n                <Input\r\n                    name=\"exampleRequired\"\r\n                    ref={register({ required: true, maxLength: 10 })}\r\n                /> */}\r\n                                {errors.exampleRequired && (\r\n                                    <p>This field is required</p>\r\n                                )}\r\n                                <input type=\"submit\" value=\"Save\" />\r\n                            </Form>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </Body>\r\n    );\r\n}\r\nconst Body = styled.div`\r\n    // height: 100%;\r\n    margin: 0 0 0 0;\r\n\r\n    // background: #0e101c;\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\",\r\n        \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\r\n        \"Helvetica Neue\", sans-serif;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    max-width: 500px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    line-height: 2;\r\n    text-align: left;\r\n    display: block;\r\n    margin-bottom: 10px;\r\n    margin-top: 20px;\r\n    font-size: 16px;\r\n    font-weight: 300;\r\n    color: black;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    padding: 10px 15px;\r\n    font-size: 14px;\r\n`;\r\nexport default FormHookForGoalAssetRatio;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport FormHookSecond from \"./FormHookSecond\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormHookForGoalAssetRatio from \"./FormHookForGoalAssetRatio\";\r\nModal.setAppElement(\"#root\");\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& > *\": {\r\n            margin: 0,\r\n            padding: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nfunction FormModalForGoalAssetRatio({\r\n    portfolioId,\r\n    userState,\r\n    handleReRender,\r\n    formType,\r\n    buttonText,\r\n    stockInfo,\r\n}) {\r\n    const classes = useStyles();\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const handleModalIsOpen = () => {\r\n        setModalIsOpen((prev) => !prev);\r\n    };\r\n    useEffect(() => {\r\n        console.log(\"formodal stockInfo: \", stockInfo);\r\n        handleReRender();\r\n    }, [modalIsOpen]);\r\n    return (\r\n        <div style={{ marginTop: \"-18px\", padding: 0, height: \"10px\" }}>\r\n            <Button\r\n                className={classes.root}\r\n                variant=\"contained\"\r\n                // color=\"primary\"\r\n                onClick={() => setModalIsOpen(true)}\r\n            >\r\n                {buttonText}\r\n            </Button>\r\n            <br />\r\n            <br />\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                onRequestClose={() => setModalIsOpen(false)}\r\n                // style={{\r\n                //     overlay: {\r\n                //         backgroundColor: \"grey\",\r\n                //     },\r\n                //     content: {\r\n                //         color: \"orange\",\r\n                //     },\r\n                // }}\r\n                // shouldCloseOnOverlayClick={false}\r\n            >\r\n                <div>\r\n                    <button onClick={() => setModalIsOpen(false)}>Close</button>\r\n                </div>\r\n                <FormHookForGoalAssetRatio\r\n                    handleModalIsOpen={handleModalIsOpen}\r\n                    portfolioId={portfolioId}\r\n                    userState={userState}\r\n                    formType={formType}\r\n                    passedStockInfo={stockInfo}\r\n                />\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormModalForGoalAssetRatio;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Divider, Typography } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 400,\r\n    },\r\n    bullet: {\r\n        display: \"inline-block\",\r\n        margin: \"0 2px\",\r\n        transform: \"scale(0.8)\",\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n\r\n    TextField: {\r\n        width: \"5px\",\r\n    },\r\n});\r\nexport default function SimpleCardGoalRatio({\r\n    categoryAndStockData,\r\n    assetCategory,\r\n    cashRatio,\r\n    userState,\r\n    portfolioId,\r\n}) {\r\n    const [values, setValues] = useState({\r\n        // textmask: \"(1  )    -    \",\r\n        // numberformat: \"1320\",\r\n    });\r\n    const [cash, setCash] = useState({});\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>•</span>;\r\n    // 주식카테고리와 주식들 정보\r\n    const [titleStock, setTitleStock] = useState(categoryAndStockData);\r\n\r\n    const [categoryAndStockAndRatio, setCategoryAndStockAndRatio] = useState(\r\n        []\r\n    );\r\n    const [sum2, setSum] = useState(0);\r\n\r\n    useEffect(() => {\r\n        console.log(\"categoryAndStockData:\", categoryAndStockData);\r\n        setTitleStock(categoryAndStockData);\r\n    }, [categoryAndStockData]);\r\n\r\n    // sum1 += parseInt(value);\r\n    useEffect(() => {\r\n        setSum(0);\r\n        Object.entries(values).map(([key, value]) => {\r\n            setSum((prev) => prev + parseFloat(value));\r\n        });\r\n        Object.entries(cash).map(([key, value]) => {\r\n            setSum((prev) => prev + parseFloat(value));\r\n        });\r\n    }, [cash, values]);\r\n    useEffect(() => {\r\n        console.log(\"values@:\", values);\r\n    }, [values]);\r\n    useEffect(() => {\r\n        // console.log(\"sum2@:\", sum2);\r\n        console.log(\"sum@:\", sum2);\r\n    }, [sum2]);\r\n    useEffect(() => {\r\n        setSum(0);\r\n        Object.entries(titleStock).map(([key, value]) => {\r\n            value.map((elem) => {\r\n                console.log(\r\n                    \"2c222ode:\",\r\n                    elem.stock.code,\r\n                    \"goalRatio:\",\r\n                    elem.goalRatio\r\n                );\r\n                setSum((prev) => prev + parseFloat(elem.goalRatio));\r\n                setValues((prev) => {\r\n                    return {\r\n                        ...prev,\r\n                        [elem.stock.code]: parseFloat(elem.goalRatio),\r\n                    };\r\n                });\r\n            });\r\n        });\r\n\r\n        cashRatio.map((elem, i) => {\r\n            setSum((prev) => prev + parseFloat(elem.goalRatio));\r\n            setCash((prev) => {\r\n                return {\r\n                    ...prev,\r\n                    [i]: parseFloat(elem.goalRatio),\r\n                };\r\n            });\r\n        });\r\n    }, [titleStock]);\r\n\r\n    useEffect(() => {\r\n        // console.log(\"sum2@:\", sum2);\r\n        console.log(\"cash@:\", cash);\r\n    }, [cash]);\r\n\r\n    const handleSubmit = () => {\r\n        var jsonResult = JSON.parse(`{\"ratios\":\r\n            {\r\n                \"stockRatios\": {\r\n                    ${Object.entries(titleStock).map(([key, value]) => {\r\n                        return `\"${key}\": [${value.map(\r\n                            (elem) =>\r\n                                `{\"stock\": ${JSON.stringify(elem.stock)},\r\n                                \"ratio\": ${\r\n                                    values[elem.stock.code]\r\n                                        ? values[elem.stock.code]\r\n                                        : 0\r\n                                }\r\n                            }`\r\n                        )}\r\n                        ]`;\r\n                    })}\r\n                },\r\n                \r\n                \"cashRatios\": {\r\n                    \"Cash\": [\r\n                        {\"country\" : \"usa\", \"ratio\" : ${cash[0] ? cash[0] : 0}},\r\n                        {\"country\" : \"korea\", \"ratio\" : ${\r\n                            cash[1] ? cash[1] : 0\r\n                        }}\r\n                    ]\r\n                }\r\n            }\r\n        ,\r\n        \"categories\": \r\n        ${JSON.stringify(assetCategory)}\r\n        }`);\r\n\r\n        console.log(\"jsonResult:\", jsonResult);\r\n\r\n        axios\r\n            .post(`/portfolio/${portfolioId}/goal`, jsonResult, {\r\n                headers: {\r\n                    Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                },\r\n            })\r\n            .then((res) => {\r\n                console.log(\"goal success\");\r\n                alert(\"저장되었습니다.\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"100%\");\r\n                alert(\"100% 합계를 맞춰주세요.\");\r\n            });\r\n    };\r\n    const handleCashChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setCash((prev) => {\r\n            return {\r\n                ...prev,\r\n                [name]: parseFloat(value),\r\n            };\r\n        });\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        var sum1 = 0;\r\n        const { name, value } = event.target;\r\n        setValues((prev) => {\r\n            return {\r\n                ...prev,\r\n                [name]: parseFloat(value),\r\n            };\r\n        });\r\n    };\r\n\r\n    function NumberFormatCustom(props) {\r\n        const { inputRef, onChange, ...other } = props;\r\n\r\n        return (\r\n            <NumberFormat\r\n                {...other}\r\n                getInputRef={inputRef}\r\n                onValueChange={(values) => {\r\n                    onChange({\r\n                        target: {\r\n                            name: props.name,\r\n                            value: values.value,\r\n                        },\r\n                    });\r\n                }}\r\n                thousandSeparator\r\n                isNumericString\r\n                prefix=\"$\"\r\n            />\r\n        );\r\n    }\r\n    const StyledTextField = withStyles((theme) => ({\r\n        root: {\r\n            // margin: theme.spacing(2),\r\n            width: 50,\r\n            \"& .MuiInputBase-root\": {\r\n                color: theme.palette.primary.main,\r\n                // height: 60,\r\n                \"& input\": {\r\n                    textAlign: \"right\",\r\n                },\r\n            },\r\n        },\r\n    }))(TextField);\r\n\r\n    return (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent>\r\n                <div>합계: {sum2}</div>\r\n                <span style={{ float: \"right\" }}>\r\n                    {\"                 \"} 목표 비율 설정\r\n                    {\"                 \"}\r\n                </span>\r\n                <br />\r\n                {Object.entries(titleStock).map(([key, value]) => {\r\n                    return (\r\n                        <>\r\n                            <div\r\n                                style={{\r\n                                    fontWeight: \"bold\",\r\n                                    marginBottom: \"7px\",\r\n                                }}\r\n                            >\r\n                                {key}\r\n                            </div>\r\n                            {value.map((arr) => {\r\n                                return (\r\n                                    <div>\r\n                                        {arr.stock.country == \"usa\"\r\n                                            ? arr.stock.code\r\n                                            : arr.stock.name}{\" \"}\r\n                                        {arr.nowRatio}% {\"       /        \"}\r\n                                        {/* / {arr.goalRatio}% */}\r\n                                        {/* <TextField\r\n                                            id=\"standard-number\"\r\n                                            label=\"Number\"\r\n                                            type=\"number\"\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                        /> */}\r\n                                        <TextField\r\n                                            id={arr.stock.code}\r\n                                            // id=\"formatted-numberformat-input\"\r\n                                            // label=\"react-number-format\"\r\n                                            // value={values.numberformat}\r\n                                            value={values[arr.stock.code]}\r\n                                            defaultValue={\r\n                                                values[arr.stock.code]\r\n                                            }\r\n                                            min={0}\r\n                                            // value={}\r\n                                            onChange={handleChange}\r\n                                            name={arr.stock.code}\r\n                                            type=\"number\"\r\n                                            InputProps={{\r\n                                                endAdornment: \"%\",\r\n                                                // inputComponent: NumberFormatCustom,\r\n                                            }}\r\n                                            size=\"small\"\r\n                                        />\r\n                                    </div>\r\n                                );\r\n                            })}\r\n\r\n                            <br />\r\n                        </>\r\n                    );\r\n                })}\r\n\r\n                <div\r\n                    style={{\r\n                        fontWeight: \"bold\",\r\n                        marginBottom: \"7px\",\r\n                    }}\r\n                >\r\n                    현금\r\n                </div>\r\n                {cashRatio.map((elem, i) => {\r\n                    return (\r\n                        <div>\r\n                            {i == 0 ? \"KRW\" : \"USD\"}: {elem.nowRatio}% /\r\n                            {/* {elem.goalRatio}% */}\r\n                            <TextField\r\n                                id={i}\r\n                                // id=\"formatted-numberformat-input\"\r\n                                // label=\"react-number-format\"\r\n                                // value={values.numberformat}\r\n                                value={cash[i]}\r\n                                defaultValue={elem.goalRatio}\r\n                                // defaultValue={elem.goalRatio}\r\n                                min={0}\r\n                                // value={}\r\n                                onChange={handleCashChange}\r\n                                name={i}\r\n                                type=\"number\"\r\n                                InputProps={{\r\n                                    endAdornment: \"%\",\r\n                                    // inputComponent: NumberFormatCustom,\r\n                                }}\r\n                                size=\"small\"\r\n                            />\r\n                        </div>\r\n                    );\r\n                })}\r\n                {/* <Typography variant=\"h5\" component=\"h2\">\r\n                    be{bull}nev{bull}o{bull}lent\r\n                </Typography>\r\n                <Typography className={classes.pos} color=\"textSecondary\">\r\n                    adjective\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                    well meaning and kindly.\r\n                    <br />\r\n                    {'\"a benevolent smile\"'}\r\n                </Typography> */}\r\n                <br />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                >\r\n                    Save\r\n                </Button>\r\n            </CardContent>\r\n            {/* <CardActions>\r\n                <Button size=\"small\">Learn More</Button>\r\n            </CardActions> */}\r\n        </Card>\r\n    );\r\n}\r\n","import React, {\r\n    useMemo,\r\n    useState,\r\n    useEffect,\r\n    useContext,\r\n    useReducer,\r\n} from \"react\";\r\nimport { userReducer } from \"../../store/reducers\";\r\nimport { useTable } from \"react-table\";\r\nimport styled from \"styled-components\";\r\nimport PortfolioAdd from \"../Content/PortfolioAdd\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ShowAndAddCategory from \"../Form/ShowAndAddCategory\";\r\n// import EasyTable from \"../Tables/EasyTable\";\r\nimport CashTable from \"../Tables/CashTable\";\r\nimport StockAutoCompleteSearchBar from \"../Form/StockAutoCompleteSearchBar\";\r\nimport FormModalHooks from \"../Form/FormModalHooks\";\r\nimport CategoryPortfolioTable from \"../Form/CategoryPortfolioTable\";\r\nimport { GlobalContext } from \"../../store/GlobalState\";\r\nimport RechartsDoublePie3 from \"../Charts/RechartsDoublePie3\";\r\nimport FormModalForGoalAssetRatio from \"../Form/FormModalForGoalAssetRatio\";\r\n// import Doughnut2 from \"../Charts/Doughnut2\";\r\nimport axios from \"axios\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SimpleCardGoalRatio from \"../Form/SimpleCardGoalRatio\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport StockChart from \"../Charts/StockChart\";\r\n\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\n\r\n// const data01 = [\r\n//     { name: \"미국 주식\", value: 400 },\r\n//     { name: \"한국 주식\", value: 300 },\r\n// ];\r\n// const data02 = [\r\n//     { name: \"A1\", value: 100 },\r\n//     { name: \"A2\", value: 300 },\r\n// ];\r\nconst DiversifiedPortfolio = () => {\r\n    const { userState, userDispatch, stockDispatch } = useContext(\r\n        GlobalContext\r\n    );\r\n\r\n    const [koreanCost, setKoreanCost] = useState(0);\r\n    const [usdCost, setUsdCost] = useState(0);\r\n    const [currencyRate, setCurrencyRate] = useState(0);\r\n    const [nowKrValue, setNowKrValue] = useState(0);\r\n    const [nowUsaValue, setNowUsaValue] = useState(0);\r\n    const [krTodayEarning, setKrTodayEarning] = useState(0);\r\n    const [usaTodayEarning, setUsaTodayEarning] = useState(0);\r\n    // const [usdCost, setUsdCost] = useState(0);\r\n    const [krwUsdSum, setKrwUsdSum] = useState(0);\r\n    const [tmp, setKrwCost] = useState(userState.krwCost);\r\n    const [rechartsStockData, setRechartsStockData] = useState({});\r\n    const [rechartsCategoryData, setRechartsCategoryData] = useState({});\r\n    const [categoryAndStockData, setCategoryAndStockData] = useState({});\r\n    const [cashRatio, setCashRatio] = useState([]);\r\n    const [assetCategory, setAssetCategory] = useState([]);\r\n    // const [rechartsData, setRechartsData] = useState({})\r\n\r\n    const [reRender, setReRenter] = useState(true);\r\n    const handleReRender = () => setReRenter((prev) => !prev);\r\n    const handleKrTodayEarning = (earning) => {\r\n        setKrTodayEarning((prev) => prev + earning);\r\n    };\r\n    const handleUsaTodayEarning = (earning) => {\r\n        setUsaTodayEarning((prev) => prev + earning);\r\n    };\r\n    const handleUsdCost = (cost) => {\r\n        setUsdCost((prev) => prev + cost);\r\n    };\r\n\r\n    const handleKoreanCost = (cost) => {\r\n        setKoreanCost((prev) => prev + cost);\r\n    };\r\n    const handleNowKrValue = (cost) => {\r\n        setNowKrValue((prev) => prev + cost);\r\n    };\r\n    const handleNowUsaValue = (cost) => {\r\n        setNowUsaValue((prev) => prev + cost);\r\n    };\r\n    const [row, setRow] = useState([\r\n        {\r\n            symbol: \"ss\",\r\n            name: \"\",\r\n            cost: \"\",\r\n            marketValue: \"\",\r\n            return: \"\",\r\n        },\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"cashRatio:\", cashRatio);\r\n    }, [cashRatio]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"koreanCost:\", koreanCost);\r\n    }, [koreanCost]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"usdCost:\", usdCost);\r\n    }, [usdCost]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"nowKrValue:\", nowKrValue);\r\n    }, [nowKrValue]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"nowUsaValue:\", nowUsaValue);\r\n    }, [nowUsaValue]);\r\n\r\n    const { id } = useParams();\r\n\r\n    // useEffect(() => {\r\n    //     setKoreanCost(userState.krwCost);\r\n    // }, [userState.krwCost]);\r\n    // useEffect(async () => {\r\n    //     axios\r\n    //         .get(`/portfolio/${id}`, {\r\n    //             headers: {\r\n    //                 Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n    //             },\r\n    //         })\r\n    //         .then((e) => {\r\n    //             console.log(\"axios.olioId}`:\", e);\r\n    //             // getstock Category 결과값: {미국 주식: Array(4), 한국 주식: Array(2)}\r\n    //             // setStockCategoryList(e.data.assetCategory.stockCategory);\r\n    //         });\r\n    // }, []);\r\n\r\n    // useEffect(() => {\r\n    // }, [userState.rerender]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"/krwusd\", {\r\n                headers: {\r\n                    Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                },\r\n            })\r\n            .then((res) => {\r\n                var currencyRate = res.data.rate;\r\n                setCurrencyRate(currencyRate);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setRechartsStockData([]);\r\n        setRechartsCategoryData([]);\r\n        setCategoryAndStockData([]);\r\n        setCashRatio([]);\r\n        axios\r\n            .get(`/portfolio/${id}/status`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                },\r\n            })\r\n            .then((res) => {\r\n                console.log(\"status result:\", res.data.assetRatio);\r\n                var tmp = \"test\";\r\n                var cnt = 0;\r\n                var obj1 = res.data.assetRatio.stockRatios;\r\n                setCategoryAndStockData(obj1);\r\n                setCashRatio(res.data.assetRatio.cashRatios.Cash);\r\n                setAssetCategory(res.data.assetCategory);\r\n                // key는 미국주식, 한국주식... value는 [goalRatio , nowRatio ,,,]\r\n                for (const [key, value] of Object.entries(obj1)) {\r\n                    console.log(\"key, value:\", key, value);\r\n                    value.map((e2) => {\r\n                        console.log(\"e2:\", e2);\r\n                        if (e2.nowRatio) {\r\n                            setRechartsStockData((prev) => [\r\n                                ...prev,\r\n                                {\r\n                                    country: e2.stock.country,\r\n                                    stockCode: e2.stock.code,\r\n                                    stockName: e2.stock.name,\r\n                                    nowRatio: e2.nowRatio,\r\n                                },\r\n                            ]);\r\n                            cnt += e2.nowRatio;\r\n                        }\r\n                    });\r\n                    if (cnt) {\r\n                        setRechartsCategoryData((prev) => [\r\n                            ...prev,\r\n                            {\r\n                                categoryName: key,\r\n                                nowRatio: cnt,\r\n                            },\r\n                        ]);\r\n                    }\r\n                    cnt = 0;\r\n                }\r\n                console.log(\"test::\", res.data.assetRatio.cashRatios);\r\n                var cashArr = res.data.assetRatio.cashRatios[\"Cash\"];\r\n                if (cashArr) {\r\n                    cashArr.map((e3) => {\r\n                        if (e3.nowRatio) {\r\n                            setRechartsStockData((prev) => [\r\n                                ...prev,\r\n                                {\r\n                                    country: null,\r\n                                    stockCode: e3.country,\r\n                                    stockName:\r\n                                        e3.country == \"korea\" ? \"KRW\" : \"USD\",\r\n                                    nowRatio: e3.nowRatio,\r\n                                },\r\n                            ]);\r\n                            cnt += e3.nowRatio;\r\n                        }\r\n                    });\r\n                }\r\n                if (cnt) {\r\n                    setRechartsCategoryData((prev) => [\r\n                        ...prev,\r\n                        {\r\n                            categoryName: \"현금\",\r\n                            nowRatio: cnt,\r\n                        },\r\n                    ]);\r\n                }\r\n            });\r\n    }, [userState.rerender]);\r\n    useEffect(() => {\r\n        console.log(\"rechartsStockData:\", rechartsStockData);\r\n        console.log(\"rechartsCategoryData:\", rechartsCategoryData);\r\n    }, [rechartsStockData]);\r\n    // useEffect(() => {\r\n    //     axios\r\n    //         .get(\"/krwusd\", {\r\n    //             headers: {\r\n    //                 Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n    //             },\r\n    //         })\r\n    //         .then((res) => {\r\n    //             var currencyRate = res.data.rate;\r\n\r\n    //             setUsdCost(currencyRate * userState.usdCost);\r\n    //             console.log(\"res:\", res);\r\n    //         });\r\n    // }, [userState.usdCost]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"diverse:\", id);\r\n        // setKrwCost(userState.krwCost);\r\n        console.log(\"userstate useeff:\", userState);\r\n        console.log(\"userState.krwCost:\", userState.krwCost);\r\n        console.log(\"userState.krwCost:\", userState.usdRealTimeValue);\r\n    }, [userState]);\r\n\r\n    const handleAddRow = () => {\r\n        const item = {\r\n            symbol: \"gggss\",\r\n            name: \"\",\r\n            cost: \"\",\r\n            marketValue: \"\",\r\n            return: \"\",\r\n        };\r\n        setRow([...row, item]);\r\n        // this.setState({\r\n        //     rows: [...this.state.rows, item],\r\n        // });\r\n        console.log(row);\r\n    };\r\n\r\n    function numberWithCommas(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    return (\r\n        <div>\r\n            <Background>\r\n                <Container2>\r\n                    <WatchListContainer>\r\n                        <div className=\"watchlist\">\r\n                            포트폴리오 {\"            \"}\r\n                            {/* <Link to=\"/portfolio/add\">\r\n                                <span className=\"portfolio_add\">\r\n                                    +새로운 포트폴리오\r\n                                </span>\r\n                            </Link> */}\r\n                        </div>\r\n\r\n                        {/* KRWFormModal */}\r\n                    </WatchListContainer>\r\n                    <FlexContainer>\r\n                        <div className=\"divbox\">\r\n                            <div>\r\n                                <small>오늘 수익</small>\r\n                                <h2>\r\n                                    ￦\r\n                                    {numberWithCommas(\r\n                                        (\r\n                                            krTodayEarning +\r\n                                            currencyRate * usaTodayEarning\r\n                                        ).toFixed(0)\r\n                                    )}\r\n                                </h2>\r\n                            </div>\r\n                            <div></div>\r\n                            <div className=\"box_right\">\r\n                                <small>\r\n                                    {\" \"}\r\n                                    {(\r\n                                        ((krTodayEarning +\r\n                                            currencyRate * usaTodayEarning) /\r\n                                            (nowKrValue +\r\n                                                nowUsaValue * currencyRate -\r\n                                                (krTodayEarning +\r\n                                                    currencyRate *\r\n                                                        usaTodayEarning))) *\r\n                                        100\r\n                                    ).toFixed(2)}\r\n                                    %\r\n                                </small>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"divbox\">\r\n                            <div>\r\n                                <small>총 평가순익</small>\r\n                                <h2>\r\n                                    ￦\r\n                                    {numberWithCommas(\r\n                                        (\r\n                                            nowKrValue +\r\n                                            nowUsaValue * currencyRate -\r\n                                            (koreanCost +\r\n                                                usdCost * currencyRate)\r\n                                        ).toFixed(0)\r\n                                    )}\r\n                                </h2>\r\n                            </div>\r\n                            <div></div>\r\n                            <div className=\"box_right\">\r\n                                <small>\r\n                                    {\" \"}\r\n                                    {numberWithCommas(\r\n                                        (\r\n                                            ((nowKrValue +\r\n                                                nowUsaValue * currencyRate -\r\n                                                (koreanCost +\r\n                                                    usdCost * currencyRate)) /\r\n                                                (koreanCost +\r\n                                                    usdCost * currencyRate)) *\r\n                                            100\r\n                                        ).toFixed(2)\r\n                                    )}\r\n                                    %\r\n                                </small>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"divbox\">\r\n                            <div>\r\n                                <small>주식 매입금</small>\r\n                                {/* <h2>￦{krwCost}</h2> */}\r\n                                <h2\r\n                                // onClick={() =>\r\n                                //     userDispatch({\r\n                                //         type: \"krw_cost_update\",\r\n                                //         cost: 1000,\r\n                                //     })\r\n                                // }\r\n                                >\r\n                                    ￦\r\n                                    {numberWithCommas(\r\n                                        (\r\n                                            koreanCost +\r\n                                            usdCost * currencyRate\r\n                                        ).toFixed(0)\r\n                                        // currencyRate * userState.usdCost\r\n                                    )}\r\n                                </h2>\r\n                            </div>\r\n                            <div></div>\r\n                        </div>\r\n                        <div className=\"divbox\">\r\n                            <div>\r\n                                <small>주식 평가금</small>\r\n                                <h2>\r\n                                    ￦\r\n                                    {numberWithCommas(\r\n                                        (\r\n                                            nowKrValue +\r\n                                            nowUsaValue * currencyRate\r\n                                        )\r\n                                            // userState.krwRealTimeValue +\r\n                                            // currencyRate *\r\n                                            //     userState.usdRealTimeValue\r\n                                            .toFixed(0)\r\n                                    )}\r\n                                </h2>\r\n                            </div>\r\n                            <div></div>\r\n                        </div>\r\n                        {/* <div>\r\n                            <small>총 평가금액</small>\r\n                            <h2>$630,864.89</h2>\r\n                        </div>\r\n                        <div>\r\n                            <small>총 매입비용</small>\r\n                            <h2>$531,111.60</h2>\r\n                        </div> */}\r\n                    </FlexContainer>\r\n                    <br />\r\n                    <br />\r\n                    <div>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-evenly\"\r\n                            alignment=\"stretch\"\r\n                            spacing={1}\r\n                        >\r\n                            <Grid container item xs={12} sm={6} spacing={3}>\r\n                                {/* <h1 style={{ backgroundColor: \"green\" }}>hi</h1> */}\r\n                                <div style={{ marginLeft: \"500\" }}>\r\n                                    {rechartsCategoryData.length &&\r\n                                        rechartsStockData.length && (\r\n                                            <RechartsDoublePie3\r\n                                                dataAA={rechartsCategoryData}\r\n                                                data02={rechartsStockData}\r\n                                                // style={{ paddingLeft: \"1000\" }}\r\n                                            />\r\n                                        )}\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid container item xs={12} sm={6} spacing={3}>\r\n                                {/* <h1 style={{ backgroundColor: \"green\" }}>hi</h1> */}\r\n                                <SimpleCardGoalRatio\r\n                                    categoryAndStockData={categoryAndStockData}\r\n                                    assetCategory={assetCategory}\r\n                                    cashRatio={cashRatio}\r\n                                    userState={userState}\r\n                                    portfolioId={id}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n\r\n                    <br />\r\n                    <br />\r\n                    {/* <div>\r\n                        <CssBaseline />\r\n                        <Container maxWidth=\"sm\">\r\n                            <Typography\r\n                                component=\"div\"\r\n                                style={{\r\n                                    backgroundColor: \"#cfe8fc\",\r\n                                    height: \"30vh\",\r\n                                }}\r\n                            />\r\n                        </Container>\r\n                    </div> */}\r\n                    {/* <RechartsDoublePie2 /> */}\r\n                    {/* <RechartsDoublePie\r\n                        data01={data01}\r\n                        data02={data02}\r\n                        color=\"red\"\r\n                    /> */}\r\n                    {/* {/* <Doughnut2 />  */}\r\n                    <div>\r\n                        <FormModalHooks\r\n                            handleReRender={handleReRender}\r\n                            portfolioId={id}\r\n                            userState={userState}\r\n                            formType=\"firstAdd\"\r\n                            buttonText=\"주식등록\"\r\n                        />\r\n                    </div>\r\n                    {/* <div style={{ marginLeft: \"100px\" }}>\r\n                        <FormModalForGoalAssetRatio\r\n                            handleReRender={handleReRender}\r\n                            portfolioId={id}\r\n                            userState={userState}\r\n                            buttonText=\"목표자산구성\"\r\n                        />\r\n                    </div> */}\r\n                    <CategoryPortfolioTable\r\n                        handleUsdCost={handleUsdCost}\r\n                        setKrwCost\r\n                        portfolioId={id}\r\n                        userState={userState}\r\n                        handleKoreanCost={handleKoreanCost}\r\n                        handleUsdCost={handleUsdCost}\r\n                        handleNowKrValue={handleNowKrValue}\r\n                        handleNowUsaValue={handleNowUsaValue}\r\n                        handleKrTodayEarning={handleKrTodayEarning}\r\n                        handleUsaTodayEarning={handleUsaTodayEarning}\r\n                    />\r\n                    {/* <StockAutoCompleteSearchBar suggestions={[]} /> */}\r\n                    {/* <PortfolioAdd row={row} setRow={setRow} /> */}\r\n                    {/* <ShowAndAddCategory id={id} /> */}\r\n                    <CashTable\r\n                        // setUsdCost\r\n                        // setKrwCost\r\n                        id={id}\r\n                        title=\"현금\"\r\n                        ticker=\"AAPL\"\r\n                        stockName=\"apple\"\r\n                    />\r\n                </Container2>\r\n            </Background>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst FlexContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    // background-color: DodgerBlue;\r\n    justify-content: space-between;\r\n\r\n    .box_right {\r\n        vertical-align: middle;\r\n        background-color: #eaf9ef;\r\n        width: 10rem;\r\n        padding: 10px;\r\n    }\r\n    .divbox {\r\n        display: flex;\r\n    }\r\n    .divbox > div > small {\r\n        // text-align: left;\r\n        // text-align: justify;\r\n\r\n        // display: flex;\r\n    }\r\n\r\n    .divbox:first-child > * {\r\n        text-align: left;\r\n    }\r\n\r\n    .divbox > div {\r\n        flex: 1 1 1;\r\n    }\r\n\r\n    div {\r\n        border-radius: 10px;\r\n        background-color: #fff;\r\n        width: 100%;\r\n        margin: 10px;\r\n        // padding: 10px 20px;\r\n        text-align: left;\r\n        // line-height: 75px;\r\n        font-size: 20px;\r\n        color: #565b75;\r\n    }\r\n\r\n    h2 {\r\n        font-size: 20px;\r\n    }\r\n`;\r\n\r\nconst Background = styled.div`\r\n    width: 100%;\r\n    height: 200vh;\r\n    background-color: #eff0f3;\r\n`;\r\n\r\nconst Container2 = styled.div`\r\n    width: 1580px;\r\n    margin: auto;\r\n`;\r\nconst WatchListContainer = styled.div`\r\n    margin: auto;\r\n    padding-top: 20px;\r\n    margin-bottom: 10px;\r\n\r\n    .watchlist {\r\n        padding: 40px 0;\r\n        line-height: 1.4;\r\n        font-size: 2rem;\r\n        font-weight: 900;\r\n        color: #13113c;\r\n        margin-right: 10px;\r\n        margin-bottom: 15px;\r\n        font-family: merriweather, sans-serif, Helvetica, Arial;\r\n    }\r\n`;\r\n\r\nexport default DiversifiedPortfolio;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ShortHeader from \"../header/ShortHeader\";\r\n\r\nimport PortfolioManageContent from \"../Content/PortfolioManageContent\";\r\nimport DiversifiedPortfolio from \"../pages/DiversifiedPortfolio\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction PortfolioManage({ history }) {\r\n    const location = useLocation();\r\n    let tmp = null;\r\n    if (history.location.state) {\r\n        tmp = JSON.stringify(history.location.state.data.portfolio_name);\r\n    }\r\n    return (\r\n        <div>\r\n            {tmp && <span>{tmp}</span>}\r\n            <PortfolioManageContent />\r\n            {/* <ShortHeader /> */}\r\n            <DiversifiedPortfolio />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PortfolioManage;\r\n","import React, { useReducer, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { userReducer, initialState } from \"../../store/reducers\";\r\nimport \"./newForm.css\";\r\nimport { GlobalContext } from \"../../store/GlobalState\";\r\nimport PortfolioManage from \"../../components/pages/PortfolioManage\";\r\n\r\nconst NewPortfolio = () => {\r\n    // const [state, dispatch] = useReducer(userReducer, initialState);\r\n    const { userState, userDispatch, stockDispatch } = useContext(\r\n        GlobalContext\r\n    );\r\n\r\n    let history = useHistory();\r\n    const onSubmit = (data) => {\r\n        // data.preventDefault();\r\n        console.log(\"data.portfolio_name:\", data.portfolio_name);\r\n        // alert(JSON.stringify(data));\r\n        axios\r\n            .post(\r\n                \"/portfolio\",\r\n                {\r\n                    name: data.portfolio_name.length\r\n                        ? data.portfolio_name\r\n                        : \"첫번째포트폴리오\",\r\n                },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${userState.loginInfo.access_token}`,\r\n                    },\r\n                }\r\n            )\r\n            .then((res) => {\r\n                console.log(res);\r\n                {\r\n                    history.push(\"/portfolio\");\r\n                }\r\n                return <PortfolioManage />;\r\n            })\r\n            .catch(() => {\r\n                console.log(\"err\");\r\n            });\r\n        // userDispatch({\r\n        //     type: \"create_portfolio\",\r\n        //     payload: data.portfolio_name    ,\r\n        // });\r\n        // history.push(\"/portfolio\", { data, id: 7, color: \"green\" });\r\n    };\r\n\r\n    const { register, handleSubmit } = useForm({\r\n        // defaultValues: {\r\n        //     firstName: \"bill\",\r\n        //     lastName: \"luo\",\r\n        //     email: \"test@test.com\",\r\n        //     isDeveloper: true,\r\n        // },\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Background>\r\n                <Container2>\r\n                    <WatchListContainer>\r\n                        <div className=\"watchlist\">포트폴리오 추가</div>\r\n                    </WatchListContainer>\r\n                    <Form>\r\n                        <form\r\n                            className=\"new_portfolio_form\"\r\n                            onSubmit={handleSubmit(onSubmit)}\r\n                        >\r\n                            <label htmlFor=\"portfolio_name\">\r\n                                포트폴리오 이름\r\n                            </label>\r\n                            <input\r\n                                className=\"new_portfolio_input\"\r\n                                name=\"portfolio_name\"\r\n                                placeholder=\"첫번째포트폴리오\"\r\n                                ref={register}\r\n                            />\r\n\r\n                            <label htmlFor=\"second_qeustion\">\r\n                                포트폴리오 설명\r\n                            </label>\r\n                            <input\r\n                                className=\"new_portfolio_input\"\r\n                                name=\"second_qeustion\"\r\n                                placeholder=\".\"\r\n                                ref={register}\r\n                            />\r\n                            {/*\r\n                            <label htmlFor=\"third_question\">Email</label>\r\n                            <input\r\n                                className=\"new_portfolio_input\"\r\n                                name=\"third_question\"\r\n                                placeholder=\"test@naver.com\"\r\n                                type=\"email\"\r\n                                ref={register}\r\n                            />\r\n\r\n                            <label>체크</label>\r\n                            <input\r\n                                className=\"new_portfolio_input\"\r\n                                name=\"check_\"\r\n                                type=\"checkbox\"\r\n                                ref={register}\r\n                            /> */}\r\n                            {/* <Link to=\"/portfolio\"> */}\r\n                            <input\r\n                                className=\"new_portfolio_input\"\r\n                                type=\"submit\"\r\n                            />\r\n                            {/* </Link> */}\r\n                        </form>\r\n                    </Form>\r\n                </Container2>\r\n            </Background>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Background = styled.div`\r\n    width: 100%;\r\n    height: 200vh;\r\n    background-color: #eff0f3;\r\n`;\r\n\r\nconst Container2 = styled.div`\r\n    width: 480px;\r\n    margin: auto;\r\n`;\r\n\r\nconst Form = styled.div`\r\n    width: 100%;\r\n    height: 550px;\r\n    background-color: #13113c;\r\n    padding: 20px;\r\n\r\n    border-radius: 15px;\r\n`;\r\n\r\nconst WatchListContainer = styled.div`\r\n    margin: auto;\r\n    padding-top: 20px;\r\n    .watchlist {\r\n        padding: 40px 0 0;\r\n        line-height: 1.4;\r\n        font-size: 2rem;\r\n        font-weight: 900;\r\n        color: #13113c;\r\n        margin-right: 10px;\r\n        margin-bottom: 15px;\r\n        font-family: merriweather, sans-serif, Helvetica, Arial;\r\n    }\r\n`;\r\nexport default NewPortfolio;\r\n","import React, { useState, useEffect } from \"react\";\n// import YahooHeader from \"./components/header/YahooHeader\";\nimport WallHeader from \"./components/header/WallHeader\";\nimport IntroPageContent from \"./components/Content/IntroPageContent\";\nimport PortfolioAdd from \"./components/Content/PortfolioAdd\";\n// import PortfolioManage from \"./components/pages/PortfolioManage\";\nimport WarrenBuffet from \"./components/Content/WarrenBuffet\";\n\nimport styled from \"styled-components\";\n// import Pie from \"./components/Charts/Pie\";\nimport Logo from \"./components/logo/Logo\";\nimport StockChart from \"./components/Charts/StockChart\";\nimport PortfolioManage from \"./components/pages/PortfolioManage\";\nimport DiversifiedPortfolio from \"./components/pages/DiversifiedPortfolio\";\nimport NewPortfolio from \"./components/pages/NewPortfolio\";\nimport Doughnut from \"./components/Charts/Doughnut\";\nimport buffett from \"./components/images/PNG/buffett.png\";\nimport BuffetTable from \"./components/Tables/WarrenTable\";\nimport BuySellModal from \"./components/Form/BuySellModal\";\nimport ModalPopup from \"./components/Form/ModalPopup\";\nimport DatePickerExample from \"./components/Form/DatePickerExample\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport { GlobalProvider } from \"./store/GlobalState\";\n\nfunction App() {\n    const triggerText = \"+\";\n    const onSubmit = (event) => {\n        event.preventDefault(event);\n        console.log(event.target.name.value);\n        console.log(event.target.email.value);\n    };\n    return (\n        <GlobalProvider>\n            <div\n                className=\"App\"\n                // style={{\n                //     position: \"absolute\",\n                //     left: \"50%\",\n                //     top: \"50%\",\n                //     transform: \"translate(-50%, -50%)\",\n                // }}\n            >\n                <Router>\n                    <WallHeader />\n\n                    <Switch>\n                        <Route exact path=\"/\" component={IntroPageContent} />\n                        <Route\n                            exact\n                            path=\"/portfolio\"\n                            component={PortfolioManage}\n                        />\n                        <Route\n                            exact\n                            path=\"/portfolio/add\"\n                            component={NewPortfolio}\n                        />\n                        <Route\n                            exact\n                            path=\"/portfolio/diverse/:id\"\n                            component={DiversifiedPortfolio}\n                        />\n                        <Route exact path=\"/warren\" component={WarrenBuffet} />;\n                        {/* component={WarrenBuffet} */}\n                    </Switch>\n\n                    {/* <Logo /> */}\n                    {/* <DatePickerExample /> */}\n                    {/* <BuySellModal /> */}\n                    {/* <Counter /> */}\n                    {/* <IntroPageContent /> */}\n                    {/* <ModalPopup triggerText={triggerText} onSubmit={onSubmit} /> */}\n                    {/* <ChartContainer>\n                    <Img src={buffett} />\n                    <Doughnut />\n                    <BuffetTable />\n                </ChartContainer> */}\n                    {/* <StockChart /> */}\n                    {/* <PortfolioManage /> */}\n                </Router>\n            </div>\n        </GlobalProvider>\n    );\n    const [items, setItems] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then((res) => res.json())\n            .then((json) => {\n                setIsLoaded(true);\n                setItems(json);\n            });\n    });\n\n    if (!isLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <div className=\"App\">\n                <WallHeader />\n                <Logo />\n                <IntroPageContent />\n                <ChartContainer>\n                    <Img src={buffett} />\n                    <Doughnut />\n                    <BuffetTable />\n                </ChartContainer>\n                <StockChart />\n                <PortfolioManage />\n            </div>\n        );\n    }\n}\n// return <div className=\"App\"></div>;\n\nconst ChartContainer = styled.div`\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 720px;\n    padding: 1em;\n`;\n\nconst Img = styled.img`\n    max-width: 720px;\n`;\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import \"./exercise\";\n// import { createStore } from \"react\";\n// import { Provider } from \"react-redux\";\n// import rootReducer from \"./modules\";\n// const store = createStore(rootReducer);\n\n{\n    /* <Provider store={store}> */\n}\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n// </Provider>,\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}